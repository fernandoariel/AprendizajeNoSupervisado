{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Práctico: Aprendizaje no supervisado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T03:20:48.450473Z",
     "start_time": "2020-10-13T03:20:48.446308Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "pd.set_option('display.max_columns',100)\n",
    "pd.set_option('display.max_rows',100)\n",
    "import itertools\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "import io\n",
    "pd.set_option('max_rows',None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:09.924212Z",
     "start_time": "2020-10-13T02:24:07.233156Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from plotly.offline import init_notebook_mode, plot,iplot\n",
    "import plotly.graph_objs as go\n",
    "init_notebook_mode(connected=True)\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Cargamos el dataset de FIFA 2020"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:10.647779Z",
     "start_time": "2020-10-13T02:24:09.925721Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sofifa_id</th>\n",
       "      <th>player_url</th>\n",
       "      <th>short_name</th>\n",
       "      <th>long_name</th>\n",
       "      <th>age</th>\n",
       "      <th>dob</th>\n",
       "      <th>height_cm</th>\n",
       "      <th>weight_kg</th>\n",
       "      <th>nationality</th>\n",
       "      <th>club</th>\n",
       "      <th>overall</th>\n",
       "      <th>potential</th>\n",
       "      <th>value_eur</th>\n",
       "      <th>wage_eur</th>\n",
       "      <th>player_positions</th>\n",
       "      <th>preferred_foot</th>\n",
       "      <th>international_reputation</th>\n",
       "      <th>weak_foot</th>\n",
       "      <th>skill_moves</th>\n",
       "      <th>work_rate</th>\n",
       "      <th>body_type</th>\n",
       "      <th>real_face</th>\n",
       "      <th>release_clause_eur</th>\n",
       "      <th>player_tags</th>\n",
       "      <th>team_position</th>\n",
       "      <th>team_jersey_number</th>\n",
       "      <th>loaned_from</th>\n",
       "      <th>joined</th>\n",
       "      <th>contract_valid_until</th>\n",
       "      <th>nation_position</th>\n",
       "      <th>nation_jersey_number</th>\n",
       "      <th>pace</th>\n",
       "      <th>shooting</th>\n",
       "      <th>passing</th>\n",
       "      <th>dribbling</th>\n",
       "      <th>defending</th>\n",
       "      <th>physic</th>\n",
       "      <th>gk_diving</th>\n",
       "      <th>gk_handling</th>\n",
       "      <th>gk_kicking</th>\n",
       "      <th>gk_reflexes</th>\n",
       "      <th>gk_speed</th>\n",
       "      <th>gk_positioning</th>\n",
       "      <th>player_traits</th>\n",
       "      <th>attacking_crossing</th>\n",
       "      <th>attacking_finishing</th>\n",
       "      <th>attacking_heading_accuracy</th>\n",
       "      <th>attacking_short_passing</th>\n",
       "      <th>attacking_volleys</th>\n",
       "      <th>skill_dribbling</th>\n",
       "      <th>...</th>\n",
       "      <th>movement_acceleration</th>\n",
       "      <th>movement_sprint_speed</th>\n",
       "      <th>movement_agility</th>\n",
       "      <th>movement_reactions</th>\n",
       "      <th>movement_balance</th>\n",
       "      <th>power_shot_power</th>\n",
       "      <th>power_jumping</th>\n",
       "      <th>power_stamina</th>\n",
       "      <th>power_strength</th>\n",
       "      <th>power_long_shots</th>\n",
       "      <th>mentality_aggression</th>\n",
       "      <th>mentality_interceptions</th>\n",
       "      <th>mentality_positioning</th>\n",
       "      <th>mentality_vision</th>\n",
       "      <th>mentality_penalties</th>\n",
       "      <th>mentality_composure</th>\n",
       "      <th>defending_marking</th>\n",
       "      <th>defending_standing_tackle</th>\n",
       "      <th>defending_sliding_tackle</th>\n",
       "      <th>goalkeeping_diving</th>\n",
       "      <th>goalkeeping_handling</th>\n",
       "      <th>goalkeeping_kicking</th>\n",
       "      <th>goalkeeping_positioning</th>\n",
       "      <th>goalkeeping_reflexes</th>\n",
       "      <th>ls</th>\n",
       "      <th>st</th>\n",
       "      <th>rs</th>\n",
       "      <th>lw</th>\n",
       "      <th>lf</th>\n",
       "      <th>cf</th>\n",
       "      <th>rf</th>\n",
       "      <th>rw</th>\n",
       "      <th>lam</th>\n",
       "      <th>cam</th>\n",
       "      <th>ram</th>\n",
       "      <th>lm</th>\n",
       "      <th>lcm</th>\n",
       "      <th>cm</th>\n",
       "      <th>rcm</th>\n",
       "      <th>rm</th>\n",
       "      <th>lwb</th>\n",
       "      <th>ldm</th>\n",
       "      <th>cdm</th>\n",
       "      <th>rdm</th>\n",
       "      <th>rwb</th>\n",
       "      <th>lb</th>\n",
       "      <th>lcb</th>\n",
       "      <th>cb</th>\n",
       "      <th>rcb</th>\n",
       "      <th>rb</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>158023</td>\n",
       "      <td>https://sofifa.com/player/158023/lionel-messi/...</td>\n",
       "      <td>L. Messi</td>\n",
       "      <td>Lionel Andrés Messi Cuccittini</td>\n",
       "      <td>32</td>\n",
       "      <td>1987-06-24</td>\n",
       "      <td>170</td>\n",
       "      <td>72</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>FC Barcelona</td>\n",
       "      <td>94</td>\n",
       "      <td>94</td>\n",
       "      <td>95500000</td>\n",
       "      <td>565000</td>\n",
       "      <td>RW, CF, ST</td>\n",
       "      <td>Left</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Medium/Low</td>\n",
       "      <td>Messi</td>\n",
       "      <td>Yes</td>\n",
       "      <td>195800000.0</td>\n",
       "      <td>#Dribbler, #Distance Shooter, #Crosser, #FK Sp...</td>\n",
       "      <td>RW</td>\n",
       "      <td>10.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2004-07-01</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>87.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Beat Offside Trap, Argues with Officials, Earl...</td>\n",
       "      <td>88</td>\n",
       "      <td>95</td>\n",
       "      <td>70</td>\n",
       "      <td>92</td>\n",
       "      <td>88</td>\n",
       "      <td>97</td>\n",
       "      <td>...</td>\n",
       "      <td>91</td>\n",
       "      <td>84</td>\n",
       "      <td>93</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>86</td>\n",
       "      <td>68</td>\n",
       "      <td>75</td>\n",
       "      <td>68</td>\n",
       "      <td>94</td>\n",
       "      <td>48</td>\n",
       "      <td>40</td>\n",
       "      <td>94</td>\n",
       "      <td>94</td>\n",
       "      <td>75</td>\n",
       "      <td>96</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>26</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>8</td>\n",
       "      <td>89+2</td>\n",
       "      <td>89+2</td>\n",
       "      <td>89+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>93+2</td>\n",
       "      <td>92+2</td>\n",
       "      <td>87+2</td>\n",
       "      <td>87+2</td>\n",
       "      <td>87+2</td>\n",
       "      <td>92+2</td>\n",
       "      <td>68+2</td>\n",
       "      <td>66+2</td>\n",
       "      <td>66+2</td>\n",
       "      <td>66+2</td>\n",
       "      <td>68+2</td>\n",
       "      <td>63+2</td>\n",
       "      <td>52+2</td>\n",
       "      <td>52+2</td>\n",
       "      <td>52+2</td>\n",
       "      <td>63+2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20801</td>\n",
       "      <td>https://sofifa.com/player/20801/c-ronaldo-dos-...</td>\n",
       "      <td>Cristiano Ronaldo</td>\n",
       "      <td>Cristiano Ronaldo dos Santos Aveiro</td>\n",
       "      <td>34</td>\n",
       "      <td>1985-02-05</td>\n",
       "      <td>187</td>\n",
       "      <td>83</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>Juventus</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>58500000</td>\n",
       "      <td>405000</td>\n",
       "      <td>ST, LW</td>\n",
       "      <td>Right</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>High/Low</td>\n",
       "      <td>C. Ronaldo</td>\n",
       "      <td>Yes</td>\n",
       "      <td>96500000.0</td>\n",
       "      <td>#Speedster, #Dribbler, #Distance Shooter, #Acr...</td>\n",
       "      <td>LW</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018-07-10</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>LS</td>\n",
       "      <td>7.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Long Throw-in, Selfish, Argues with Officials,...</td>\n",
       "      <td>84</td>\n",
       "      <td>94</td>\n",
       "      <td>89</td>\n",
       "      <td>83</td>\n",
       "      <td>87</td>\n",
       "      <td>89</td>\n",
       "      <td>...</td>\n",
       "      <td>89</td>\n",
       "      <td>91</td>\n",
       "      <td>87</td>\n",
       "      <td>96</td>\n",
       "      <td>71</td>\n",
       "      <td>95</td>\n",
       "      <td>95</td>\n",
       "      <td>85</td>\n",
       "      <td>78</td>\n",
       "      <td>93</td>\n",
       "      <td>63</td>\n",
       "      <td>29</td>\n",
       "      <td>95</td>\n",
       "      <td>82</td>\n",
       "      <td>85</td>\n",
       "      <td>95</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>24</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>11</td>\n",
       "      <td>91+3</td>\n",
       "      <td>91+3</td>\n",
       "      <td>91+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>81+3</td>\n",
       "      <td>81+3</td>\n",
       "      <td>81+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>65+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>65+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>53+3</td>\n",
       "      <td>53+3</td>\n",
       "      <td>53+3</td>\n",
       "      <td>61+3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>190871</td>\n",
       "      <td>https://sofifa.com/player/190871/neymar-da-sil...</td>\n",
       "      <td>Neymar Jr</td>\n",
       "      <td>Neymar da Silva Santos Junior</td>\n",
       "      <td>27</td>\n",
       "      <td>1992-02-05</td>\n",
       "      <td>175</td>\n",
       "      <td>68</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Paris Saint-Germain</td>\n",
       "      <td>92</td>\n",
       "      <td>92</td>\n",
       "      <td>105500000</td>\n",
       "      <td>290000</td>\n",
       "      <td>LW, CAM</td>\n",
       "      <td>Right</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>High/Medium</td>\n",
       "      <td>Neymar</td>\n",
       "      <td>Yes</td>\n",
       "      <td>195200000.0</td>\n",
       "      <td>#Speedster, #Dribbler, #Playmaker  , #Crosser,...</td>\n",
       "      <td>CAM</td>\n",
       "      <td>10.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017-08-03</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>LW</td>\n",
       "      <td>10.0</td>\n",
       "      <td>91.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Power Free-Kick, Injury Free, Selfish, Early C...</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>62</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>96</td>\n",
       "      <td>...</td>\n",
       "      <td>94</td>\n",
       "      <td>89</td>\n",
       "      <td>96</td>\n",
       "      <td>92</td>\n",
       "      <td>84</td>\n",
       "      <td>80</td>\n",
       "      <td>61</td>\n",
       "      <td>81</td>\n",
       "      <td>49</td>\n",
       "      <td>84</td>\n",
       "      <td>51</td>\n",
       "      <td>36</td>\n",
       "      <td>87</td>\n",
       "      <td>90</td>\n",
       "      <td>90</td>\n",
       "      <td>94</td>\n",
       "      <td>27</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>84+3</td>\n",
       "      <td>84+3</td>\n",
       "      <td>84+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>90+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>82+3</td>\n",
       "      <td>82+3</td>\n",
       "      <td>82+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>66+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>66+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>46+3</td>\n",
       "      <td>46+3</td>\n",
       "      <td>46+3</td>\n",
       "      <td>61+3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200389</td>\n",
       "      <td>https://sofifa.com/player/200389/jan-oblak/20/...</td>\n",
       "      <td>J. Oblak</td>\n",
       "      <td>Jan Oblak</td>\n",
       "      <td>26</td>\n",
       "      <td>1993-01-07</td>\n",
       "      <td>188</td>\n",
       "      <td>87</td>\n",
       "      <td>Slovenia</td>\n",
       "      <td>Atlético Madrid</td>\n",
       "      <td>91</td>\n",
       "      <td>93</td>\n",
       "      <td>77500000</td>\n",
       "      <td>125000</td>\n",
       "      <td>GK</td>\n",
       "      <td>Right</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Medium/Medium</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Yes</td>\n",
       "      <td>164700000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>GK</td>\n",
       "      <td>13.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014-07-16</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>GK</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>87.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>Flair, Acrobatic Clearance</td>\n",
       "      <td>13</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>43</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>60</td>\n",
       "      <td>67</td>\n",
       "      <td>88</td>\n",
       "      <td>49</td>\n",
       "      <td>59</td>\n",
       "      <td>78</td>\n",
       "      <td>41</td>\n",
       "      <td>78</td>\n",
       "      <td>12</td>\n",
       "      <td>34</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>65</td>\n",
       "      <td>11</td>\n",
       "      <td>68</td>\n",
       "      <td>27</td>\n",
       "      <td>12</td>\n",
       "      <td>18</td>\n",
       "      <td>87</td>\n",
       "      <td>92</td>\n",
       "      <td>78</td>\n",
       "      <td>90</td>\n",
       "      <td>89</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>183277</td>\n",
       "      <td>https://sofifa.com/player/183277/eden-hazard/2...</td>\n",
       "      <td>E. Hazard</td>\n",
       "      <td>Eden Hazard</td>\n",
       "      <td>28</td>\n",
       "      <td>1991-01-07</td>\n",
       "      <td>175</td>\n",
       "      <td>74</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>Real Madrid</td>\n",
       "      <td>91</td>\n",
       "      <td>91</td>\n",
       "      <td>90000000</td>\n",
       "      <td>470000</td>\n",
       "      <td>LW, CF</td>\n",
       "      <td>Right</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>High/Medium</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Yes</td>\n",
       "      <td>184500000.0</td>\n",
       "      <td>#Speedster, #Dribbler, #Acrobat</td>\n",
       "      <td>LW</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-07-01</td>\n",
       "      <td>2024.0</td>\n",
       "      <td>LF</td>\n",
       "      <td>10.0</td>\n",
       "      <td>91.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Beat Offside Trap, Selfish, Finesse Shot, Spee...</td>\n",
       "      <td>81</td>\n",
       "      <td>84</td>\n",
       "      <td>61</td>\n",
       "      <td>89</td>\n",
       "      <td>83</td>\n",
       "      <td>95</td>\n",
       "      <td>...</td>\n",
       "      <td>94</td>\n",
       "      <td>88</td>\n",
       "      <td>95</td>\n",
       "      <td>90</td>\n",
       "      <td>94</td>\n",
       "      <td>82</td>\n",
       "      <td>56</td>\n",
       "      <td>84</td>\n",
       "      <td>63</td>\n",
       "      <td>80</td>\n",
       "      <td>54</td>\n",
       "      <td>41</td>\n",
       "      <td>87</td>\n",
       "      <td>89</td>\n",
       "      <td>88</td>\n",
       "      <td>91</td>\n",
       "      <td>34</td>\n",
       "      <td>27</td>\n",
       "      <td>22</td>\n",
       "      <td>11</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>83+3</td>\n",
       "      <td>83+3</td>\n",
       "      <td>83+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>88+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>83+3</td>\n",
       "      <td>83+3</td>\n",
       "      <td>83+3</td>\n",
       "      <td>89+3</td>\n",
       "      <td>66+3</td>\n",
       "      <td>63+3</td>\n",
       "      <td>63+3</td>\n",
       "      <td>63+3</td>\n",
       "      <td>66+3</td>\n",
       "      <td>61+3</td>\n",
       "      <td>49+3</td>\n",
       "      <td>49+3</td>\n",
       "      <td>49+3</td>\n",
       "      <td>61+3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18273</th>\n",
       "      <td>245006</td>\n",
       "      <td>https://sofifa.com/player/245006/shuai-shao/20...</td>\n",
       "      <td>Shao Shuai</td>\n",
       "      <td>邵帅</td>\n",
       "      <td>22</td>\n",
       "      <td>1997-03-10</td>\n",
       "      <td>186</td>\n",
       "      <td>79</td>\n",
       "      <td>China PR</td>\n",
       "      <td>Beijing Renhe FC</td>\n",
       "      <td>48</td>\n",
       "      <td>56</td>\n",
       "      <td>40000</td>\n",
       "      <td>2000</td>\n",
       "      <td>CB</td>\n",
       "      <td>Right</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Medium/High</td>\n",
       "      <td>Normal</td>\n",
       "      <td>No</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>RES</td>\n",
       "      <td>36.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018-07-13</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>35</td>\n",
       "      <td>27</td>\n",
       "      <td>24</td>\n",
       "      <td>...</td>\n",
       "      <td>56</td>\n",
       "      <td>58</td>\n",
       "      <td>45</td>\n",
       "      <td>40</td>\n",
       "      <td>73</td>\n",
       "      <td>36</td>\n",
       "      <td>70</td>\n",
       "      <td>60</td>\n",
       "      <td>47</td>\n",
       "      <td>16</td>\n",
       "      <td>46</td>\n",
       "      <td>48</td>\n",
       "      <td>28</td>\n",
       "      <td>25</td>\n",
       "      <td>39</td>\n",
       "      <td>41</td>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>52</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>14</td>\n",
       "      <td>32+2</td>\n",
       "      <td>32+2</td>\n",
       "      <td>32+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>31+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>42+2</td>\n",
       "      <td>42+2</td>\n",
       "      <td>42+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>45+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>45+2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18274</th>\n",
       "      <td>250995</td>\n",
       "      <td>https://sofifa.com/player/250995/mingjie-xiao/...</td>\n",
       "      <td>Xiao Mingjie</td>\n",
       "      <td>Mingjie Xiao</td>\n",
       "      <td>22</td>\n",
       "      <td>1997-01-01</td>\n",
       "      <td>177</td>\n",
       "      <td>66</td>\n",
       "      <td>China PR</td>\n",
       "      <td>Shanghai SIPG FC</td>\n",
       "      <td>48</td>\n",
       "      <td>56</td>\n",
       "      <td>40000</td>\n",
       "      <td>2000</td>\n",
       "      <td>CB</td>\n",
       "      <td>Right</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Medium/Medium</td>\n",
       "      <td>Normal</td>\n",
       "      <td>No</td>\n",
       "      <td>72000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SUB</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-02-01</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24</td>\n",
       "      <td>20</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>61</td>\n",
       "      <td>43</td>\n",
       "      <td>41</td>\n",
       "      <td>76</td>\n",
       "      <td>33</td>\n",
       "      <td>72</td>\n",
       "      <td>55</td>\n",
       "      <td>44</td>\n",
       "      <td>20</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>37</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>53</td>\n",
       "      <td>57</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>11</td>\n",
       "      <td>9</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>32+2</td>\n",
       "      <td>32+2</td>\n",
       "      <td>32+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>33+2</td>\n",
       "      <td>35+2</td>\n",
       "      <td>36+2</td>\n",
       "      <td>36+2</td>\n",
       "      <td>36+2</td>\n",
       "      <td>35+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>47+2</td>\n",
       "      <td>47+2</td>\n",
       "      <td>47+2</td>\n",
       "      <td>46+2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18275</th>\n",
       "      <td>252332</td>\n",
       "      <td>https://sofifa.com/player/252332/wei-zhang/20/...</td>\n",
       "      <td>Zhang Wei</td>\n",
       "      <td>张威</td>\n",
       "      <td>19</td>\n",
       "      <td>2000-05-16</td>\n",
       "      <td>186</td>\n",
       "      <td>75</td>\n",
       "      <td>China PR</td>\n",
       "      <td>Hebei China Fortune FC</td>\n",
       "      <td>48</td>\n",
       "      <td>56</td>\n",
       "      <td>40000</td>\n",
       "      <td>1000</td>\n",
       "      <td>CM</td>\n",
       "      <td>Right</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Low/Medium</td>\n",
       "      <td>Lean</td>\n",
       "      <td>No</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SUB</td>\n",
       "      <td>38.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32</td>\n",
       "      <td>33</td>\n",
       "      <td>49</td>\n",
       "      <td>53</td>\n",
       "      <td>32</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>52</td>\n",
       "      <td>52</td>\n",
       "      <td>57</td>\n",
       "      <td>48</td>\n",
       "      <td>60</td>\n",
       "      <td>50</td>\n",
       "      <td>51</td>\n",
       "      <td>26</td>\n",
       "      <td>50</td>\n",
       "      <td>45</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>46</td>\n",
       "      <td>52</td>\n",
       "      <td>46</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>45+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>45+2</td>\n",
       "      <td>47+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>47+2</td>\n",
       "      <td>47+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>47+2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18276</th>\n",
       "      <td>251110</td>\n",
       "      <td>https://sofifa.com/player/251110/haijian-wang/...</td>\n",
       "      <td>Wang Haijian</td>\n",
       "      <td>汪海健</td>\n",
       "      <td>18</td>\n",
       "      <td>2000-08-02</td>\n",
       "      <td>185</td>\n",
       "      <td>74</td>\n",
       "      <td>China PR</td>\n",
       "      <td>Shanghai Greenland Shenhua FC</td>\n",
       "      <td>48</td>\n",
       "      <td>54</td>\n",
       "      <td>40000</td>\n",
       "      <td>1000</td>\n",
       "      <td>CM</td>\n",
       "      <td>Right</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Low/Low</td>\n",
       "      <td>Lean</td>\n",
       "      <td>No</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SUB</td>\n",
       "      <td>33.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-02-01</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39</td>\n",
       "      <td>34</td>\n",
       "      <td>47</td>\n",
       "      <td>54</td>\n",
       "      <td>28</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>63</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "      <td>61</td>\n",
       "      <td>42</td>\n",
       "      <td>55</td>\n",
       "      <td>28</td>\n",
       "      <td>57</td>\n",
       "      <td>49</td>\n",
       "      <td>31</td>\n",
       "      <td>48</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>54</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>45+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>45+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>48+2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18277</th>\n",
       "      <td>233449</td>\n",
       "      <td>https://sofifa.com/player/233449/ximing-pan/20...</td>\n",
       "      <td>Pan Ximing</td>\n",
       "      <td>潘喜明</td>\n",
       "      <td>26</td>\n",
       "      <td>1993-01-11</td>\n",
       "      <td>182</td>\n",
       "      <td>78</td>\n",
       "      <td>China PR</td>\n",
       "      <td>Hebei China Fortune FC</td>\n",
       "      <td>48</td>\n",
       "      <td>51</td>\n",
       "      <td>40000</td>\n",
       "      <td>2000</td>\n",
       "      <td>CM</td>\n",
       "      <td>Right</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Medium/Medium</td>\n",
       "      <td>Normal</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SUB</td>\n",
       "      <td>37.0</td>\n",
       "      <td>Tianjin TEDA FC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>60.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44</td>\n",
       "      <td>30</td>\n",
       "      <td>48</td>\n",
       "      <td>58</td>\n",
       "      <td>25</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>64</td>\n",
       "      <td>52</td>\n",
       "      <td>49</td>\n",
       "      <td>71</td>\n",
       "      <td>41</td>\n",
       "      <td>64</td>\n",
       "      <td>40</td>\n",
       "      <td>61</td>\n",
       "      <td>30</td>\n",
       "      <td>54</td>\n",
       "      <td>47</td>\n",
       "      <td>29</td>\n",
       "      <td>52</td>\n",
       "      <td>38</td>\n",
       "      <td>42</td>\n",
       "      <td>52</td>\n",
       "      <td>42</td>\n",
       "      <td>48</td>\n",
       "      <td>8</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>42+2</td>\n",
       "      <td>42+2</td>\n",
       "      <td>42+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>43+2</td>\n",
       "      <td>44+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>46+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>49+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>48+2</td>\n",
       "      <td>50+2</td>\n",
       "      <td>50+2</td>\n",
       "      <td>50+2</td>\n",
       "      <td>48+2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>18278 rows × 104 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       sofifa_id                                         player_url  \\\n",
       "0         158023  https://sofifa.com/player/158023/lionel-messi/...   \n",
       "1          20801  https://sofifa.com/player/20801/c-ronaldo-dos-...   \n",
       "2         190871  https://sofifa.com/player/190871/neymar-da-sil...   \n",
       "3         200389  https://sofifa.com/player/200389/jan-oblak/20/...   \n",
       "4         183277  https://sofifa.com/player/183277/eden-hazard/2...   \n",
       "...          ...                                                ...   \n",
       "18273     245006  https://sofifa.com/player/245006/shuai-shao/20...   \n",
       "18274     250995  https://sofifa.com/player/250995/mingjie-xiao/...   \n",
       "18275     252332  https://sofifa.com/player/252332/wei-zhang/20/...   \n",
       "18276     251110  https://sofifa.com/player/251110/haijian-wang/...   \n",
       "18277     233449  https://sofifa.com/player/233449/ximing-pan/20...   \n",
       "\n",
       "              short_name                            long_name  age  \\\n",
       "0               L. Messi       Lionel Andrés Messi Cuccittini   32   \n",
       "1      Cristiano Ronaldo  Cristiano Ronaldo dos Santos Aveiro   34   \n",
       "2              Neymar Jr        Neymar da Silva Santos Junior   27   \n",
       "3               J. Oblak                            Jan Oblak   26   \n",
       "4              E. Hazard                          Eden Hazard   28   \n",
       "...                  ...                                  ...  ...   \n",
       "18273         Shao Shuai                                   邵帅   22   \n",
       "18274       Xiao Mingjie                         Mingjie Xiao   22   \n",
       "18275          Zhang Wei                                   张威   19   \n",
       "18276       Wang Haijian                                  汪海健   18   \n",
       "18277         Pan Ximing                                  潘喜明   26   \n",
       "\n",
       "              dob  height_cm  weight_kg nationality  \\\n",
       "0      1987-06-24        170         72   Argentina   \n",
       "1      1985-02-05        187         83    Portugal   \n",
       "2      1992-02-05        175         68      Brazil   \n",
       "3      1993-01-07        188         87    Slovenia   \n",
       "4      1991-01-07        175         74     Belgium   \n",
       "...           ...        ...        ...         ...   \n",
       "18273  1997-03-10        186         79    China PR   \n",
       "18274  1997-01-01        177         66    China PR   \n",
       "18275  2000-05-16        186         75    China PR   \n",
       "18276  2000-08-02        185         74    China PR   \n",
       "18277  1993-01-11        182         78    China PR   \n",
       "\n",
       "                                club  overall  potential  value_eur  wage_eur  \\\n",
       "0                       FC Barcelona       94         94   95500000    565000   \n",
       "1                           Juventus       93         93   58500000    405000   \n",
       "2                Paris Saint-Germain       92         92  105500000    290000   \n",
       "3                    Atlético Madrid       91         93   77500000    125000   \n",
       "4                        Real Madrid       91         91   90000000    470000   \n",
       "...                              ...      ...        ...        ...       ...   \n",
       "18273               Beijing Renhe FC       48         56      40000      2000   \n",
       "18274               Shanghai SIPG FC       48         56      40000      2000   \n",
       "18275         Hebei China Fortune FC       48         56      40000      1000   \n",
       "18276  Shanghai Greenland Shenhua FC       48         54      40000      1000   \n",
       "18277         Hebei China Fortune FC       48         51      40000      2000   \n",
       "\n",
       "      player_positions preferred_foot  international_reputation  weak_foot  \\\n",
       "0           RW, CF, ST           Left                         5          4   \n",
       "1               ST, LW          Right                         5          4   \n",
       "2              LW, CAM          Right                         5          5   \n",
       "3                   GK          Right                         3          3   \n",
       "4               LW, CF          Right                         4          4   \n",
       "...                ...            ...                       ...        ...   \n",
       "18273               CB          Right                         1          3   \n",
       "18274               CB          Right                         1          2   \n",
       "18275               CM          Right                         1          2   \n",
       "18276               CM          Right                         1          2   \n",
       "18277               CM          Right                         1          3   \n",
       "\n",
       "       skill_moves      work_rate   body_type real_face  release_clause_eur  \\\n",
       "0                4     Medium/Low       Messi       Yes         195800000.0   \n",
       "1                5       High/Low  C. Ronaldo       Yes          96500000.0   \n",
       "2                5    High/Medium      Neymar       Yes         195200000.0   \n",
       "3                1  Medium/Medium      Normal       Yes         164700000.0   \n",
       "4                4    High/Medium      Normal       Yes         184500000.0   \n",
       "...            ...            ...         ...       ...                 ...   \n",
       "18273            2    Medium/High      Normal        No             70000.0   \n",
       "18274            2  Medium/Medium      Normal        No             72000.0   \n",
       "18275            2     Low/Medium        Lean        No             70000.0   \n",
       "18276            2        Low/Low        Lean        No             70000.0   \n",
       "18277            2  Medium/Medium      Normal        No                 NaN   \n",
       "\n",
       "                                             player_tags team_position  \\\n",
       "0      #Dribbler, #Distance Shooter, #Crosser, #FK Sp...            RW   \n",
       "1      #Speedster, #Dribbler, #Distance Shooter, #Acr...            LW   \n",
       "2      #Speedster, #Dribbler, #Playmaker  , #Crosser,...           CAM   \n",
       "3                                                    NaN            GK   \n",
       "4                        #Speedster, #Dribbler, #Acrobat            LW   \n",
       "...                                                  ...           ...   \n",
       "18273                                                NaN           RES   \n",
       "18274                                                NaN           SUB   \n",
       "18275                                                NaN           SUB   \n",
       "18276                                                NaN           SUB   \n",
       "18277                                                NaN           SUB   \n",
       "\n",
       "       team_jersey_number      loaned_from      joined  contract_valid_until  \\\n",
       "0                    10.0              NaN  2004-07-01                2021.0   \n",
       "1                     7.0              NaN  2018-07-10                2022.0   \n",
       "2                    10.0              NaN  2017-08-03                2022.0   \n",
       "3                    13.0              NaN  2014-07-16                2023.0   \n",
       "4                     7.0              NaN  2019-07-01                2024.0   \n",
       "...                   ...              ...         ...                   ...   \n",
       "18273                36.0              NaN  2018-07-13                2019.0   \n",
       "18274                31.0              NaN  2019-02-01                2022.0   \n",
       "18275                38.0              NaN  2019-01-01                2019.0   \n",
       "18276                33.0              NaN  2019-02-01                2022.0   \n",
       "18277                37.0  Tianjin TEDA FC         NaN                2019.0   \n",
       "\n",
       "      nation_position  nation_jersey_number  pace  shooting  passing  \\\n",
       "0                 NaN                   NaN  87.0      92.0     92.0   \n",
       "1                  LS                   7.0  90.0      93.0     82.0   \n",
       "2                  LW                  10.0  91.0      85.0     87.0   \n",
       "3                  GK                   1.0   NaN       NaN      NaN   \n",
       "4                  LF                  10.0  91.0      83.0     86.0   \n",
       "...               ...                   ...   ...       ...      ...   \n",
       "18273             NaN                   NaN  57.0      23.0     28.0   \n",
       "18274             NaN                   NaN  58.0      24.0     33.0   \n",
       "18275             NaN                   NaN  54.0      35.0     44.0   \n",
       "18276             NaN                   NaN  59.0      35.0     47.0   \n",
       "18277             NaN                   NaN  60.0      32.0     51.0   \n",
       "\n",
       "       dribbling  defending  physic  gk_diving  gk_handling  gk_kicking  \\\n",
       "0           96.0       39.0    66.0        NaN          NaN         NaN   \n",
       "1           89.0       35.0    78.0        NaN          NaN         NaN   \n",
       "2           95.0       32.0    58.0        NaN          NaN         NaN   \n",
       "3            NaN        NaN     NaN       87.0         92.0        78.0   \n",
       "4           94.0       35.0    66.0        NaN          NaN         NaN   \n",
       "...          ...        ...     ...        ...          ...         ...   \n",
       "18273       33.0       47.0    51.0        NaN          NaN         NaN   \n",
       "18274       35.0       48.0    48.0        NaN          NaN         NaN   \n",
       "18275       45.0       48.0    51.0        NaN          NaN         NaN   \n",
       "18276       47.0       45.0    52.0        NaN          NaN         NaN   \n",
       "18277       45.0       47.0    55.0        NaN          NaN         NaN   \n",
       "\n",
       "       gk_reflexes  gk_speed  gk_positioning  \\\n",
       "0              NaN       NaN             NaN   \n",
       "1              NaN       NaN             NaN   \n",
       "2              NaN       NaN             NaN   \n",
       "3             89.0      52.0            90.0   \n",
       "4              NaN       NaN             NaN   \n",
       "...            ...       ...             ...   \n",
       "18273          NaN       NaN             NaN   \n",
       "18274          NaN       NaN             NaN   \n",
       "18275          NaN       NaN             NaN   \n",
       "18276          NaN       NaN             NaN   \n",
       "18277          NaN       NaN             NaN   \n",
       "\n",
       "                                           player_traits  attacking_crossing  \\\n",
       "0      Beat Offside Trap, Argues with Officials, Earl...                  88   \n",
       "1      Long Throw-in, Selfish, Argues with Officials,...                  84   \n",
       "2      Power Free-Kick, Injury Free, Selfish, Early C...                  87   \n",
       "3                             Flair, Acrobatic Clearance                  13   \n",
       "4      Beat Offside Trap, Selfish, Finesse Shot, Spee...                  81   \n",
       "...                                                  ...                 ...   \n",
       "18273                                                NaN                  21   \n",
       "18274                                                NaN                  24   \n",
       "18275                                                NaN                  32   \n",
       "18276                                                NaN                  39   \n",
       "18277                                                NaN                  44   \n",
       "\n",
       "       attacking_finishing  attacking_heading_accuracy  \\\n",
       "0                       95                          70   \n",
       "1                       94                          89   \n",
       "2                       87                          62   \n",
       "3                       11                          15   \n",
       "4                       84                          61   \n",
       "...                    ...                         ...   \n",
       "18273                   17                          40   \n",
       "18274                   20                          42   \n",
       "18275                   33                          49   \n",
       "18276                   34                          47   \n",
       "18277                   30                          48   \n",
       "\n",
       "       attacking_short_passing  attacking_volleys  skill_dribbling  ...  \\\n",
       "0                           92                 88               97  ...   \n",
       "1                           83                 87               89  ...   \n",
       "2                           87                 87               96  ...   \n",
       "3                           43                 13               12  ...   \n",
       "4                           89                 83               95  ...   \n",
       "...                        ...                ...              ...  ...   \n",
       "18273                       35                 27               24  ...   \n",
       "18274                       43                 28               32  ...   \n",
       "18275                       53                 32               40  ...   \n",
       "18276                       54                 28               42  ...   \n",
       "18277                       58                 25               40  ...   \n",
       "\n",
       "       movement_acceleration  movement_sprint_speed  movement_agility  \\\n",
       "0                         91                     84                93   \n",
       "1                         89                     91                87   \n",
       "2                         94                     89                96   \n",
       "3                         43                     60                67   \n",
       "4                         94                     88                95   \n",
       "...                      ...                    ...               ...   \n",
       "18273                     56                     58                45   \n",
       "18274                     55                     61                43   \n",
       "18275                     55                     54                52   \n",
       "18276                     55                     63                55   \n",
       "18277                     54                     64                52   \n",
       "\n",
       "       movement_reactions  movement_balance  power_shot_power  power_jumping  \\\n",
       "0                      95                95                86             68   \n",
       "1                      96                71                95             95   \n",
       "2                      92                84                80             61   \n",
       "3                      88                49                59             78   \n",
       "4                      90                94                82             56   \n",
       "...                   ...               ...               ...            ...   \n",
       "18273                  40                73                36             70   \n",
       "18274                  41                76                33             72   \n",
       "18275                  52                57                48             60   \n",
       "18276                  54                59                46             61   \n",
       "18277                  49                71                41             64   \n",
       "\n",
       "       power_stamina  power_strength  power_long_shots  mentality_aggression  \\\n",
       "0                 75              68                94                    48   \n",
       "1                 85              78                93                    63   \n",
       "2                 81              49                84                    51   \n",
       "3                 41              78                12                    34   \n",
       "4                 84              63                80                    54   \n",
       "...              ...             ...               ...                   ...   \n",
       "18273             60              47                16                    46   \n",
       "18274             55              44                20                    42   \n",
       "18275             50              51                26                    50   \n",
       "18276             42              55                28                    57   \n",
       "18277             40              61                30                    54   \n",
       "\n",
       "       mentality_interceptions  mentality_positioning  mentality_vision  \\\n",
       "0                           40                     94                94   \n",
       "1                           29                     95                82   \n",
       "2                           36                     87                90   \n",
       "3                           19                     11                65   \n",
       "4                           41                     87                89   \n",
       "...                        ...                    ...               ...   \n",
       "18273                       48                     28                25   \n",
       "18274                       49                     23                25   \n",
       "18275                       45                     38                38   \n",
       "18276                       49                     31                48   \n",
       "18277                       47                     29                52   \n",
       "\n",
       "       mentality_penalties  mentality_composure  defending_marking  \\\n",
       "0                       75                   96                 33   \n",
       "1                       85                   95                 28   \n",
       "2                       90                   94                 27   \n",
       "3                       11                   68                 27   \n",
       "4                       88                   91                 34   \n",
       "...                    ...                  ...                ...   \n",
       "18273                   39                   41                 45   \n",
       "18274                   37                   35                 42   \n",
       "18275                   36                   39                 46   \n",
       "18276                   36                   40                 39   \n",
       "18277                   38                   42                 52   \n",
       "\n",
       "       defending_standing_tackle  defending_sliding_tackle  \\\n",
       "0                             37                        26   \n",
       "1                             32                        24   \n",
       "2                             26                        29   \n",
       "3                             12                        18   \n",
       "4                             27                        22   \n",
       "...                          ...                       ...   \n",
       "18273                         50                        52   \n",
       "18274                         53                        57   \n",
       "18275                         52                        46   \n",
       "18276                         44                        54   \n",
       "18277                         42                        48   \n",
       "\n",
       "       goalkeeping_diving  goalkeeping_handling  goalkeeping_kicking  \\\n",
       "0                       6                    11                   15   \n",
       "1                       7                    11                   15   \n",
       "2                       9                     9                   15   \n",
       "3                      87                    92                   78   \n",
       "4                      11                    12                    6   \n",
       "...                   ...                   ...                  ...   \n",
       "18273                   5                     5                   13   \n",
       "18274                  13                     6                   14   \n",
       "18275                   7                     8                   10   \n",
       "18276                  14                     9                   13   \n",
       "18277                   8                    12                   14   \n",
       "\n",
       "       goalkeeping_positioning  goalkeeping_reflexes    ls    st    rs    lw  \\\n",
       "0                           14                     8  89+2  89+2  89+2  93+2   \n",
       "1                           14                    11  91+3  91+3  91+3  89+3   \n",
       "2                           15                    11  84+3  84+3  84+3  90+3   \n",
       "3                           90                    89   NaN   NaN   NaN   NaN   \n",
       "4                            8                     8  83+3  83+3  83+3  89+3   \n",
       "...                        ...                   ...   ...   ...   ...   ...   \n",
       "18273                        5                    14  32+2  32+2  32+2  31+2   \n",
       "18274                       11                     9  33+2  33+2  33+2  33+2   \n",
       "18275                        6                    14  43+2  43+2  43+2  43+2   \n",
       "18276                       13                    13  43+2  43+2  43+2  45+2   \n",
       "18277                        9                    10  42+2  42+2  42+2  44+2   \n",
       "\n",
       "         lf    cf    rf    rw   lam   cam   ram    lm   lcm    cm   rcm    rm  \\\n",
       "0      93+2  93+2  93+2  93+2  93+2  93+2  93+2  92+2  87+2  87+2  87+2  92+2   \n",
       "1      90+3  90+3  90+3  89+3  88+3  88+3  88+3  88+3  81+3  81+3  81+3  88+3   \n",
       "2      89+3  89+3  89+3  90+3  90+3  90+3  90+3  89+3  82+3  82+3  82+3  89+3   \n",
       "3       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "4      88+3  88+3  88+3  89+3  89+3  89+3  89+3  89+3  83+3  83+3  83+3  89+3   \n",
       "...     ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   \n",
       "18273  31+2  31+2  31+2  31+2  31+2  31+2  31+2  33+2  33+2  33+2  33+2  33+2   \n",
       "18274  32+2  32+2  32+2  33+2  33+2  33+2  33+2  35+2  36+2  36+2  36+2  35+2   \n",
       "18275  43+2  43+2  43+2  43+2  44+2  44+2  44+2  45+2  46+2  46+2  46+2  45+2   \n",
       "18276  44+2  44+2  44+2  45+2  46+2  46+2  46+2  46+2  46+2  46+2  46+2  46+2   \n",
       "18277  43+2  43+2  43+2  44+2  46+2  46+2  46+2  46+2  46+2  46+2  46+2  46+2   \n",
       "\n",
       "        lwb   ldm   cdm   rdm   rwb    lb   lcb    cb   rcb    rb  \n",
       "0      68+2  66+2  66+2  66+2  68+2  63+2  52+2  52+2  52+2  63+2  \n",
       "1      65+3  61+3  61+3  61+3  65+3  61+3  53+3  53+3  53+3  61+3  \n",
       "2      66+3  61+3  61+3  61+3  66+3  61+3  46+3  46+3  46+3  61+3  \n",
       "3       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
       "4      66+3  63+3  63+3  63+3  66+3  61+3  49+3  49+3  49+3  61+3  \n",
       "...     ...   ...   ...   ...   ...   ...   ...   ...   ...   ...  \n",
       "18273  43+2  42+2  42+2  42+2  43+2  45+2  46+2  46+2  46+2  45+2  \n",
       "18274  44+2  43+2  43+2  43+2  44+2  46+2  47+2  47+2  47+2  46+2  \n",
       "18275  47+2  49+2  49+2  49+2  47+2  47+2  49+2  49+2  49+2  47+2  \n",
       "18276  48+2  48+2  48+2  48+2  48+2  48+2  49+2  49+2  49+2  48+2  \n",
       "18277  48+2  49+2  49+2  49+2  48+2  48+2  50+2  50+2  50+2  48+2  \n",
       "\n",
       "[18278 rows x 104 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv(\"./archive/players_20.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  1- Análisis exploratorio"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 1.1 Visualización de los datos\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vemos en detalle cuáles son las features o características del dataset. \n",
    "Luego analizamos cuáles jugadores son mejores por posición utilizando la variable overall."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:10.654574Z",
     "start_time": "2020-10-13T02:24:10.649500Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['sofifa_id',\n",
       " 'player_url',\n",
       " 'short_name',\n",
       " 'long_name',\n",
       " 'age',\n",
       " 'dob',\n",
       " 'height_cm',\n",
       " 'weight_kg',\n",
       " 'nationality',\n",
       " 'club',\n",
       " 'overall',\n",
       " 'potential',\n",
       " 'value_eur',\n",
       " 'wage_eur',\n",
       " 'player_positions',\n",
       " 'preferred_foot',\n",
       " 'international_reputation',\n",
       " 'weak_foot',\n",
       " 'skill_moves',\n",
       " 'work_rate',\n",
       " 'body_type',\n",
       " 'real_face',\n",
       " 'release_clause_eur',\n",
       " 'player_tags',\n",
       " 'team_position',\n",
       " 'team_jersey_number',\n",
       " 'loaned_from',\n",
       " 'joined',\n",
       " 'contract_valid_until',\n",
       " 'nation_position',\n",
       " 'nation_jersey_number',\n",
       " 'pace',\n",
       " 'shooting',\n",
       " 'passing',\n",
       " 'dribbling',\n",
       " 'defending',\n",
       " 'physic',\n",
       " 'gk_diving',\n",
       " 'gk_handling',\n",
       " 'gk_kicking',\n",
       " 'gk_reflexes',\n",
       " 'gk_speed',\n",
       " 'gk_positioning',\n",
       " 'player_traits',\n",
       " 'attacking_crossing',\n",
       " 'attacking_finishing',\n",
       " 'attacking_heading_accuracy',\n",
       " 'attacking_short_passing',\n",
       " 'attacking_volleys',\n",
       " 'skill_dribbling',\n",
       " 'skill_curve',\n",
       " 'skill_fk_accuracy',\n",
       " 'skill_long_passing',\n",
       " 'skill_ball_control',\n",
       " 'movement_acceleration',\n",
       " 'movement_sprint_speed',\n",
       " 'movement_agility',\n",
       " 'movement_reactions',\n",
       " 'movement_balance',\n",
       " 'power_shot_power',\n",
       " 'power_jumping',\n",
       " 'power_stamina',\n",
       " 'power_strength',\n",
       " 'power_long_shots',\n",
       " 'mentality_aggression',\n",
       " 'mentality_interceptions',\n",
       " 'mentality_positioning',\n",
       " 'mentality_vision',\n",
       " 'mentality_penalties',\n",
       " 'mentality_composure',\n",
       " 'defending_marking',\n",
       " 'defending_standing_tackle',\n",
       " 'defending_sliding_tackle',\n",
       " 'goalkeeping_diving',\n",
       " 'goalkeeping_handling',\n",
       " 'goalkeeping_kicking',\n",
       " 'goalkeeping_positioning',\n",
       " 'goalkeeping_reflexes',\n",
       " 'ls',\n",
       " 'st',\n",
       " 'rs',\n",
       " 'lw',\n",
       " 'lf',\n",
       " 'cf',\n",
       " 'rf',\n",
       " 'rw',\n",
       " 'lam',\n",
       " 'cam',\n",
       " 'ram',\n",
       " 'lm',\n",
       " 'lcm',\n",
       " 'cm',\n",
       " 'rcm',\n",
       " 'rm',\n",
       " 'lwb',\n",
       " 'ldm',\n",
       " 'cdm',\n",
       " 'rdm',\n",
       " 'rwb',\n",
       " 'lb',\n",
       " 'lcb',\n",
       " 'cb',\n",
       " 'rcb',\n",
       " 'rb']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:10.662642Z",
     "start_time": "2020-10-13T02:24:10.656029Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hay  104  columnas\n"
     ]
    }
   ],
   "source": [
    "print('Hay ', len(df.columns), ' columnas')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:10.916226Z",
     "start_time": "2020-10-13T02:24:10.664025Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f001841d2e8>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAD4CAYAAAAAczaOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAT40lEQVR4nO3df4xd5X3n8fenEBIC2QAhGRFD10T1piGx4pARsIsUDaEFA9WaVGELYoNJ6bp/gDbZ9R9xql2lbYLkSiGo1aZo3cLWWTVxaJoIC1BYr5tpNtKSgBMaYyjCBReMvdAuhnRCl81E3/3jHq9vYDw/r+/M+Hm/pNE99znPuc9zHp353DPPPedOqgpJUht+brE7IEkaHkNfkhpi6EtSQwx9SWqIoS9JDTlxsTswnTPPPLNWrlw51DZ//OMfc8oppwy1zaXIcehxHHochyOWw1js2rXr76vq7VOtW9Khv3LlSh5++OGhtjk+Ps7Y2NhQ21yKHIcex6HHcThiOYxFkr892jqndySpIYa+JDXE0JekhswY+knelOR7Sf4qyZ4kv9OVn5vku0meTPLVJCd15W/snu/t1q/se61Pd+VPJLn8WO2UJGlqsznTfxX4cFW9H1gDrE1yEfB7wO1VtQo4BNzU1b8JOFRVvwDc3tUjyXnAtcB7gbXAHyY5YZA7I0ma3oyhXz0T3dM3dD8FfBj4Wle+Fbi6W17XPadbf2mSdOXbqurVqnoa2AtcMJC9kCTNyqwu2ezOyHcBvwB8Efgb4KWqmuyq7AdWdMsrgGcBqmoyycvA27ryB/tetn+b/rY2ABsARkZGGB8fn9seLdDExMTQ21yKHIcex6HHcThiuY/FrEK/qn4KrElyGvAN4D1TVesec5R1Ryt/bVtbgC0Ao6OjNezrYZfDNbjD4Dj0OA49jsMRy30s5nT1TlW9BIwDFwGnJTn8pnE2cKBb3g+cA9CtfyvwYn/5FNtIkoZgxjP9JG8HflJVLyU5Gfgleh/Ofgv4KLANWA/c022yvXv+P7v1f1FVlWQ78OUkXwDeCawCvjfg/dEiWbnpvnlvu2/zVQPsiaTpzGZ65yxgazev/3PA3VV1b5LHgG1JPgf8ALizq38n8F+T7KV3hn8tQFXtSXI38BgwCdzcTRtJkoZkxtCvqh8CH5ii/CmmuPqmqv4PcM1RXutW4Na5d1OSNAjekStJDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXE0Jekhhj6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0JakhM4Z+knOSfCvJ40n2JPlEV/7bSZ5L8kj3c2XfNp9OsjfJE0ku7ytf25XtTbLp2OySJOloTpxFnUlgY1V9P8lbgF1JdnTrbq+qz/dXTnIecC3wXuCdwH9P8s+61V8EfhnYDzyUZHtVPTaIHZEkzWzG0K+qg8DBbvkfkjwOrJhmk3XAtqp6FXg6yV7ggm7d3qp6CiDJtq6uoS9JQzKbM/3/L8lK4APAd4GLgVuS3AA8TO+vgUP03hAe7NtsP0feJJ59TfmFU7SxAdgAMDIywvj4+Fy6uGATExNDb3Mpmus4bFw9Oe+2lvJ4ezz0OA5HLPexmHXoJzkV+HPgk1X1oyR3AJ8Fqnu8Dfh1IFNsXkz9+UG9rqBqC7AFYHR0tMbGxmbbxYEYHx9n2G0uRXMdhxs33TfvtvZdP/t2hs3jocdxOGK5j8WsQj/JG+gF/p9W1dcBqur5vvV/BNzbPd0PnNO3+dnAgW75aOWSpCGYzdU7Ae4EHq+qL/SVn9VX7SPAo93yduDaJG9Mci6wCvge8BCwKsm5SU6i92Hv9sHshiRpNmZzpn8x8DFgd5JHurLfAq5LsobeFM0+4DcBqmpPkrvpfUA7CdxcVT8FSHIL8ABwAnBXVe0Z4L5IkmYwm6t3vsPU8/T3T7PNrcCtU5TfP912kqRjyztyJakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDVkTt+nLx0LKxfytcybrxpgT6Tjn2f6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIZ4c5aWtYXc2AXe3KX2eKYvSQ3xTF+aJ78+QsuRZ/qS1BBDX5IaYuhLUkMMfUlqyIyhn+ScJN9K8niSPUk+0ZWfkWRHkie7x9O78iT5gyR7k/wwyfl9r7W+q/9kkvXHbrckSVOZzZn+JLCxqt4DXATcnOQ8YBOws6pWATu75wBXAKu6nw3AHdB7kwA+A1wIXAB85vAbhSRpOGYM/ao6WFXf75b/AXgcWAGsA7Z21bYCV3fL64AvVc+DwGlJzgIuB3ZU1YtVdQjYAawd6N5IkqaVqpp95WQl8G3gfcAzVXVa37pDVXV6knuBzVX1na58J/ApYAx4U1V9riv/j8A/VtXnX9PGBnp/ITAyMvLBbdu2zXvn5mNiYoJTTz11qG0uRXMdh93PvXwMe3PsrF7x1mnXTzcOC9nnmdpdavy9OGI5jMUll1yyq6pGp1o365uzkpwK/Dnwyar6UZKjVp2irKYp/9mCqi3AFoDR0dEaGxubbRcHYnx8nGG3uRTNdRxuXODXISyWfdePTbt+unFYyD7P1O5S4+/FEct9LGZ19U6SN9AL/D+tqq93xc930zZ0jy905fuBc/o2Pxs4ME25JGlIZnP1ToA7gcer6gt9q7YDh6/AWQ/c01d+Q3cVz0XAy1V1EHgAuCzJ6d0HuJd1ZZKkIZnN9M7FwMeA3Uke6cp+C9gM3J3kJuAZ4Jpu3f3AlcBe4BXg4wBV9WKSzwIPdfV+t6peHMheSJJmZcbQ7z6QPdoE/qVT1C/g5qO81l3AXXPpoCRpcLwjV5IaYuhLUkMMfUlqiP9ERU2b6R+hbFw9uWzvQZCm4pm+JDXE0Jekhhj6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqyIyhn+SuJC8kebSv7LeTPJfkke7nyr51n06yN8kTSS7vK1/ble1NsmnwuyJJmslszvT/BFg7RfntVbWm+7kfIMl5wLXAe7tt/jDJCUlOAL4IXAGcB1zX1ZUkDdGJM1Woqm8nWTnL11sHbKuqV4Gnk+wFLujW7a2qpwCSbOvqPjbnHkuS5m3G0J/GLUluAB4GNlbVIWAF8GBfnf1dGcCzrym/cKoXTbIB2AAwMjLC+Pj4Aro4dxMTE0Nvcyma6zhsXD157DqziEZOPjb7ttyOMX8vjljuYzHf0L8D+CxQ3eNtwK8DmaJuMfU0Uk31wlW1BdgCMDo6WmNjY/Ps4vyMj48z7DaXormOw42b7jt2nVlEG1dPctvuhZwbTW3f9WMDf81jyd+LI5b7WMzraK6q5w8vJ/kj4N7u6X7gnL6qZwMHuuWjlUuShmRel2wmOavv6UeAw1f2bAeuTfLGJOcCq4DvAQ8Bq5Kcm+Qkeh/2bp9/tyVJ8zHjmX6SrwBjwJlJ9gOfAcaSrKE3RbMP+E2AqtqT5G56H9BOAjdX1U+717kFeAA4AbirqvYMfG8kSdOazdU7101RfOc09W8Fbp2i/H7g/jn1TpI0UN6RK0kNMfQlqSGGviQ1xNCXpIYM/q4TLVsr+26w2rh68ri94UpqmWf6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ05caYKSe4CfgV4oare15WdAXwVWAnsA/5VVR1KEuD3gSuBV4Abq+r73Tbrgf/QveznqmrrYHdFWj5Wbrpv3tvu23zVAHui1swY+sCfAP8J+FJf2SZgZ1VtTrKpe/4p4ApgVfdzIXAHcGH3JvEZYBQoYFeS7VV1aFA7op6FhImk49+M0ztV9W3gxdcUrwMOn6lvBa7uK/9S9TwInJbkLOByYEdVvdgF/Q5g7SB2QJI0e7M505/KSFUdBKiqg0ne0ZWvAJ7tq7e/Kzta+esk2QBsABgZGWF8fHyeXZyfiYmJobfZb/dzLy9o+42rB9OPkZNh4+rJwbzYMrYUx2Exjs/F/r1YSpb7WMw39I8mU5TVNOWvL6zaAmwBGB0drbGxsYF1bjbGx8cZdpv9blwi0zMbV09y2+5BHx7Lz1Ich33Xjw29zcX+vVhKlvtYzPfqnee7aRu6xxe68v3AOX31zgYOTFMuSRqi+Yb+dmB9t7weuKev/Ib0XAS83E0DPQBcluT0JKcDl3VlkqQhms0lm18BxoAzk+yndxXOZuDuJDcBzwDXdNXvp3e55l56l2x+HKCqXkzyWeChrt7vVtVrPxyWJB1jM4Z+VV13lFWXTlG3gJuP8jp3AXfNqXeSpIHyjlxJaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDVkxn+MLmlpWbnpvgVtv2/zVQPqiZYjz/QlqSGGviQ1xOkdqTHzmR7auHqSGzfd59TQccAzfUlqiKEvSQ1ZUOgn2Zdkd5JHkjzclZ2RZEeSJ7vH07vyJPmDJHuT/DDJ+YPYAUnS7A3iTP+SqlpTVaPd803AzqpaBezsngNcAazqfjYAdwygbUnSHByL6Z11wNZueStwdV/5l6rnQeC0JGcdg/YlSUeRqpr/xsnTwCGggP9cVVuSvFRVp/XVOVRVpye5F9hcVd/pyncCn6qqh1/zmhvo/SXAyMjIB7dt2zbv/s3HxMQEp5566lDb7Lf7uZcXre1+IyfD8/+42L1YfI5Dz+FxWL3irYvdlUW32BkxG5dccsmuvtmXn7HQSzYvrqoDSd4B7Ejy19PUzRRlr3vHqaotwBaA0dHRGhsbW2AX52Z8fJxht9nvxgXebTkoG1dPcttur+h1HHoOj8O+68cWuyuLbrEzYqEWNL1TVQe6xxeAbwAXAM8fnrbpHl/oqu8Hzunb/GzgwELalyTNzbxDP8kpSd5yeBm4DHgU2A6s76qtB+7plrcDN3RX8VwEvFxVB+fdc0nSnC3k79YR4BtJDr/Ol6vqm0keAu5OchPwDHBNV/9+4EpgL/AK8PEFtC1Jmod5h35VPQW8f4ry/w1cOkV5ATfPt73lZKHfgihJx4p35EpSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkP8+sCj8K5aSccjz/QlqSGGviQ1xNCXpIYY+pLUkOP6g9z5fBi7cfXkkvmXhZI0aJ7pS1JDDH1JashxPb0jabAWcv/Kvs1XDbAnmi/P9CWpIYa+JDXE6R1JQ+HU0NLgmb4kNcTQl6SGGPqS1BDn9CUteX4eMDie6UtSQ4Ye+knWJnkiyd4km4bdviS1bKjTO0lOAL4I/DKwH3goyfaqemyY/ZDUjoX+F7zjbXpo2HP6FwB7q+opgCTbgHWAoS9pSXrtm8Zcvol3Kb5hpKqG11jyUWBtVf1G9/xjwIVVdUtfnQ3Ahu7pu4EnhtbBnjOBvx9ym0uR49DjOPQ4Dkcsh7H4p1X19qlWDPtMP1OU/cy7TlVtAbYMpzuvl+ThqhpdrPaXCsehx3HocRyOWO5jMewPcvcD5/Q9Pxs4MOQ+SFKzhh36DwGrkpyb5CTgWmD7kPsgSc0a6vROVU0muQV4ADgBuKuq9gyzD7OwaFNLS4zj0OM49DgORyzrsRjqB7mSpMXlHbmS1BBDX5Ia0nToJ9mXZHeSR5I83JWdkWRHkie7x9MXu5/DkOS0JF9L8tdJHk/yz1sbiyTv7o6Fwz8/SvLJ1sYBIMm/S7InyaNJvpLkTd0FGN/txuGr3cUYx7Ukn+jGYE+ST3Zly/p4aDr0O5dU1Zq+6243ATurahWws3vegt8HvllVvwi8H3icxsaiqp7ojoU1wAeBV4Bv0Ng4JFkB/FtgtKreR++ii2uB3wNu78bhEHDT4vXy2EvyPuDf0PsmgfcDv5JkFcv8eDD0X28dsLVb3gpcvYh9GYok/wT4EHAnQFX936p6iQbHos+lwN9U1d/S5jicCJyc5ETgzcBB4MPA17r1LYzDe4AHq+qVqpoE/hL4CMv8eGg99Av4b0l2dV//ADBSVQcBusd3LFrvhuddwN8B/yXJD5L8cZJTaHMsDrsW+Eq33NQ4VNVzwOeBZ+iF/cvALuClLvygd6PlisXp4dA8CnwoyduSvBm4kt7Npcv6eGg99C+uqvOBK4Cbk3xosTu0SE4EzgfuqKoPAD9mmf3JOkjdXPW/BP5ssfuyGLo56nXAucA7gVPo/Y681nF9vXdVPU5vSmsH8E3gr4DJaTdaBpoO/ao60D2+QG/u9gLg+SRnAXSPLyxeD4dmP7C/qr7bPf8avTeBFscCegH3/ap6vnve2jj8EvB0Vf1dVf0E+DrwL4DTuukeaOQrVKrqzqo6v6o+BLwIPMkyPx6aDf0kpyR5y+Fl4DJ6f85tB9Z31dYD9yxOD4enqv4X8GySd3dFl9L7uuvmxqJzHUemdqC9cXgGuCjJm5OEI8fDt4CPdnVaGAeSvKN7/HngV+kdF8v6eGj2jtwk76J3dg+96Y0vV9WtSd4G3A38PL2D/5qqenGRujk0SdYAfwycBDwFfJzeSUFTY9HN3T4LvKuqXu7KmjsmkvwO8Gv0pjN+APwGvTn8bcAZXdm/rqpXF62TQ5DkfwBvA34C/Puq2rncj4dmQ1+SWtTs9I4ktcjQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ35f0jwQ8Dh/THkAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['overall'].hist(bins = 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.043527Z",
     "start_time": "2020-10-13T02:24:10.917949Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      player_positions         short_name  overall\n",
      "0           RW, CF, ST           L. Messi       94\n",
      "1               ST, LW  Cristiano Ronaldo       93\n",
      "2              LW, CAM          Neymar Jr       92\n",
      "3                   GK           J. Oblak       91\n",
      "4               LW, CF          E. Hazard       91\n",
      "...                ...                ...      ...\n",
      "17728      ST, LW, CDM         Lei Wenjie       53\n",
      "17659           RB, ST        W. Mikalsen       53\n",
      "17880     CM, RWB, CDM           J. Yabur       52\n",
      "18022     LM, CDM, LWB        R. Yamamoto       51\n",
      "18232       RM, ST, CM         Xie Weijun       49\n",
      "\n",
      "[643 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "best_players_per_position=df.iloc[df.groupby(df['player_positions'])['overall'].idxmax()][['player_positions','short_name','overall']]\n",
    "print(best_players_per_position.sort_values(by=['overall'], ascending= False))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 1.2 Preparación de los datos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Removeremos a los arqueros dados que tiene features que son exclusivas de ellos y no aportan al escrutinio de las otras clases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.052890Z",
     "start_time": "2020-10-13T02:24:11.045377Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(665, 104)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_f = df[df.overall > 78]\n",
    "df_filter=df_f[(df_f['player_positions']!='GK')]\n",
    "df_filter.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Un segundo corte lo realizamos en la cantidad de features.Vamos a elegir aquellos features con valores numéricos (sin embargo, conservamos solo algunos de ellos. Aquellos como international_reputation o release_clause_eur no ser'an tenidos en cuenta). Para designar este corte vamos a utilizar la variable **df_over**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.298753Z",
     "start_time": "2020-10-13T02:24:11.055614Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['sofifa_id', 'age', 'height_cm', 'weight_kg', 'overall', 'potential',\n",
       "       'value_eur', 'wage_eur', 'international_reputation', 'weak_foot',\n",
       "       'skill_moves', 'release_clause_eur', 'team_jersey_number',\n",
       "       'contract_valid_until', 'nation_jersey_number', 'pace', 'shooting',\n",
       "       'passing', 'dribbling', 'defending', 'physic', 'gk_diving',\n",
       "       'gk_handling', 'gk_kicking', 'gk_reflexes', 'gk_speed',\n",
       "       'gk_positioning', 'attacking_crossing', 'attacking_finishing',\n",
       "       'attacking_heading_accuracy', 'attacking_short_passing',\n",
       "       'attacking_volleys', 'skill_dribbling', 'skill_curve',\n",
       "       'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n",
       "       'movement_acceleration', 'movement_sprint_speed', 'movement_agility',\n",
       "       'movement_reactions', 'movement_balance', 'power_shot_power',\n",
       "       'power_jumping', 'power_stamina', 'power_strength', 'power_long_shots',\n",
       "       'mentality_aggression', 'mentality_interceptions',\n",
       "       'mentality_positioning', 'mentality_vision', 'mentality_penalties',\n",
       "       'mentality_composure', 'defending_marking', 'defending_standing_tackle',\n",
       "       'defending_sliding_tackle', 'goalkeeping_diving',\n",
       "       'goalkeeping_handling', 'goalkeeping_kicking',\n",
       "       'goalkeeping_positioning', 'goalkeeping_reflexes'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().columns #tomamos de aqui las col con valores numéricos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.308909Z",
     "start_time": "2020-10-13T02:24:11.300639Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(665, 35)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names = df_filter['short_name']\n",
    "numeric_features = ['pace', 'shooting','passing', 'dribbling', 'defending', 'physic',\n",
    "       'attacking_crossing', 'attacking_finishing',\n",
    "       'attacking_heading_accuracy', 'attacking_short_passing',\n",
    "       'attacking_volleys', 'skill_dribbling', 'skill_curve',\n",
    "       'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n",
    "       'movement_acceleration', 'movement_sprint_speed', 'movement_agility',\n",
    "       'movement_reactions', 'movement_balance', 'power_shot_power',\n",
    "       'power_jumping', 'power_stamina', 'power_strength', 'power_long_shots',\n",
    "       'mentality_aggression', 'mentality_interceptions',\n",
    "       'mentality_positioning', 'mentality_vision', 'mentality_penalties',\n",
    "       'mentality_composure', 'defending_marking', 'defending_standing_tackle',\n",
    "       'defending_sliding_tackle']\n",
    "df_over = df_filter[numeric_features]\n",
    "df_over.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Chequeamos que no hayan valores nulos, y si los hay, los reemplazamos con el promedio del df.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.322229Z",
     "start_time": "2020-10-13T02:24:11.311061Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pace                          0\n",
       "shooting                      0\n",
       "passing                       0\n",
       "dribbling                     0\n",
       "defending                     0\n",
       "physic                        0\n",
       "attacking_crossing            0\n",
       "attacking_finishing           0\n",
       "attacking_heading_accuracy    0\n",
       "attacking_short_passing       0\n",
       "attacking_volleys             0\n",
       "skill_dribbling               0\n",
       "skill_curve                   0\n",
       "skill_fk_accuracy             0\n",
       "skill_long_passing            0\n",
       "skill_ball_control            0\n",
       "movement_acceleration         0\n",
       "movement_sprint_speed         0\n",
       "movement_agility              0\n",
       "movement_reactions            0\n",
       "movement_balance              0\n",
       "power_shot_power              0\n",
       "power_jumping                 0\n",
       "power_stamina                 0\n",
       "power_strength                0\n",
       "power_long_shots              0\n",
       "mentality_aggression          0\n",
       "mentality_interceptions       0\n",
       "mentality_positioning         0\n",
       "mentality_vision              0\n",
       "mentality_penalties           0\n",
       "mentality_composure           0\n",
       "defending_marking             0\n",
       "defending_standing_tackle     0\n",
       "defending_sliding_tackle      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_over.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "La pregunta ahora es si quiero conservar la escala en la que están estas variables. Variables como altura y precio de jugador, no están en la misma escala y pueden generar conflictos en la ponderación de los valores (30 centímetros en altura es mucho, 30 dólares en valor del jugador no es nada). Normalizamos las variables para ver qué sucede luego.\n",
    "Nota: cuando normalizamos de esta forma perdemos el índice original, y por ende ya no podemos rasterar el nombre del jugador a través de él. Para eso usamos la variable names como índice nuevo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.381493Z",
     "start_time": "2020-10-13T02:24:11.324324Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>height_cm</th>\n",
       "      <th>weight_kg</th>\n",
       "      <th>potential</th>\n",
       "      <th>pace</th>\n",
       "      <th>shooting</th>\n",
       "      <th>passing</th>\n",
       "      <th>dribbling</th>\n",
       "      <th>defending</th>\n",
       "      <th>physic</th>\n",
       "      <th>attacking_crossing</th>\n",
       "      <th>attacking_finishing</th>\n",
       "      <th>attacking_heading_accuracy</th>\n",
       "      <th>attacking_short_passing</th>\n",
       "      <th>attacking_volleys</th>\n",
       "      <th>skill_dribbling</th>\n",
       "      <th>skill_curve</th>\n",
       "      <th>skill_fk_accuracy</th>\n",
       "      <th>skill_long_passing</th>\n",
       "      <th>skill_ball_control</th>\n",
       "      <th>movement_acceleration</th>\n",
       "      <th>movement_sprint_speed</th>\n",
       "      <th>movement_agility</th>\n",
       "      <th>movement_reactions</th>\n",
       "      <th>movement_balance</th>\n",
       "      <th>power_shot_power</th>\n",
       "      <th>power_jumping</th>\n",
       "      <th>power_stamina</th>\n",
       "      <th>power_strength</th>\n",
       "      <th>power_long_shots</th>\n",
       "      <th>mentality_aggression</th>\n",
       "      <th>mentality_interceptions</th>\n",
       "      <th>mentality_positioning</th>\n",
       "      <th>mentality_vision</th>\n",
       "      <th>mentality_penalties</th>\n",
       "      <th>mentality_composure</th>\n",
       "      <th>defending_marking</th>\n",
       "      <th>defending_standing_tackle</th>\n",
       "      <th>defending_sliding_tackle</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.70</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.317073</td>\n",
       "      <td>0.9375</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.985294</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.238806</td>\n",
       "      <td>0.478261</td>\n",
       "      <td>0.934211</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.634921</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.973684</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.986486</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.920635</td>\n",
       "      <td>0.809524</td>\n",
       "      <td>0.954545</td>\n",
       "      <td>0.966667</td>\n",
       "      <td>0.984615</td>\n",
       "      <td>0.859375</td>\n",
       "      <td>0.590909</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.584615</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.358025</td>\n",
       "      <td>0.987342</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.273810</td>\n",
       "      <td>0.3125</td>\n",
       "      <td>0.189873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.80</td>\n",
       "      <td>0.685714</td>\n",
       "      <td>0.585366</td>\n",
       "      <td>0.8750</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.854167</td>\n",
       "      <td>0.179104</td>\n",
       "      <td>0.739130</td>\n",
       "      <td>0.881579</td>\n",
       "      <td>0.986842</td>\n",
       "      <td>0.936508</td>\n",
       "      <td>0.756757</td>\n",
       "      <td>0.960526</td>\n",
       "      <td>0.864407</td>\n",
       "      <td>0.824324</td>\n",
       "      <td>0.785714</td>\n",
       "      <td>0.736842</td>\n",
       "      <td>0.911111</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.920635</td>\n",
       "      <td>0.863636</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.615385</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.818182</td>\n",
       "      <td>0.738462</td>\n",
       "      <td>0.987805</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>0.897059</td>\n",
       "      <td>0.976190</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.2500</td>\n",
       "      <td>0.164557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.45</td>\n",
       "      <td>0.342857</td>\n",
       "      <td>0.219512</td>\n",
       "      <td>0.8125</td>\n",
       "      <td>0.920635</td>\n",
       "      <td>0.882353</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.979167</td>\n",
       "      <td>0.134328</td>\n",
       "      <td>0.304348</td>\n",
       "      <td>0.921053</td>\n",
       "      <td>0.894737</td>\n",
       "      <td>0.507937</td>\n",
       "      <td>0.864865</td>\n",
       "      <td>0.960526</td>\n",
       "      <td>0.983051</td>\n",
       "      <td>0.918919</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.807018</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.968254</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.866667</td>\n",
       "      <td>0.815385</td>\n",
       "      <td>0.765625</td>\n",
       "      <td>0.484848</td>\n",
       "      <td>0.757576</td>\n",
       "      <td>0.292308</td>\n",
       "      <td>0.878049</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>0.308642</td>\n",
       "      <td>0.898734</td>\n",
       "      <td>0.944444</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.952381</td>\n",
       "      <td>0.202381</td>\n",
       "      <td>0.1750</td>\n",
       "      <td>0.227848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.50</td>\n",
       "      <td>0.342857</td>\n",
       "      <td>0.365854</td>\n",
       "      <td>0.7500</td>\n",
       "      <td>0.920635</td>\n",
       "      <td>0.852941</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.958333</td>\n",
       "      <td>0.179104</td>\n",
       "      <td>0.478261</td>\n",
       "      <td>0.842105</td>\n",
       "      <td>0.855263</td>\n",
       "      <td>0.492063</td>\n",
       "      <td>0.918919</td>\n",
       "      <td>0.907895</td>\n",
       "      <td>0.966102</td>\n",
       "      <td>0.851351</td>\n",
       "      <td>0.821429</td>\n",
       "      <td>0.842105</td>\n",
       "      <td>0.955556</td>\n",
       "      <td>0.968254</td>\n",
       "      <td>0.873016</td>\n",
       "      <td>0.984848</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>0.969231</td>\n",
       "      <td>0.796875</td>\n",
       "      <td>0.409091</td>\n",
       "      <td>0.803030</td>\n",
       "      <td>0.507692</td>\n",
       "      <td>0.829268</td>\n",
       "      <td>0.442857</td>\n",
       "      <td>0.370370</td>\n",
       "      <td>0.898734</td>\n",
       "      <td>0.930556</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.880952</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.1875</td>\n",
       "      <td>0.139241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.50</td>\n",
       "      <td>0.514286</td>\n",
       "      <td>0.268293</td>\n",
       "      <td>0.7500</td>\n",
       "      <td>0.682540</td>\n",
       "      <td>0.897059</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.791667</td>\n",
       "      <td>0.567164</td>\n",
       "      <td>0.739130</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.828947</td>\n",
       "      <td>0.396825</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.894737</td>\n",
       "      <td>0.813559</td>\n",
       "      <td>0.878378</td>\n",
       "      <td>0.869048</td>\n",
       "      <td>0.982456</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.698413</td>\n",
       "      <td>0.682540</td>\n",
       "      <td>0.727273</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>0.692308</td>\n",
       "      <td>0.937500</td>\n",
       "      <td>0.515152</td>\n",
       "      <td>0.878788</td>\n",
       "      <td>0.676923</td>\n",
       "      <td>0.951220</td>\n",
       "      <td>0.757143</td>\n",
       "      <td>0.617284</td>\n",
       "      <td>0.911392</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.808824</td>\n",
       "      <td>0.880952</td>\n",
       "      <td>0.690476</td>\n",
       "      <td>0.5750</td>\n",
       "      <td>0.506329</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    age height_cm weight_kg potential      pace  shooting passing dribbling  \\\n",
       "0  0.70  0.200000  0.317073    0.9375  0.857143  0.985294    1.00  1.000000   \n",
       "1  0.80  0.685714  0.585366    0.8750  0.904762  1.000000    0.80  0.854167   \n",
       "2  0.45  0.342857  0.219512    0.8125  0.920635  0.882353    0.90  0.979167   \n",
       "3  0.50  0.342857  0.365854    0.7500  0.920635  0.852941    0.88  0.958333   \n",
       "4  0.50  0.514286  0.268293    0.7500  0.682540  0.897059    1.00  0.791667   \n",
       "\n",
       "  defending    physic attacking_crossing attacking_finishing  \\\n",
       "0  0.238806  0.478261           0.934211            1.000000   \n",
       "1  0.179104  0.739130           0.881579            0.986842   \n",
       "2  0.134328  0.304348           0.921053            0.894737   \n",
       "3  0.179104  0.478261           0.842105            0.855263   \n",
       "4  0.567164  0.739130           1.000000            0.828947   \n",
       "\n",
       "  attacking_heading_accuracy attacking_short_passing attacking_volleys  \\\n",
       "0                   0.634921                1.000000          0.973684   \n",
       "1                   0.936508                0.756757          0.960526   \n",
       "2                   0.507937                0.864865          0.960526   \n",
       "3                   0.492063                0.918919          0.907895   \n",
       "4                   0.396825                1.000000          0.894737   \n",
       "\n",
       "  skill_dribbling skill_curve skill_fk_accuracy skill_long_passing  \\\n",
       "0        1.000000    0.986486          1.000000           1.000000   \n",
       "1        0.864407    0.824324          0.785714           0.736842   \n",
       "2        0.983051    0.918919          0.916667           0.807018   \n",
       "3        0.966102    0.851351          0.821429           0.842105   \n",
       "4        0.813559    0.878378          0.869048           0.982456   \n",
       "\n",
       "  skill_ball_control movement_acceleration movement_sprint_speed  \\\n",
       "0           1.000000              0.920635              0.809524   \n",
       "1           0.911111              0.888889              0.920635   \n",
       "2           0.977778              0.968254              0.888889   \n",
       "3           0.955556              0.968254              0.873016   \n",
       "4           0.888889              0.698413              0.682540   \n",
       "\n",
       "  movement_agility movement_reactions movement_balance power_shot_power  \\\n",
       "0         0.954545           0.966667         0.984615         0.859375   \n",
       "1         0.863636           1.000000         0.615385         1.000000   \n",
       "2         1.000000           0.866667         0.815385         0.765625   \n",
       "3         0.984848           0.800000         0.969231         0.796875   \n",
       "4         0.727273           0.833333         0.692308         0.937500   \n",
       "\n",
       "  power_jumping power_stamina power_strength power_long_shots  \\\n",
       "0      0.590909      0.666667       0.584615         1.000000   \n",
       "1      1.000000      0.818182       0.738462         0.987805   \n",
       "2      0.484848      0.757576       0.292308         0.878049   \n",
       "3      0.409091      0.803030       0.507692         0.829268   \n",
       "4      0.515152      0.878788       0.676923         0.951220   \n",
       "\n",
       "  mentality_aggression mentality_interceptions mentality_positioning  \\\n",
       "0             0.357143                0.358025              0.987342   \n",
       "1             0.571429                0.222222              1.000000   \n",
       "2             0.400000                0.308642              0.898734   \n",
       "3             0.442857                0.370370              0.898734   \n",
       "4             0.757143                0.617284              0.911392   \n",
       "\n",
       "  mentality_vision mentality_penalties mentality_composure defending_marking  \\\n",
       "0         1.000000            0.750000            1.000000          0.273810   \n",
       "1         0.833333            0.897059            0.976190          0.214286   \n",
       "2         0.944444            0.970588            0.952381          0.202381   \n",
       "3         0.930556            0.941176            0.880952          0.285714   \n",
       "4         1.000000            0.808824            0.880952          0.690476   \n",
       "\n",
       "  defending_standing_tackle defending_sliding_tackle  \n",
       "0                    0.3125                 0.189873  \n",
       "1                    0.2500                 0.164557  \n",
       "2                    0.1750                 0.227848  \n",
       "3                    0.1875                 0.139241  \n",
       "4                    0.5750                 0.506329  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numeric_and_body =  [ 'age', 'height_cm', 'weight_kg','potential','pace', 'shooting','passing', 'dribbling', 'defending', 'physic',\n",
    "       'attacking_crossing', 'attacking_finishing',\n",
    "       'attacking_heading_accuracy', 'attacking_short_passing',\n",
    "       'attacking_volleys', 'skill_dribbling', 'skill_curve',\n",
    "       'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n",
    "       'movement_acceleration', 'movement_sprint_speed', 'movement_agility',\n",
    "       'movement_reactions', 'movement_balance', 'power_shot_power',\n",
    "       'power_jumping', 'power_stamina', 'power_strength', 'power_long_shots',\n",
    "       'mentality_aggression', 'mentality_interceptions',\n",
    "       'mentality_positioning', 'mentality_vision', 'mentality_penalties',\n",
    "       'mentality_composure', 'defending_marking', 'defending_standing_tackle',\n",
    "       'defending_sliding_tackle']\n",
    "x = df_filter[numeric_and_body] # numpy array\n",
    "scaler = preprocessing.MinMaxScaler()\n",
    "x_scaled = scaler.fit_transform(x)\n",
    "X_norm = pd.DataFrame(x_scaled)\n",
    "X_norm.columns = [numeric_and_body]\n",
    "# si queremos podemos reemplazar el indice por los nombres con X_norm.index = [names]\n",
    "X_norm.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ahora tengo dos dataframes, df_over que toma los valores numéricos del dataset y X_norm, que escala todos los valores numéricos. Lo que resta es probar distinttos modelos con cada uno de estos para ver si la normalización afecta o no el clustering (es de esperar que incida sobre algún modelo más que en otro).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:11.450794Z",
     "start_time": "2020-10-13T02:24:11.444623Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(0, 'pace'),\n",
       " (1, 'shooting'),\n",
       " (2, 'passing'),\n",
       " (3, 'dribbling'),\n",
       " (4, 'defending'),\n",
       " (5, 'physic'),\n",
       " (6, 'attacking_crossing'),\n",
       " (7, 'attacking_finishing'),\n",
       " (8, 'attacking_heading_accuracy'),\n",
       " (9, 'attacking_short_passing'),\n",
       " (10, 'attacking_volleys'),\n",
       " (11, 'skill_dribbling'),\n",
       " (12, 'skill_curve'),\n",
       " (13, 'skill_fk_accuracy'),\n",
       " (14, 'skill_long_passing'),\n",
       " (15, 'skill_ball_control'),\n",
       " (16, 'movement_acceleration'),\n",
       " (17, 'movement_sprint_speed'),\n",
       " (18, 'movement_agility'),\n",
       " (19, 'movement_reactions'),\n",
       " (20, 'movement_balance'),\n",
       " (21, 'power_shot_power'),\n",
       " (22, 'power_jumping'),\n",
       " (23, 'power_stamina'),\n",
       " (24, 'power_strength'),\n",
       " (25, 'power_long_shots'),\n",
       " (26, 'mentality_aggression'),\n",
       " (27, 'mentality_interceptions'),\n",
       " (28, 'mentality_positioning'),\n",
       " (29, 'mentality_vision'),\n",
       " (30, 'mentality_penalties'),\n",
       " (31, 'mentality_composure'),\n",
       " (32, 'defending_marking'),\n",
       " (33, 'defending_standing_tackle'),\n",
       " (34, 'defending_sliding_tackle')]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(enumerate(df_over.columns))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  2- Evaluación visual e intuitiva de a dos variables por vez\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Visualizamos los datos de a dos variables numéricas. Nos concentramos en distintas variables que creams pueden tener una relación covariante o latente. \n",
    "Notese que utlizamos como referncia el dataset df_filter, que me permite echar mano de las features con palabras (como los clubes o las posiciones de los jugadores)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:32.717739Z",
     "start_time": "2020-10-13T02:24:28.748826Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": false
       },
       "data": [
        {
         "marker": {
          "size": 5
         },
         "mode": "markers",
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette",
          "M. de Ligt",
          "F. de Jong",
          "R. Varane",
          "N. Süle",
          "S. Milinković-Savić",
          "Rodri",
          "Saúl",
          "Fabinho",
          "A. Robertson",
          "J. Giménez",
          "C. Lenglet",
          "Bruno Fernandes",
          "R. Lukaku",
          "K. Manolas",
          "D. Alaba",
          "M. Icardi",
          "Carvajal",
          "H. Ziyech",
          "Z. Ibrahimović",
          "A. Gómez",
          "G. Higuaín",
          "B. Matuidi",
          "G. Bale",
          "Marcelo",
          "A. Witsel",
          "Alex Sandro",
          "Iago Aspas",
          "Koke",
          "J. Rodríguez",
          "Allan",
          "J. Sancho",
          "K. Havertz",
          "O. Dembélé",
          "João Cancelo",
          "D. Alli",
          "L. Hernández",
          "Arthur",
          "M. Depay",
          "L. Goretzka",
          "J. Brandt",
          "K. Coman",
          "S. Gnabry",
          "N. Fekir",
          "Luis Alberto",
          "Alex Telles",
          "S. de Vrij",
          "Felipe Anderson",
          "Pepe",
          "João Moutinho",
          "M. Hamšík",
          "Sokratis",
          "Lucas Leiva",
          "M. Özil",
          "Javi Martínez",
          "E. Džeko",
          "G. Wijnaldum",
          "I. Perišić",
          "M. Mandžukić",
          "A. Vidal",
          "J. Boateng",
          "Azpilicueta",
          "José Callejón",
          "I. Gündoğan",
          "Paulinho",
          "K. Walker",
          "Canales",
          "Douglas Costa",
          "Pizzi",
          "D. Tadić",
          "J. Iličić",
          "R. Mahrez",
          "E. Višća",
          "Felipe",
          "Fabián",
          "A. Romagnoli",
          "G. Lo Celso",
          "T. Alexander-Arnold",
          "L. Jović",
          "A. Milik",
          "A. Martial",
          "Anderson Talisca",
          "J. Tah",
          "C. Tolisso",
          "Gonçalo Guedes",
          "N. Pépé",
          "M. Akanji",
          "M. Rashford",
          "J. Stones",
          "A. Rabiot",
          "Grimaldo",
          "T. Werner",
          "T. Lemar",
          "D. Sánchez",
          "Marco Asensio",
          "L. Digne",
          "J. Draxler",
          "Y. Carrasco",
          "Borja Iglesias",
          "W. Zaha",
          "Paco Alcácer",
          "Morata",
          "S. Haller",
          "William Carvalho",
          "F. Bernardeschi",
          "D. Djené",
          "Oscar",
          "Bartra",
          "Pablo Sarabia",
          "Lucas Moura",
          "F. Thauvin",
          "Jorginho",
          "V. Kompany",
          "Raúl Albiol",
          "F. Quagliarella",
          "Falcao",
          "Miranda",
          "C. Vela",
          "E. Garay",
          "R. Nainggolan",
          "E. Banega",
          "Diego Costa",
          "S. Khedira",
          "David Luiz",
          "M. Kruse",
          "J. Henderson",
          "G. Sigurðsson",
          "A. Ramsey",
          "Illarramendi",
          "D. Blind",
          "N. Otamendi",
          "J. Cuadrado",
          "I. Gueye",
          "K. Kampl",
          "Rodrigo",
          "C. Aránguiz",
          "W. Ben Yedder",
          "F. Acerbi",
          "Danilo Pereira",
          "A. Kramarić",
          "Louri Beretta",
          "Josué Chiamulera",
          "Ronaldo Cabrais",
          "Oyarzabal",
          "L. Bailey",
          "Gabriel Jesus",
          "M. Kovačić",
          "A. Belotti",
          "N. Keïta",
          "L. Torreira",
          "Rúben Neves",
          "P. Kimpembe",
          "S. Bergwijn",
          "Nélson Semedo",
          "D. Rugani",
          "A. Correa",
          "Iñaki Williams",
          "H. Lozano",
          "Gelson Martins",
          "T. Partey",
          "K. Demirbay",
          "J. Matip",
          "Suso",
          "S. Savić",
          "A. Rüdiger",
          "Ricardo Pereira",
          "N. Tagliafico",
          "Muniain",
          "M. Götze",
          "T. Delaney",
          "Willian José",
          "Sergi Roberto",
          "N. Schulz",
          "K. Volland",
          "Nacho Fernández",
          "Gabriel Paulista",
          "J. Roussillon",
          "H. Maguire",
          "T. Hazard",
          "E. Forsberg",
          "F. Kostić",
          "M. Politano",
          "Rafa",
          "D. De Rossi",
          "Aduriz",
          "Jesús Navas",
          "Santi Cazorla",
          "H. Herrera",
          "L. Biglia",
          "Juan Mata",
          "O. Giroud",
          "S. Kjær",
          "Willian",
          "V. Ćorluka",
          "M. Arnautović",
          "A. Sánchez",
          "Giuliano",
          "A. Kolarov",
          "M. Balotelli",
          "Marlos",
          "Taison",
          "B. Dost",
          "G. Bonaventura",
          "Pedro",
          "L. de Jong",
          "S. El Shaarawy",
          "Ander Herrera",
          "X. Shaqiri",
          "Mário Fernandes",
          "S. Coates",
          "C. Bakambu",
          "T. Meunier",
          "K. Bellarabi",
          "J. Lingard",
          "Q. Promes",
          "J. Vardy",
          "D. Zapata",
          "Morales",
          "Juiano Mestres",
          "Rosberto Dourado",
          "E. Schetino",
          "J. Sildero",
          "L. Martínez",
          "H. Aouar",
          "T. Ndombele",
          "Éder Militão",
          "D. van de Beek",
          "V. Lindelöf",
          "Dani Ceballos",
          "Pablo Fornals",
          "E. Can",
          "Gayà",
          "David Neres",
          "P. Zieliński",
          "G. Xhaka",
          "Rafinha",
          "G. Kondogbia",
          "M. Sabitzer",
          "L. Shaw",
          "J. Martínez",
          "A. Doucouré",
          "W. Ndidi",
          "W. Orban",
          "A. Plea",
          "Y. Poulsen",
          "R. Fraser",
          "M. Ginter",
          "R. Guerreiro",
          "João Mário",
          "Thiago Mendes",
          "A. Izzo",
          "M. Brozović",
          "A. Ljajić",
          "J. Corona",
          "L. Milivojević",
          "Gerard Moreno",
          "W. Weghorst",
          "Quaresma",
          "J. Mathieu",
          "J. Milner",
          "L. López",
          "B. Gomis",
          "M. Dembélé",
          "Cesc Fàbregas",
          "L. Koscielny",
          "Jardel",
          "Renato Augusto",
          "José Fonte",
          "A. Guardado",
          "L. Piszczek",
          "K. Gameiro",
          "D. Payet",
          "Beñat",
          "B. Höwedes",
          "M. Sissoko",
          "M. Parolo",
          "Fernando",
          "N. Gaitán",
          "S. Giovinco",
          "Luiz Gustavo",
          "N. Nkoulou",
          "N. Matić",
          "Marcos Alonso",
          "H. Mkhitaryan",
          "André Almeida",
          "A. Florenzi",
          "E. Zahavi",
          "F. Vázquez",
          "Lucas Vázquez",
          "Dani García",
          "M. Acuña",
          "Laure Santeiro",
          "J. Frendado",
          "S. Ardero",
          "L. Dálves",
          "S. Mandíquez",
          "João Félix",
          "N. Barella",
          "J. Gomez",
          "A. Christensen",
          "Y. Tielemans",
          "Mario Hermoso",
          "Carlos Soler",
          "M. Caldara",
          "H. Winks",
          "K. Piątek",
          "Diogo Jota",
          "Marcos Llorente",
          "F. Mendy",
          "Melendo",
          "Rúben Dias",
          "Héctor Bellerín",
          "B. Mendy",
          "M. Dembélé",
          "Santi Mina",
          "Rony Lopes",
          "J. Correa",
          "T. Bakayoko",
          "M. Eggestein",
          "Odriozola",
          "M. Gómez",
          "Sergi Darder",
          "K. Zouma",
          "L. Paredes",
          "N. Aké",
          "E. Hysaj",
          "André Gomes",
          "K. Baldé",
          "J. Weigl",
          "V. Rongier",
          "Yeray",
          "Loren",
          "R. Rodríguez",
          "A. Oxlade-Chamberlain",
          "Campaña",
          "A. Mandi",
          "Deulofeu",
          "Bernat",
          "M. Keane",
          "J. Quintero",
          "Samu Castillejo",
          "A. Rebić",
          "E. Bailly",
          "M. Almirón",
          "M. Lazzari",
          "M. Lanzini",
          "Sergi Gómez",
          "H. Vanaken",
          "M. Hinteregger",
          "M. Nastasić",
          "Gabriel",
          "C. Wilson",
          "J. Guilavogui",
          "D. Klaassen",
          "P. Kadeřábek",
          "C. Kramer",
          "Iñigo Martínez",
          "Portu",
          "Manu Trigueros",
          "H. Çalhanoğlu",
          "M. Dabbur",
          "M. Halstenberg",
          "M. Vecino",
          "Joaquín",
          "W. Rooney",
          "Nani",
          "J. Mascherano",
          "A. Gignac",
          "Jorge Molina",
          "L. Perrin",
          "Charles",
          "S. Radu",
          "D. Rose",
          "E. Lamela",
          "Raúl García",
          "Naldo",
          "D. Wass",
          "Pedro León",
          "I. Piatti",
          "M. Díaz",
          "M. Valbuena",
          "L. Bender",
          "S. Bender",
          "E. Capoue",
          "Antunes",
          "F. Fazio",
          "M. Hasebe",
          "Sidnei",
          "D. Perotti",
          "L. Pratto",
          "S. Feghouli",
          "K. Trippier",
          "M. Musacchio",
          "Y. M'Vila",
          "L. Stindl",
          "F. Smolov",
          "S. Nzonzi",
          "F. Coquelin",
          "Hulk",
          "K. Strootman",
          "C. Smalling",
          "K. Glik",
          "E. Salvio",
          "K. Vogt",
          "R. Pereyra",
          "Y. Belhanda",
          "Sergi Enrich",
          "D. Lovren",
          "S. Verdi",
          "L. Muriel",
          "D. Vida",
          "Ibai Gómez",
          "S. Berghuis",
          "Cristian Tello",
          "Ismaily",
          "F. Ghoulam",
          "S. Sané",
          "S. Zaza",
          "S. Vrsaljko",
          "Pozuelo",
          "R. Jiménez",
          "Bernard",
          "T. Stepanenko",
          "I. Marcone",
          "Jony",
          "Mata",
          "M. Marega",
          "Everton Andrão",
          "Welington Dano",
          "M. Baldona",
          "M. Nérez",
          "Vinícius Jr.",
          "R. Bentancur",
          "Lucas Paquetá",
          "A. Wan-Bissaka",
          "I. Konaté",
          "Merino",
          "S. Berge",
          "L. Pellegrini",
          "F. Chiesa",
          "Dani Olmo",
          "R. Zobnin",
          "A. Saint-Maximin",
          "C. Pavón",
          "T. Kehrer",
          "C. Pulisic",
          "F. Kessié",
          "A. Hakimi",
          "D. Samassékou",
          "Marc Roca",
          "D. Zagadou",
          "V. Tsygankov",
          "De Tomás",
          "R. Loftus-Cheek",
          "S. Lobotka",
          "J. Denayer",
          "L. Klostermann",
          "A. Golovin",
          "A. Diallo",
          "B. Pavard",
          "M. Rashica",
          "B. Chilwell",
          "Wesley",
          "T. Souček",
          "Junior Firpo",
          "J. Ward-Prowse",
          "A. Januzaj",
          "Otávio",
          "N. Stark",
          "A. Iwobi",
          "J. Gbamin",
          "Munir",
          "Angeliño",
          "J. Maddison",
          "André Silva",
          "Richarlison",
          "S. Nakajima",
          "Raphinha",
          "E. Dier",
          "L. Trossard",
          "Jonny",
          "M. Sanson",
          "J. Lerma",
          "L. Dubois",
          "F. Grillitsch",
          "L. Cabrera",
          "R. Barkley",
          "J. Murillo",
          "J. Tarkowski",
          "J. Brooks",
          "M. Batshuayi",
          "M. Arnold",
          "S. Kolašinac",
          "F. Schär",
          "Ricardo Horta",
          "L. Alario",
          "Mariano",
          "R. Aguilar",
          "F. Balbuena",
          "S. Mustafi",
          "G. Pezzella",
          "D. da Costa",
          "W. Boly",
          "B. Davies",
          "Fred",
          "M. Samatta",
          "Diego Carlos",
          "K. Toko-Ekambi",
          "R. Malinovskyi",
          "M. Sakho",
          "J. King",
          "H. Seferović",
          "Laguardia",
          "P. Jones",
          "S. Aurier",
          "L. Spinazzola",
          "K. Lala",
          "S. Arias",
          "D. Baselli",
          "T. Savanier",
          "Leo Baptistao",
          "J. Veltman",
          "D. Zappacosta",
          "Wu Lei",
          "David Villa",
          "B. Yılmaz",
          "S. Kalou",
          "Dante",
          "M. Debuchy",
          "E. Lavezzi",
          "Borja Valero",
          "M. Škrtel",
          "J. Evans",
          "D. Valeri",
          "N. Moisander",
          "D. Criscito",
          "A. Candreva",
          "Marcano",
          "K. Boateng",
          "A. Fernández",
          "Nacho Monreal",
          "Ángel",
          "Granero",
          "Éder",
          "R. Vormer",
          "S. Coleman",
          "A. Lallana",
          "A. Modeste",
          "M. Gradel",
          "Yuri Berchiche",
          "Mariano",
          "O. Toprak",
          "N. Kalinić",
          "C. Stuani",
          "K. Asamoah",
          "Alex Teixeira",
          "S. Lulić",
          "S. Rondón",
          "S. Kagawa",
          "J. Wilshere",
          "Cote",
          "Iago Falqué",
          "J. Pastore",
          "Maicon",
          "F. Orellana",
          "Elkeson",
          "Kike García",
          "Escudero",
          "Mario Gaspar",
          "Víctor Ruiz",
          "I. Belfodil",
          "A. Yarmolenko",
          "W. Khazri",
          "E. Pérez",
          "D. Caligiuri",
          "Danilo",
          "N. Pallois",
          "Vitolo",
          "M. Badelj",
          "Zé Luís",
          "D. Suárez",
          "Roque Mesa",
          "Mário Rui",
          "T. Inui",
          "D. Cheryshev",
          "C. Bacca",
          "A. Samaris",
          "J. Hector",
          "Rubén Peña",
          "A. Hamdallah",
          "D. Benedetto",
          "L. Sigali",
          "Raúl",
          "Petros",
          "Dyego Sousa",
          "Soares",
          "Rubén Alcaraz",
          "Maikel Catarino",
          "Antônio Chiamuloira",
          "Melvin Parrela",
          "Luimo Boas Santos",
          "D. Lenzado",
          "E. Riquero",
          "E. Aguerro"
         ],
         "type": "scatter",
         "x": [
          95,
          94,
          87,
          84,
          82,
          52,
          72,
          90,
          89,
          22,
          94,
          65,
          33,
          93,
          63,
          91,
          88,
          67,
          89,
          80,
          75,
          83,
          77,
          65,
          72,
          88,
          42,
          75,
          87,
          89,
          87,
          45,
          78,
          64,
          86,
          69,
          40,
          84,
          56,
          86,
          55,
          45,
          73,
          69,
          77,
          81,
          33,
          42,
          60,
          51,
          66,
          79,
          85,
          78,
          56,
          76,
          48,
          77,
          80,
          87,
          87,
          87,
          50,
          64,
          40,
          22,
          80,
          64,
          78,
          66,
          57,
          37,
          39,
          77,
          84,
          25,
          63,
          89,
          41,
          73,
          86,
          79,
          88,
          60,
          84,
          73,
          71,
          55,
          88,
          72,
          83,
          74,
          78,
          81,
          79,
          58,
          82,
          53,
          69,
          78,
          76,
          79,
          76,
          81,
          82,
          77,
          65,
          25,
          74,
          46,
          73,
          74,
          44,
          62,
          73,
          43,
          88,
          70,
          79,
          85,
          75,
          34,
          46,
          78,
          71,
          81,
          51,
          80,
          64,
          76,
          83,
          81,
          77,
          80,
          39,
          79,
          30,
          80,
          56,
          86,
          88,
          82,
          80,
          20,
          75,
          77,
          82,
          36,
          81,
          29,
          69,
          50,
          86,
          75,
          40,
          78,
          60,
          76,
          80,
          86,
          78,
          86,
          81,
          85,
          52,
          68,
          29,
          76,
          55,
          78,
          82,
          80,
          57,
          45,
          27,
          89,
          86,
          43,
          85,
          51,
          75,
          68,
          85,
          68,
          55,
          84,
          67,
          78,
          75,
          72,
          62,
          54,
          64,
          50,
          63,
          80,
          66,
          88,
          37,
          60,
          86,
          85,
          38,
          74,
          86,
          75,
          84,
          61,
          88,
          74,
          61,
          64,
          31,
          74,
          50,
          33,
          82,
          83,
          76,
          70,
          68,
          74,
          36,
          70,
          34,
          32,
          62,
          58,
          76,
          78,
          72,
          84,
          63,
          48,
          84,
          32,
          42,
          63,
          48,
          76,
          70,
          74,
          76,
          73,
          50,
          83,
          66,
          70,
          72,
          50,
          74,
          83,
          55,
          77,
          44,
          78,
          76,
          77,
          60,
          83,
          79,
          76,
          86,
          70,
          78,
          82,
          80,
          71,
          71,
          56,
          42,
          84,
          72,
          73,
          77,
          80,
          85,
          87,
          83,
          56,
          53,
          38,
          74,
          82,
          74,
          59,
          48,
          77,
          42,
          68,
          77,
          60,
          61,
          76,
          68,
          53,
          73,
          69,
          79,
          44,
          84,
          73,
          50,
          40,
          82,
          80,
          75,
          55,
          73,
          64,
          63,
          19,
          69,
          70,
          72,
          55,
          80,
          84,
          67,
          52,
          62,
          86,
          84,
          64,
          71,
          37,
          38,
          65,
          40,
          64,
          64,
          80,
          76,
          65,
          51,
          65,
          70,
          54,
          71,
          78,
          48,
          33,
          59,
          68,
          74,
          58,
          70,
          86,
          77,
          72,
          69,
          66,
          72,
          56,
          72,
          82,
          83,
          79,
          63,
          26,
          36,
          73,
          42,
          74,
          36,
          55,
          86,
          77,
          39,
          63,
          74,
          29,
          52,
          33,
          81,
          82,
          77,
          77,
          37,
          62,
          45,
          84,
          61,
          47,
          55,
          48,
          47,
          67,
          78,
          41,
          71,
          41,
          81,
          59,
          69,
          73,
          41,
          74,
          60,
          50,
          74,
          75,
          79,
          33,
          73,
          67,
          70,
          35,
          75,
          48,
          30,
          67,
          83,
          49,
          77,
          28,
          46,
          42,
          81,
          69,
          65,
          83,
          59,
          61,
          80,
          80,
          68,
          42,
          83,
          85,
          55,
          81,
          55,
          57,
          74,
          82,
          53,
          75,
          76,
          81,
          55,
          74,
          59,
          39,
          69,
          56,
          41,
          45,
          51,
          66,
          78,
          68,
          48,
          40,
          56,
          79,
          82,
          50,
          62,
          81,
          68,
          54,
          27,
          74,
          50,
          74,
          74,
          82,
          33,
          67,
          78,
          41,
          79,
          75,
          76,
          60,
          54,
          37,
          79,
          44,
          71,
          80,
          69,
          53,
          48,
          70,
          84,
          80,
          58,
          51,
          58,
          51,
          68,
          52,
          75,
          44,
          21,
          74,
          34,
          60,
          70,
          75,
          65,
          69,
          72,
          37,
          68,
          64,
          59,
          42,
          59,
          26,
          75,
          81,
          66,
          64,
          42,
          59,
          69,
          38,
          37,
          78,
          43,
          74,
          67,
          66,
          69,
          79,
          67,
          50,
          66,
          40,
          78,
          57,
          69,
          80,
          81,
          72,
          70,
          52,
          80,
          48,
          73,
          56,
          53,
          58,
          23,
          68,
          37,
          40,
          39,
          81,
          77,
          57,
          60,
          76,
          84,
          79,
          49,
          31,
          58,
          48,
          39,
          32,
          58,
          72,
          83,
          26,
          81,
          70,
          23,
          81,
          78,
          49,
          44,
          54,
          60,
          46,
          51,
          67,
          66,
          74,
          50,
          59,
          78,
          83,
          82,
          83,
          47,
          63,
          80,
          67,
          35,
          28,
          78,
          39,
          56,
          73,
          43,
          77,
          69,
          55,
          80,
          73,
          78,
          72,
          61,
          70,
          80,
          80,
          56,
          54,
          28,
          82,
          80,
          55,
          77,
          66,
          78,
          75,
          63,
          46,
          75,
          70,
          40,
          78,
          75,
          78,
          56,
          68,
          37,
          80,
          77,
          79,
          68,
          72,
          61,
          44,
          76,
          54,
          74,
          59,
          65,
          27,
          72,
          78,
          80,
          59,
          55,
          71,
          84,
          81,
          45,
          50,
          65,
          83,
          77,
          66,
          48,
          51,
          68,
          79,
          51,
          53,
          79
         ],
         "y": [
          26,
          24,
          29,
          22,
          51,
          85,
          71,
          41,
          32,
          87,
          38,
          85,
          89,
          24,
          90,
          38,
          19,
          80,
          49,
          40,
          65,
          47,
          22,
          87,
          29,
          39,
          87,
          62,
          45,
          36,
          38,
          88,
          40,
          86,
          33,
          80,
          85,
          18,
          88,
          40,
          86,
          86,
          84,
          71,
          22,
          35,
          87,
          83,
          83,
          85,
          79,
          51,
          42,
          72,
          70,
          52,
          80,
          47,
          65,
          46,
          32,
          30,
          80,
          77,
          85,
          87,
          72,
          78,
          77,
          85,
          80,
          86,
          81,
          57,
          30,
          89,
          80,
          20,
          85,
          40,
          24,
          34,
          18,
          86,
          52,
          82,
          83,
          84,
          18,
          64,
          44,
          86,
          34,
          38,
          33,
          80,
          63,
          86,
          70,
          20,
          73,
          29,
          21,
          45,
          25,
          41,
          79,
          84,
          46,
          82,
          67,
          62,
          86,
          81,
          19,
          85,
          16,
          69,
          54,
          60,
          88,
          86,
          86,
          32,
          67,
          75,
          83,
          43,
          34,
          52,
          26,
          26,
          22,
          40,
          80,
          75,
          82,
          62,
          79,
          16,
          32,
          36,
          42,
          84,
          71,
          30,
          25,
          80,
          33,
          82,
          75,
          79,
          19,
          63,
          86,
          39,
          84,
          44,
          26,
          18,
          28,
          22,
          20,
          55,
          72,
          50,
          82,
          47,
          82,
          49,
          44,
          31,
          70,
          81,
          85,
          15,
          19,
          83,
          14,
          83,
          90,
          78,
          30,
          74,
          81,
          29,
          76,
          55,
          68,
          80,
          79,
          83,
          74,
          83,
          59,
          40,
          72,
          26,
          85,
          71,
          26,
          24,
          82,
          33,
          30,
          18,
          19,
          63,
          32,
          62,
          77,
          69,
          81,
          26,
          80,
          82,
          44,
          31,
          29,
          36,
          81,
          54,
          79,
          18,
          83,
          82,
          78,
          79,
          38,
          57,
          88,
          30,
          78,
          78,
          33,
          84,
          82,
          80,
          79,
          46,
          17,
          68,
          29,
          39,
          80,
          49,
          69,
          58,
          67,
          74,
          21,
          20,
          79,
          51,
          82,
          39,
          35,
          38,
          81,
          20,
          42,
          40,
          26,
          68,
          31,
          37,
          25,
          79,
          48,
          84,
          85,
          21,
          79,
          33,
          49,
          36,
          53,
          22,
          45,
          84,
          80,
          76,
          33,
          25,
          63,
          69,
          80,
          67,
          79,
          74,
          73,
          80,
          82,
          32,
          71,
          69,
          66,
          81,
          53,
          79,
          15,
          76,
          83,
          80,
          30,
          33,
          42,
          77,
          64,
          62,
          76,
          82,
          77,
          35,
          54,
          73,
          41,
          25,
          11,
          83,
          79,
          34,
          35,
          70,
          58,
          83,
          75,
          64,
          80,
          74,
          78,
          39,
          39,
          65,
          81,
          81,
          82,
          81,
          43,
          28,
          82,
          78,
          75,
          78,
          55,
          80,
          78,
          34,
          48,
          58,
          77,
          75,
          23,
          82,
          23,
          24,
          13,
          35,
          76,
          78,
          82,
          68,
          80,
          56,
          80,
          67,
          24,
          44,
          72,
          77,
          53,
          77,
          80,
          80,
          16,
          49,
          27,
          26,
          82,
          65,
          79,
          23,
          69,
          78,
          75,
          81,
          80,
          67,
          28,
          73,
          71,
          85,
          16,
          78,
          66,
          68,
          82,
          22,
          78,
          82,
          22,
          25,
          25,
          81,
          49,
          46,
          25,
          79,
          53,
          81,
          84,
          73,
          25,
          82,
          65,
          77,
          74,
          84,
          59,
          62,
          56,
          27,
          76,
          73,
          39,
          40,
          20,
          80,
          23,
          19,
          82,
          27,
          84,
          83,
          44,
          63,
          78,
          75,
          36,
          22,
          70,
          34,
          82,
          81,
          77,
          82,
          77,
          80,
          77,
          22,
          55,
          31,
          79,
          80,
          72,
          50,
          24,
          74,
          79,
          28,
          74,
          79,
          77,
          56,
          78,
          70,
          55,
          31,
          84,
          60,
          22,
          83,
          55,
          30,
          42,
          75,
          80,
          77,
          50,
          77,
          36,
          28,
          25,
          77,
          73,
          46,
          29,
          28,
          77,
          81,
          77,
          81,
          18,
          64,
          56,
          86,
          79,
          65,
          67,
          72,
          34,
          44,
          76,
          22,
          33,
          83,
          47,
          74,
          71,
          79,
          74,
          80,
          37,
          20,
          61,
          68,
          81,
          79,
          64,
          81,
          81,
          34,
          81,
          15,
          78,
          76,
          60,
          22,
          27,
          77,
          23,
          71,
          25,
          73,
          34,
          35,
          36,
          36,
          38,
          82,
          18,
          80,
          70,
          79,
          82,
          51,
          82,
          51,
          81,
          79,
          76,
          22,
          66,
          78,
          76,
          35,
          20,
          34,
          79,
          75,
          80,
          78,
          77,
          78,
          80,
          71,
          23,
          75,
          18,
          48,
          78,
          27,
          40,
          76,
          80,
          81,
          78,
          74,
          78,
          63,
          68,
          19,
          78,
          79,
          31,
          38,
          26,
          27,
          80,
          78,
          37,
          62,
          77,
          79,
          30,
          75,
          81,
          53,
          78,
          68,
          64,
          81,
          20,
          62,
          26,
          70,
          80,
          62,
          19,
          35,
          78,
          81,
          81,
          28,
          42,
          80,
          43,
          76,
          18,
          49,
          65,
          82,
          32,
          51,
          76,
          25,
          35,
          21,
          80,
          82,
          82,
          15,
          30,
          30,
          74,
          68,
          79,
          77,
          23,
          76,
          24,
          81,
          76,
          76,
          31,
          55,
          14,
          75,
          77,
          79,
          20,
          25,
          79,
          76,
          78,
          27,
          35,
          76,
          76,
          81,
          77,
          19,
          81,
          77,
          19
         ]
        },
        {
         "mode": "text",
         "name": "Top players",
         "opacity": 0.9,
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette",
          "M. de Ligt",
          "F. de Jong",
          "R. Varane",
          "N. Süle",
          "S. Milinković-Savić",
          "Rodri",
          "Saúl",
          "Fabinho",
          "A. Robertson",
          "J. Giménez",
          "C. Lenglet",
          "Bruno Fernandes",
          "R. Lukaku",
          "K. Manolas",
          "D. Alaba",
          "M. Icardi",
          "Carvajal",
          "H. Ziyech",
          "Z. Ibrahimović",
          "A. Gómez",
          "G. Higuaín",
          "B. Matuidi",
          "G. Bale",
          "Marcelo",
          "A. Witsel",
          "Alex Sandro",
          "Iago Aspas",
          "Koke",
          "J. Rodríguez",
          "Allan",
          "J. Sancho",
          "K. Havertz",
          "O. Dembélé",
          "João Cancelo",
          "D. Alli",
          "L. Hernández",
          "Arthur",
          "M. Depay",
          "L. Goretzka",
          "J. Brandt",
          "K. Coman",
          "S. Gnabry",
          "N. Fekir",
          "Luis Alberto",
          "Alex Telles",
          "S. de Vrij",
          "Felipe Anderson",
          "Pepe",
          "João Moutinho",
          "M. Hamšík",
          "Sokratis",
          "Lucas Leiva",
          "M. Özil",
          "Javi Martínez",
          "E. Džeko",
          "G. Wijnaldum",
          "I. Perišić",
          "M. Mandžukić",
          "A. Vidal",
          "J. Boateng",
          "Azpilicueta",
          "José Callejón",
          "I. Gündoğan",
          "Paulinho",
          "K. Walker",
          "Canales",
          "Douglas Costa",
          "Pizzi",
          "D. Tadić",
          "J. Iličić",
          "R. Mahrez",
          "E. Višća",
          "Felipe",
          "Fabián",
          "A. Romagnoli",
          "G. Lo Celso",
          "T. Alexander-Arnold",
          "L. Jović",
          "A. Milik",
          "A. Martial",
          "Anderson Talisca",
          "J. Tah",
          "C. Tolisso",
          "Gonçalo Guedes",
          "N. Pépé",
          "M. Akanji",
          "M. Rashford",
          "J. Stones",
          "A. Rabiot",
          "Grimaldo",
          "T. Werner",
          "T. Lemar",
          "D. Sánchez",
          "Marco Asensio",
          "L. Digne",
          "J. Draxler",
          "Y. Carrasco",
          "Borja Iglesias",
          "W. Zaha",
          "Paco Alcácer",
          "Morata",
          "S. Haller",
          "William Carvalho",
          "F. Bernardeschi",
          "D. Djené",
          "Oscar",
          "Bartra",
          "Pablo Sarabia",
          "Lucas Moura",
          "F. Thauvin",
          "Jorginho",
          "V. Kompany",
          "Raúl Albiol",
          "F. Quagliarella",
          "Falcao",
          "Miranda",
          "C. Vela",
          "E. Garay",
          "R. Nainggolan",
          "E. Banega",
          "Diego Costa",
          "S. Khedira",
          "David Luiz",
          "M. Kruse",
          "J. Henderson",
          "G. Sigurðsson",
          "A. Ramsey",
          "Illarramendi",
          "D. Blind",
          "N. Otamendi",
          "J. Cuadrado",
          "I. Gueye",
          "K. Kampl",
          "Rodrigo",
          "C. Aránguiz",
          "W. Ben Yedder",
          "F. Acerbi",
          "Danilo Pereira",
          "A. Kramarić",
          "Louri Beretta",
          "Josué Chiamulera",
          "Ronaldo Cabrais",
          "Oyarzabal",
          "L. Bailey",
          "Gabriel Jesus",
          "M. Kovačić",
          "A. Belotti",
          "N. Keïta",
          "L. Torreira",
          "Rúben Neves",
          "P. Kimpembe",
          "S. Bergwijn",
          "Nélson Semedo",
          "D. Rugani",
          "A. Correa",
          "Iñaki Williams",
          "H. Lozano",
          "Gelson Martins",
          "T. Partey",
          "K. Demirbay",
          "J. Matip",
          "Suso",
          "S. Savić",
          "A. Rüdiger",
          "Ricardo Pereira",
          "N. Tagliafico",
          "Muniain",
          "M. Götze",
          "T. Delaney",
          "Willian José",
          "Sergi Roberto",
          "N. Schulz",
          "K. Volland",
          "Nacho Fernández",
          "Gabriel Paulista",
          "J. Roussillon",
          "H. Maguire",
          "T. Hazard",
          "E. Forsberg",
          "F. Kostić",
          "M. Politano",
          "Rafa",
          "D. De Rossi",
          "Aduriz",
          "Jesús Navas",
          "Santi Cazorla",
          "H. Herrera",
          "L. Biglia",
          "Juan Mata",
          "O. Giroud",
          "S. Kjær",
          "Willian",
          "V. Ćorluka",
          "M. Arnautović",
          "A. Sánchez",
          "Giuliano",
          "A. Kolarov",
          "M. Balotelli",
          "Marlos",
          "Taison",
          "B. Dost",
          "G. Bonaventura",
          "Pedro",
          "L. de Jong",
          "S. El Shaarawy",
          "Ander Herrera",
          "X. Shaqiri",
          "Mário Fernandes",
          "S. Coates",
          "C. Bakambu",
          "T. Meunier",
          "K. Bellarabi",
          "J. Lingard",
          "Q. Promes",
          "J. Vardy",
          "D. Zapata",
          "Morales",
          "Juiano Mestres",
          "Rosberto Dourado",
          "E. Schetino",
          "J. Sildero",
          "L. Martínez",
          "H. Aouar",
          "T. Ndombele",
          "Éder Militão",
          "D. van de Beek",
          "V. Lindelöf",
          "Dani Ceballos",
          "Pablo Fornals",
          "E. Can",
          "Gayà",
          "David Neres",
          "P. Zieliński",
          "G. Xhaka",
          "Rafinha",
          "G. Kondogbia",
          "M. Sabitzer",
          "L. Shaw",
          "J. Martínez",
          "A. Doucouré",
          "W. Ndidi",
          "W. Orban",
          "A. Plea",
          "Y. Poulsen",
          "R. Fraser",
          "M. Ginter",
          "R. Guerreiro",
          "João Mário",
          "Thiago Mendes",
          "A. Izzo",
          "M. Brozović",
          "A. Ljajić",
          "J. Corona",
          "L. Milivojević",
          "Gerard Moreno",
          "W. Weghorst",
          "Quaresma",
          "J. Mathieu",
          "J. Milner",
          "L. López",
          "B. Gomis",
          "M. Dembélé",
          "Cesc Fàbregas",
          "L. Koscielny",
          "Jardel",
          "Renato Augusto",
          "José Fonte",
          "A. Guardado",
          "L. Piszczek",
          "K. Gameiro",
          "D. Payet",
          "Beñat",
          "B. Höwedes",
          "M. Sissoko",
          "M. Parolo",
          "Fernando",
          "N. Gaitán",
          "S. Giovinco",
          "Luiz Gustavo",
          "N. Nkoulou",
          "N. Matić",
          "Marcos Alonso",
          "H. Mkhitaryan",
          "André Almeida",
          "A. Florenzi",
          "E. Zahavi",
          "F. Vázquez",
          "Lucas Vázquez",
          "Dani García",
          "M. Acuña",
          "Laure Santeiro",
          "J. Frendado",
          "S. Ardero",
          "L. Dálves",
          "S. Mandíquez"
         ],
         "textfont": {
          "color": "black",
          "family": "sans serif",
          "size": 10
         },
         "type": "scatter",
         "x": [
          95,
          94,
          87,
          84,
          82,
          52,
          72,
          90,
          89,
          22,
          94,
          65,
          33,
          93,
          63,
          91,
          88,
          67,
          89,
          80,
          75,
          83,
          77,
          65,
          72,
          88,
          42,
          75,
          87,
          89,
          87,
          45,
          78,
          64,
          86,
          69,
          40,
          84,
          56,
          86,
          55,
          45,
          73,
          69,
          77,
          81,
          33,
          42,
          60,
          51,
          66,
          79,
          85,
          78,
          56,
          76,
          48,
          77,
          80,
          87,
          87,
          87,
          50,
          64,
          40,
          22,
          80,
          64,
          78,
          66,
          57,
          37,
          39,
          77,
          84,
          25,
          63,
          89,
          41,
          73,
          86,
          79,
          88,
          60,
          84,
          73,
          71,
          55,
          88,
          72,
          83,
          74,
          78,
          81,
          79,
          58,
          82,
          53,
          69,
          78,
          76,
          79,
          76,
          81,
          82,
          77,
          65,
          25,
          74,
          46,
          73,
          74,
          44,
          62,
          73,
          43,
          88,
          70,
          79,
          85,
          75,
          34,
          46,
          78,
          71,
          81,
          51,
          80,
          64,
          76,
          83,
          81,
          77,
          80,
          39,
          79,
          30,
          80,
          56,
          86,
          88,
          82,
          80,
          20,
          75,
          77,
          82,
          36,
          81,
          29,
          69,
          50,
          86,
          75,
          40,
          78,
          60,
          76,
          80,
          86,
          78,
          86,
          81,
          85,
          52,
          68,
          29,
          76,
          55,
          78,
          82,
          80,
          57,
          45,
          27,
          89,
          86,
          43,
          85,
          51,
          75,
          68,
          85,
          68,
          55,
          84,
          67,
          78,
          75,
          72,
          62,
          54,
          64,
          50,
          63,
          80,
          66,
          88,
          37,
          60,
          86,
          85,
          38,
          74,
          86,
          75,
          84,
          61,
          88,
          74,
          61,
          64,
          31,
          74,
          50,
          33,
          82,
          83,
          76,
          70,
          68,
          74,
          36,
          70,
          34,
          32,
          62,
          58,
          76,
          78,
          72,
          84,
          63,
          48,
          84,
          32,
          42,
          63,
          48,
          76,
          70,
          74,
          76,
          73,
          50,
          83,
          66,
          70,
          72,
          50,
          74,
          83,
          55,
          77,
          44,
          78,
          76,
          77,
          60,
          83,
          79,
          76,
          86,
          70,
          78,
          82,
          80,
          71,
          71,
          56,
          42,
          84,
          72,
          73,
          77,
          80,
          85,
          87,
          83,
          56,
          53,
          38,
          74,
          82,
          74,
          59,
          48,
          77,
          42,
          68,
          77,
          60,
          61,
          76,
          68,
          53,
          73,
          69,
          79,
          44,
          84,
          73,
          50,
          40,
          82,
          80,
          75,
          55,
          73,
          64,
          63,
          19,
          69,
          70,
          72,
          55,
          80,
          84,
          67,
          52,
          62,
          86,
          84,
          64,
          71,
          37,
          38,
          65,
          40,
          64,
          64,
          80,
          76,
          65,
          51,
          65,
          70,
          54,
          71,
          78,
          48,
          33,
          59,
          68,
          74,
          58,
          70,
          86,
          77,
          72,
          69,
          66,
          72,
          56,
          72,
          82,
          83
         ],
         "y": [
          26,
          24,
          29,
          22,
          51,
          85,
          71,
          41,
          32,
          87,
          38,
          85,
          89,
          24,
          90,
          38,
          19,
          80,
          49,
          40,
          65,
          47,
          22,
          87,
          29,
          39,
          87,
          62,
          45,
          36,
          38,
          88,
          40,
          86,
          33,
          80,
          85,
          18,
          88,
          40,
          86,
          86,
          84,
          71,
          22,
          35,
          87,
          83,
          83,
          85,
          79,
          51,
          42,
          72,
          70,
          52,
          80,
          47,
          65,
          46,
          32,
          30,
          80,
          77,
          85,
          87,
          72,
          78,
          77,
          85,
          80,
          86,
          81,
          57,
          30,
          89,
          80,
          20,
          85,
          40,
          24,
          34,
          18,
          86,
          52,
          82,
          83,
          84,
          18,
          64,
          44,
          86,
          34,
          38,
          33,
          80,
          63,
          86,
          70,
          20,
          73,
          29,
          21,
          45,
          25,
          41,
          79,
          84,
          46,
          82,
          67,
          62,
          86,
          81,
          19,
          85,
          16,
          69,
          54,
          60,
          88,
          86,
          86,
          32,
          67,
          75,
          83,
          43,
          34,
          52,
          26,
          26,
          22,
          40,
          80,
          75,
          82,
          62,
          79,
          16,
          32,
          36,
          42,
          84,
          71,
          30,
          25,
          80,
          33,
          82,
          75,
          79,
          19,
          63,
          86,
          39,
          84,
          44,
          26,
          18,
          28,
          22,
          20,
          55,
          72,
          50,
          82,
          47,
          82,
          49,
          44,
          31,
          70,
          81,
          85,
          15,
          19,
          83,
          14,
          83,
          90,
          78,
          30,
          74,
          81,
          29,
          76,
          55,
          68,
          80,
          79,
          83,
          74,
          83,
          59,
          40,
          72,
          26,
          85,
          71,
          26,
          24,
          82,
          33,
          30,
          18,
          19,
          63,
          32,
          62,
          77,
          69,
          81,
          26,
          80,
          82,
          44,
          31,
          29,
          36,
          81,
          54,
          79,
          18,
          83,
          82,
          78,
          79,
          38,
          57,
          88,
          30,
          78,
          78,
          33,
          84,
          82,
          80,
          79,
          46,
          17,
          68,
          29,
          39,
          80,
          49,
          69,
          58,
          67,
          74,
          21,
          20,
          79,
          51,
          82,
          39,
          35,
          38,
          81,
          20,
          42,
          40,
          26,
          68,
          31,
          37,
          25,
          79,
          48,
          84,
          85,
          21,
          79,
          33,
          49,
          36,
          53,
          22,
          45,
          84,
          80,
          76,
          33,
          25,
          63,
          69,
          80,
          67,
          79,
          74,
          73,
          80,
          82,
          32,
          71,
          69,
          66,
          81,
          53,
          79,
          15,
          76,
          83,
          80,
          30,
          33,
          42,
          77,
          64,
          62,
          76,
          82,
          77,
          35,
          54,
          73,
          41,
          25,
          11,
          83,
          79,
          34,
          35,
          70,
          58,
          83,
          75,
          64,
          80,
          74,
          78,
          39,
          39,
          65,
          81,
          81,
          82,
          81,
          43,
          28,
          82,
          78,
          75,
          78,
          55,
          80,
          78,
          34,
          48,
          58,
          77,
          75,
          23,
          82,
          23,
          24,
          13
         ]
        }
       ],
       "layout": {
        "autosize": false,
        "height": 1000,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 20
         },
         "text": "Visualización de la base de a dos variables numéricas"
        },
        "width": 1000,
        "xaxis": {
         "title": {
          "text": "attacking_finishing"
         }
        },
        "yaxis": {
         "title": {
          "text": "defending_sliding_tackle"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"929a0c60-536f-4c41-94f8-a40cddda9e76\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"929a0c60-536f-4c41-94f8-a40cddda9e76\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        '929a0c60-536f-4c41-94f8-a40cddda9e76',\n",
       "                        [{\"marker\": {\"size\": 5}, \"mode\": \"markers\", \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\", \"M. de Ligt\", \"F. de Jong\", \"R. Varane\", \"N. S\\u00fcle\", \"S. Milinkovi\\u0107-Savi\\u0107\", \"Rodri\", \"Sa\\u00fal\", \"Fabinho\", \"A. Robertson\", \"J. Gim\\u00e9nez\", \"C. Lenglet\", \"Bruno Fernandes\", \"R. Lukaku\", \"K. Manolas\", \"D. Alaba\", \"M. Icardi\", \"Carvajal\", \"H. Ziyech\", \"Z. Ibrahimovi\\u0107\", \"A. G\\u00f3mez\", \"G. Higua\\u00edn\", \"B. Matuidi\", \"G. Bale\", \"Marcelo\", \"A. Witsel\", \"Alex Sandro\", \"Iago Aspas\", \"Koke\", \"J. Rodr\\u00edguez\", \"Allan\", \"J. Sancho\", \"K. Havertz\", \"O. Demb\\u00e9l\\u00e9\", \"Jo\\u00e3o Cancelo\", \"D. Alli\", \"L. Hern\\u00e1ndez\", \"Arthur\", \"M. Depay\", \"L. Goretzka\", \"J. Brandt\", \"K. Coman\", \"S. Gnabry\", \"N. Fekir\", \"Luis Alberto\", \"Alex Telles\", \"S. de Vrij\", \"Felipe Anderson\", \"Pepe\", \"Jo\\u00e3o Moutinho\", \"M. Ham\\u0161\\u00edk\", \"Sokratis\", \"Lucas Leiva\", \"M. \\u00d6zil\", \"Javi Mart\\u00ednez\", \"E. D\\u017eeko\", \"G. Wijnaldum\", \"I. Peri\\u0161i\\u0107\", \"M. Mand\\u017euki\\u0107\", \"A. Vidal\", \"J. Boateng\", \"Azpilicueta\", \"Jos\\u00e9 Callej\\u00f3n\", \"I. G\\u00fcndo\\u011fan\", \"Paulinho\", \"K. Walker\", \"Canales\", \"Douglas Costa\", \"Pizzi\", \"D. Tadi\\u0107\", \"J. Ili\\u010di\\u0107\", \"R. Mahrez\", \"E. Vi\\u0161\\u0107a\", \"Felipe\", \"Fabi\\u00e1n\", \"A. Romagnoli\", \"G. Lo Celso\", \"T. Alexander-Arnold\", \"L. Jovi\\u0107\", \"A. Milik\", \"A. Martial\", \"Anderson Talisca\", \"J. Tah\", \"C. Tolisso\", \"Gon\\u00e7alo Guedes\", \"N. P\\u00e9p\\u00e9\", \"M. Akanji\", \"M. Rashford\", \"J. Stones\", \"A. Rabiot\", \"Grimaldo\", \"T. Werner\", \"T. Lemar\", \"D. S\\u00e1nchez\", \"Marco Asensio\", \"L. Digne\", \"J. Draxler\", \"Y. Carrasco\", \"Borja Iglesias\", \"W. Zaha\", \"Paco Alc\\u00e1cer\", \"Morata\", \"S. Haller\", \"William Carvalho\", \"F. Bernardeschi\", \"D. Djen\\u00e9\", \"Oscar\", \"Bartra\", \"Pablo Sarabia\", \"Lucas Moura\", \"F. Thauvin\", \"Jorginho\", \"V. Kompany\", \"Ra\\u00fal Albiol\", \"F. Quagliarella\", \"Falcao\", \"Miranda\", \"C. Vela\", \"E. Garay\", \"R. Nainggolan\", \"E. Banega\", \"Diego Costa\", \"S. Khedira\", \"David Luiz\", \"M. Kruse\", \"J. Henderson\", \"G. Sigur\\u00f0sson\", \"A. Ramsey\", \"Illarramendi\", \"D. Blind\", \"N. Otamendi\", \"J. Cuadrado\", \"I. Gueye\", \"K. Kampl\", \"Rodrigo\", \"C. Ar\\u00e1nguiz\", \"W. Ben Yedder\", \"F. Acerbi\", \"Danilo Pereira\", \"A. Kramari\\u0107\", \"Louri Beretta\", \"Josu\\u00e9 Chiamulera\", \"Ronaldo Cabrais\", \"Oyarzabal\", \"L. Bailey\", \"Gabriel Jesus\", \"M. Kova\\u010di\\u0107\", \"A. Belotti\", \"N. Ke\\u00efta\", \"L. Torreira\", \"R\\u00faben Neves\", \"P. Kimpembe\", \"S. Bergwijn\", \"N\\u00e9lson Semedo\", \"D. Rugani\", \"A. Correa\", \"I\\u00f1aki Williams\", \"H. Lozano\", \"Gelson Martins\", \"T. Partey\", \"K. Demirbay\", \"J. Matip\", \"Suso\", \"S. Savi\\u0107\", \"A. R\\u00fcdiger\", \"Ricardo Pereira\", \"N. Tagliafico\", \"Muniain\", \"M. G\\u00f6tze\", \"T. Delaney\", \"Willian Jos\\u00e9\", \"Sergi Roberto\", \"N. Schulz\", \"K. Volland\", \"Nacho Fern\\u00e1ndez\", \"Gabriel Paulista\", \"J. Roussillon\", \"H. Maguire\", \"T. Hazard\", \"E. Forsberg\", \"F. Kosti\\u0107\", \"M. Politano\", \"Rafa\", \"D. De Rossi\", \"Aduriz\", \"Jes\\u00fas Navas\", \"Santi Cazorla\", \"H. Herrera\", \"L. Biglia\", \"Juan Mata\", \"O. Giroud\", \"S. Kj\\u00e6r\", \"Willian\", \"V. \\u0106orluka\", \"M. Arnautovi\\u0107\", \"A. S\\u00e1nchez\", \"Giuliano\", \"A. Kolarov\", \"M. Balotelli\", \"Marlos\", \"Taison\", \"B. Dost\", \"G. Bonaventura\", \"Pedro\", \"L. de Jong\", \"S. El Shaarawy\", \"Ander Herrera\", \"X. Shaqiri\", \"M\\u00e1rio Fernandes\", \"S. Coates\", \"C. Bakambu\", \"T. Meunier\", \"K. Bellarabi\", \"J. Lingard\", \"Q. Promes\", \"J. Vardy\", \"D. Zapata\", \"Morales\", \"Juiano Mestres\", \"Rosberto Dourado\", \"E. Schetino\", \"J. Sildero\", \"L. Mart\\u00ednez\", \"H. Aouar\", \"T. Ndombele\", \"\\u00c9der Milit\\u00e3o\", \"D. van de Beek\", \"V. Lindel\\u00f6f\", \"Dani Ceballos\", \"Pablo Fornals\", \"E. Can\", \"Gay\\u00e0\", \"David Neres\", \"P. Zieli\\u0144ski\", \"G. Xhaka\", \"Rafinha\", \"G. Kondogbia\", \"M. Sabitzer\", \"L. Shaw\", \"J. Mart\\u00ednez\", \"A. Doucour\\u00e9\", \"W. Ndidi\", \"W. Orban\", \"A. Plea\", \"Y. Poulsen\", \"R. Fraser\", \"M. Ginter\", \"R. Guerreiro\", \"Jo\\u00e3o M\\u00e1rio\", \"Thiago Mendes\", \"A. Izzo\", \"M. Brozovi\\u0107\", \"A. Ljaji\\u0107\", \"J. Corona\", \"L. Milivojevi\\u0107\", \"Gerard Moreno\", \"W. Weghorst\", \"Quaresma\", \"J. Mathieu\", \"J. Milner\", \"L. L\\u00f3pez\", \"B. Gomis\", \"M. Demb\\u00e9l\\u00e9\", \"Cesc F\\u00e0bregas\", \"L. Koscielny\", \"Jardel\", \"Renato Augusto\", \"Jos\\u00e9 Fonte\", \"A. Guardado\", \"L. Piszczek\", \"K. Gameiro\", \"D. Payet\", \"Be\\u00f1at\", \"B. H\\u00f6wedes\", \"M. Sissoko\", \"M. Parolo\", \"Fernando\", \"N. Gait\\u00e1n\", \"S. Giovinco\", \"Luiz Gustavo\", \"N. Nkoulou\", \"N. Mati\\u0107\", \"Marcos Alonso\", \"H. Mkhitaryan\", \"Andr\\u00e9 Almeida\", \"A. Florenzi\", \"E. Zahavi\", \"F. V\\u00e1zquez\", \"Lucas V\\u00e1zquez\", \"Dani Garc\\u00eda\", \"M. Acu\\u00f1a\", \"Laure Santeiro\", \"J. Frendado\", \"S. Ardero\", \"L. D\\u00e1lves\", \"S. Mand\\u00edquez\", \"Jo\\u00e3o F\\u00e9lix\", \"N. Barella\", \"J. Gomez\", \"A. Christensen\", \"Y. Tielemans\", \"Mario Hermoso\", \"Carlos Soler\", \"M. Caldara\", \"H. Winks\", \"K. Pi\\u0105tek\", \"Diogo Jota\", \"Marcos Llorente\", \"F. Mendy\", \"Melendo\", \"R\\u00faben Dias\", \"H\\u00e9ctor Beller\\u00edn\", \"B. Mendy\", \"M. Demb\\u00e9l\\u00e9\", \"Santi Mina\", \"Rony Lopes\", \"J. Correa\", \"T. Bakayoko\", \"M. Eggestein\", \"Odriozola\", \"M. G\\u00f3mez\", \"Sergi Darder\", \"K. Zouma\", \"L. Paredes\", \"N. Ak\\u00e9\", \"E. Hysaj\", \"Andr\\u00e9 Gomes\", \"K. Bald\\u00e9\", \"J. Weigl\", \"V. Rongier\", \"Yeray\", \"Loren\", \"R. Rodr\\u00edguez\", \"A. Oxlade-Chamberlain\", \"Campa\\u00f1a\", \"A. Mandi\", \"Deulofeu\", \"Bernat\", \"M. Keane\", \"J. Quintero\", \"Samu Castillejo\", \"A. Rebi\\u0107\", \"E. Bailly\", \"M. Almir\\u00f3n\", \"M. Lazzari\", \"M. Lanzini\", \"Sergi G\\u00f3mez\", \"H. Vanaken\", \"M. Hinteregger\", \"M. Nastasi\\u0107\", \"Gabriel\", \"C. Wilson\", \"J. Guilavogui\", \"D. Klaassen\", \"P. Kade\\u0159\\u00e1bek\", \"C. Kramer\", \"I\\u00f1igo Mart\\u00ednez\", \"Portu\", \"Manu Trigueros\", \"H. \\u00c7alhano\\u011flu\", \"M. Dabbur\", \"M. Halstenberg\", \"M. Vecino\", \"Joaqu\\u00edn\", \"W. Rooney\", \"Nani\", \"J. Mascherano\", \"A. Gignac\", \"Jorge Molina\", \"L. Perrin\", \"Charles\", \"S. Radu\", \"D. Rose\", \"E. Lamela\", \"Ra\\u00fal Garc\\u00eda\", \"Naldo\", \"D. Wass\", \"Pedro Le\\u00f3n\", \"I. Piatti\", \"M. D\\u00edaz\", \"M. Valbuena\", \"L. Bender\", \"S. Bender\", \"E. Capoue\", \"Antunes\", \"F. Fazio\", \"M. Hasebe\", \"Sidnei\", \"D. Perotti\", \"L. Pratto\", \"S. Feghouli\", \"K. Trippier\", \"M. Musacchio\", \"Y. M'Vila\", \"L. Stindl\", \"F. Smolov\", \"S. Nzonzi\", \"F. Coquelin\", \"Hulk\", \"K. Strootman\", \"C. Smalling\", \"K. Glik\", \"E. Salvio\", \"K. Vogt\", \"R. Pereyra\", \"Y. Belhanda\", \"Sergi Enrich\", \"D. Lovren\", \"S. Verdi\", \"L. Muriel\", \"D. Vida\", \"Ibai G\\u00f3mez\", \"S. Berghuis\", \"Cristian Tello\", \"Ismaily\", \"F. Ghoulam\", \"S. San\\u00e9\", \"S. Zaza\", \"S. Vrsaljko\", \"Pozuelo\", \"R. Jim\\u00e9nez\", \"Bernard\", \"T. Stepanenko\", \"I. Marcone\", \"Jony\", \"Mata\", \"M. Marega\", \"Everton Andr\\u00e3o\", \"Welington Dano\", \"M. Baldona\", \"M. N\\u00e9rez\", \"Vin\\u00edcius Jr.\", \"R. Bentancur\", \"Lucas Paquet\\u00e1\", \"A. Wan-Bissaka\", \"I. Konat\\u00e9\", \"Merino\", \"S. Berge\", \"L. Pellegrini\", \"F. Chiesa\", \"Dani Olmo\", \"R. Zobnin\", \"A. Saint-Maximin\", \"C. Pav\\u00f3n\", \"T. Kehrer\", \"C. Pulisic\", \"F. Kessi\\u00e9\", \"A. Hakimi\", \"D. Samass\\u00e9kou\", \"Marc Roca\", \"D. Zagadou\", \"V. Tsygankov\", \"De Tom\\u00e1s\", \"R. Loftus-Cheek\", \"S. Lobotka\", \"J. Denayer\", \"L. Klostermann\", \"A. Golovin\", \"A. Diallo\", \"B. Pavard\", \"M. Rashica\", \"B. Chilwell\", \"Wesley\", \"T. Sou\\u010dek\", \"Junior Firpo\", \"J. Ward-Prowse\", \"A. Januzaj\", \"Ot\\u00e1vio\", \"N. Stark\", \"A. Iwobi\", \"J. Gbamin\", \"Munir\", \"Angeli\\u00f1o\", \"J. Maddison\", \"Andr\\u00e9 Silva\", \"Richarlison\", \"S. Nakajima\", \"Raphinha\", \"E. Dier\", \"L. Trossard\", \"Jonny\", \"M. Sanson\", \"J. Lerma\", \"L. Dubois\", \"F. Grillitsch\", \"L. Cabrera\", \"R. Barkley\", \"J. Murillo\", \"J. Tarkowski\", \"J. Brooks\", \"M. Batshuayi\", \"M. Arnold\", \"S. Kola\\u0161inac\", \"F. Sch\\u00e4r\", \"Ricardo Horta\", \"L. Alario\", \"Mariano\", \"R. Aguilar\", \"F. Balbuena\", \"S. Mustafi\", \"G. Pezzella\", \"D. da Costa\", \"W. Boly\", \"B. Davies\", \"Fred\", \"M. Samatta\", \"Diego Carlos\", \"K. Toko-Ekambi\", \"R. Malinovskyi\", \"M. Sakho\", \"J. King\", \"H. Seferovi\\u0107\", \"Laguardia\", \"P. Jones\", \"S. Aurier\", \"L. Spinazzola\", \"K. Lala\", \"S. Arias\", \"D. Baselli\", \"T. Savanier\", \"Leo Baptistao\", \"J. Veltman\", \"D. Zappacosta\", \"Wu Lei\", \"David Villa\", \"B. Y\\u0131lmaz\", \"S. Kalou\", \"Dante\", \"M. Debuchy\", \"E. Lavezzi\", \"Borja Valero\", \"M. \\u0160krtel\", \"J. Evans\", \"D. Valeri\", \"N. Moisander\", \"D. Criscito\", \"A. Candreva\", \"Marcano\", \"K. Boateng\", \"A. Fern\\u00e1ndez\", \"Nacho Monreal\", \"\\u00c1ngel\", \"Granero\", \"\\u00c9der\", \"R. Vormer\", \"S. Coleman\", \"A. Lallana\", \"A. Modeste\", \"M. Gradel\", \"Yuri Berchiche\", \"Mariano\", \"O. Toprak\", \"N. Kalini\\u0107\", \"C. Stuani\", \"K. Asamoah\", \"Alex Teixeira\", \"S. Luli\\u0107\", \"S. Rond\\u00f3n\", \"S. Kagawa\", \"J. Wilshere\", \"Cote\", \"Iago Falqu\\u00e9\", \"J. Pastore\", \"Maicon\", \"F. Orellana\", \"Elkeson\", \"Kike Garc\\u00eda\", \"Escudero\", \"Mario Gaspar\", \"V\\u00edctor Ruiz\", \"I. Belfodil\", \"A. Yarmolenko\", \"W. Khazri\", \"E. P\\u00e9rez\", \"D. Caligiuri\", \"Danilo\", \"N. Pallois\", \"Vitolo\", \"M. Badelj\", \"Z\\u00e9 Lu\\u00eds\", \"D. Su\\u00e1rez\", \"Roque Mesa\", \"M\\u00e1rio Rui\", \"T. Inui\", \"D. Cheryshev\", \"C. Bacca\", \"A. Samaris\", \"J. Hector\", \"Rub\\u00e9n Pe\\u00f1a\", \"A. Hamdallah\", \"D. Benedetto\", \"L. Sigali\", \"Ra\\u00fal\", \"Petros\", \"Dyego Sousa\", \"Soares\", \"Rub\\u00e9n Alcaraz\", \"Maikel Catarino\", \"Ant\\u00f4nio Chiamuloira\", \"Melvin Parrela\", \"Luimo Boas Santos\", \"D. Lenzado\", \"E. Riquero\", \"E. Aguerro\"], \"type\": \"scatter\", \"x\": [95, 94, 87, 84, 82, 52, 72, 90, 89, 22, 94, 65, 33, 93, 63, 91, 88, 67, 89, 80, 75, 83, 77, 65, 72, 88, 42, 75, 87, 89, 87, 45, 78, 64, 86, 69, 40, 84, 56, 86, 55, 45, 73, 69, 77, 81, 33, 42, 60, 51, 66, 79, 85, 78, 56, 76, 48, 77, 80, 87, 87, 87, 50, 64, 40, 22, 80, 64, 78, 66, 57, 37, 39, 77, 84, 25, 63, 89, 41, 73, 86, 79, 88, 60, 84, 73, 71, 55, 88, 72, 83, 74, 78, 81, 79, 58, 82, 53, 69, 78, 76, 79, 76, 81, 82, 77, 65, 25, 74, 46, 73, 74, 44, 62, 73, 43, 88, 70, 79, 85, 75, 34, 46, 78, 71, 81, 51, 80, 64, 76, 83, 81, 77, 80, 39, 79, 30, 80, 56, 86, 88, 82, 80, 20, 75, 77, 82, 36, 81, 29, 69, 50, 86, 75, 40, 78, 60, 76, 80, 86, 78, 86, 81, 85, 52, 68, 29, 76, 55, 78, 82, 80, 57, 45, 27, 89, 86, 43, 85, 51, 75, 68, 85, 68, 55, 84, 67, 78, 75, 72, 62, 54, 64, 50, 63, 80, 66, 88, 37, 60, 86, 85, 38, 74, 86, 75, 84, 61, 88, 74, 61, 64, 31, 74, 50, 33, 82, 83, 76, 70, 68, 74, 36, 70, 34, 32, 62, 58, 76, 78, 72, 84, 63, 48, 84, 32, 42, 63, 48, 76, 70, 74, 76, 73, 50, 83, 66, 70, 72, 50, 74, 83, 55, 77, 44, 78, 76, 77, 60, 83, 79, 76, 86, 70, 78, 82, 80, 71, 71, 56, 42, 84, 72, 73, 77, 80, 85, 87, 83, 56, 53, 38, 74, 82, 74, 59, 48, 77, 42, 68, 77, 60, 61, 76, 68, 53, 73, 69, 79, 44, 84, 73, 50, 40, 82, 80, 75, 55, 73, 64, 63, 19, 69, 70, 72, 55, 80, 84, 67, 52, 62, 86, 84, 64, 71, 37, 38, 65, 40, 64, 64, 80, 76, 65, 51, 65, 70, 54, 71, 78, 48, 33, 59, 68, 74, 58, 70, 86, 77, 72, 69, 66, 72, 56, 72, 82, 83, 79, 63, 26, 36, 73, 42, 74, 36, 55, 86, 77, 39, 63, 74, 29, 52, 33, 81, 82, 77, 77, 37, 62, 45, 84, 61, 47, 55, 48, 47, 67, 78, 41, 71, 41, 81, 59, 69, 73, 41, 74, 60, 50, 74, 75, 79, 33, 73, 67, 70, 35, 75, 48, 30, 67, 83, 49, 77, 28, 46, 42, 81, 69, 65, 83, 59, 61, 80, 80, 68, 42, 83, 85, 55, 81, 55, 57, 74, 82, 53, 75, 76, 81, 55, 74, 59, 39, 69, 56, 41, 45, 51, 66, 78, 68, 48, 40, 56, 79, 82, 50, 62, 81, 68, 54, 27, 74, 50, 74, 74, 82, 33, 67, 78, 41, 79, 75, 76, 60, 54, 37, 79, 44, 71, 80, 69, 53, 48, 70, 84, 80, 58, 51, 58, 51, 68, 52, 75, 44, 21, 74, 34, 60, 70, 75, 65, 69, 72, 37, 68, 64, 59, 42, 59, 26, 75, 81, 66, 64, 42, 59, 69, 38, 37, 78, 43, 74, 67, 66, 69, 79, 67, 50, 66, 40, 78, 57, 69, 80, 81, 72, 70, 52, 80, 48, 73, 56, 53, 58, 23, 68, 37, 40, 39, 81, 77, 57, 60, 76, 84, 79, 49, 31, 58, 48, 39, 32, 58, 72, 83, 26, 81, 70, 23, 81, 78, 49, 44, 54, 60, 46, 51, 67, 66, 74, 50, 59, 78, 83, 82, 83, 47, 63, 80, 67, 35, 28, 78, 39, 56, 73, 43, 77, 69, 55, 80, 73, 78, 72, 61, 70, 80, 80, 56, 54, 28, 82, 80, 55, 77, 66, 78, 75, 63, 46, 75, 70, 40, 78, 75, 78, 56, 68, 37, 80, 77, 79, 68, 72, 61, 44, 76, 54, 74, 59, 65, 27, 72, 78, 80, 59, 55, 71, 84, 81, 45, 50, 65, 83, 77, 66, 48, 51, 68, 79, 51, 53, 79], \"y\": [26, 24, 29, 22, 51, 85, 71, 41, 32, 87, 38, 85, 89, 24, 90, 38, 19, 80, 49, 40, 65, 47, 22, 87, 29, 39, 87, 62, 45, 36, 38, 88, 40, 86, 33, 80, 85, 18, 88, 40, 86, 86, 84, 71, 22, 35, 87, 83, 83, 85, 79, 51, 42, 72, 70, 52, 80, 47, 65, 46, 32, 30, 80, 77, 85, 87, 72, 78, 77, 85, 80, 86, 81, 57, 30, 89, 80, 20, 85, 40, 24, 34, 18, 86, 52, 82, 83, 84, 18, 64, 44, 86, 34, 38, 33, 80, 63, 86, 70, 20, 73, 29, 21, 45, 25, 41, 79, 84, 46, 82, 67, 62, 86, 81, 19, 85, 16, 69, 54, 60, 88, 86, 86, 32, 67, 75, 83, 43, 34, 52, 26, 26, 22, 40, 80, 75, 82, 62, 79, 16, 32, 36, 42, 84, 71, 30, 25, 80, 33, 82, 75, 79, 19, 63, 86, 39, 84, 44, 26, 18, 28, 22, 20, 55, 72, 50, 82, 47, 82, 49, 44, 31, 70, 81, 85, 15, 19, 83, 14, 83, 90, 78, 30, 74, 81, 29, 76, 55, 68, 80, 79, 83, 74, 83, 59, 40, 72, 26, 85, 71, 26, 24, 82, 33, 30, 18, 19, 63, 32, 62, 77, 69, 81, 26, 80, 82, 44, 31, 29, 36, 81, 54, 79, 18, 83, 82, 78, 79, 38, 57, 88, 30, 78, 78, 33, 84, 82, 80, 79, 46, 17, 68, 29, 39, 80, 49, 69, 58, 67, 74, 21, 20, 79, 51, 82, 39, 35, 38, 81, 20, 42, 40, 26, 68, 31, 37, 25, 79, 48, 84, 85, 21, 79, 33, 49, 36, 53, 22, 45, 84, 80, 76, 33, 25, 63, 69, 80, 67, 79, 74, 73, 80, 82, 32, 71, 69, 66, 81, 53, 79, 15, 76, 83, 80, 30, 33, 42, 77, 64, 62, 76, 82, 77, 35, 54, 73, 41, 25, 11, 83, 79, 34, 35, 70, 58, 83, 75, 64, 80, 74, 78, 39, 39, 65, 81, 81, 82, 81, 43, 28, 82, 78, 75, 78, 55, 80, 78, 34, 48, 58, 77, 75, 23, 82, 23, 24, 13, 35, 76, 78, 82, 68, 80, 56, 80, 67, 24, 44, 72, 77, 53, 77, 80, 80, 16, 49, 27, 26, 82, 65, 79, 23, 69, 78, 75, 81, 80, 67, 28, 73, 71, 85, 16, 78, 66, 68, 82, 22, 78, 82, 22, 25, 25, 81, 49, 46, 25, 79, 53, 81, 84, 73, 25, 82, 65, 77, 74, 84, 59, 62, 56, 27, 76, 73, 39, 40, 20, 80, 23, 19, 82, 27, 84, 83, 44, 63, 78, 75, 36, 22, 70, 34, 82, 81, 77, 82, 77, 80, 77, 22, 55, 31, 79, 80, 72, 50, 24, 74, 79, 28, 74, 79, 77, 56, 78, 70, 55, 31, 84, 60, 22, 83, 55, 30, 42, 75, 80, 77, 50, 77, 36, 28, 25, 77, 73, 46, 29, 28, 77, 81, 77, 81, 18, 64, 56, 86, 79, 65, 67, 72, 34, 44, 76, 22, 33, 83, 47, 74, 71, 79, 74, 80, 37, 20, 61, 68, 81, 79, 64, 81, 81, 34, 81, 15, 78, 76, 60, 22, 27, 77, 23, 71, 25, 73, 34, 35, 36, 36, 38, 82, 18, 80, 70, 79, 82, 51, 82, 51, 81, 79, 76, 22, 66, 78, 76, 35, 20, 34, 79, 75, 80, 78, 77, 78, 80, 71, 23, 75, 18, 48, 78, 27, 40, 76, 80, 81, 78, 74, 78, 63, 68, 19, 78, 79, 31, 38, 26, 27, 80, 78, 37, 62, 77, 79, 30, 75, 81, 53, 78, 68, 64, 81, 20, 62, 26, 70, 80, 62, 19, 35, 78, 81, 81, 28, 42, 80, 43, 76, 18, 49, 65, 82, 32, 51, 76, 25, 35, 21, 80, 82, 82, 15, 30, 30, 74, 68, 79, 77, 23, 76, 24, 81, 76, 76, 31, 55, 14, 75, 77, 79, 20, 25, 79, 76, 78, 27, 35, 76, 76, 81, 77, 19, 81, 77, 19]}, {\"mode\": \"text\", \"name\": \"Top players\", \"opacity\": 0.9, \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\", \"M. de Ligt\", \"F. de Jong\", \"R. Varane\", \"N. S\\u00fcle\", \"S. Milinkovi\\u0107-Savi\\u0107\", \"Rodri\", \"Sa\\u00fal\", \"Fabinho\", \"A. Robertson\", \"J. Gim\\u00e9nez\", \"C. Lenglet\", \"Bruno Fernandes\", \"R. Lukaku\", \"K. Manolas\", \"D. Alaba\", \"M. Icardi\", \"Carvajal\", \"H. Ziyech\", \"Z. Ibrahimovi\\u0107\", \"A. G\\u00f3mez\", \"G. Higua\\u00edn\", \"B. Matuidi\", \"G. Bale\", \"Marcelo\", \"A. Witsel\", \"Alex Sandro\", \"Iago Aspas\", \"Koke\", \"J. Rodr\\u00edguez\", \"Allan\", \"J. Sancho\", \"K. Havertz\", \"O. Demb\\u00e9l\\u00e9\", \"Jo\\u00e3o Cancelo\", \"D. Alli\", \"L. Hern\\u00e1ndez\", \"Arthur\", \"M. Depay\", \"L. Goretzka\", \"J. Brandt\", \"K. Coman\", \"S. Gnabry\", \"N. Fekir\", \"Luis Alberto\", \"Alex Telles\", \"S. de Vrij\", \"Felipe Anderson\", \"Pepe\", \"Jo\\u00e3o Moutinho\", \"M. Ham\\u0161\\u00edk\", \"Sokratis\", \"Lucas Leiva\", \"M. \\u00d6zil\", \"Javi Mart\\u00ednez\", \"E. D\\u017eeko\", \"G. Wijnaldum\", \"I. Peri\\u0161i\\u0107\", \"M. Mand\\u017euki\\u0107\", \"A. Vidal\", \"J. Boateng\", \"Azpilicueta\", \"Jos\\u00e9 Callej\\u00f3n\", \"I. G\\u00fcndo\\u011fan\", \"Paulinho\", \"K. Walker\", \"Canales\", \"Douglas Costa\", \"Pizzi\", \"D. Tadi\\u0107\", \"J. Ili\\u010di\\u0107\", \"R. Mahrez\", \"E. Vi\\u0161\\u0107a\", \"Felipe\", \"Fabi\\u00e1n\", \"A. Romagnoli\", \"G. Lo Celso\", \"T. Alexander-Arnold\", \"L. Jovi\\u0107\", \"A. Milik\", \"A. Martial\", \"Anderson Talisca\", \"J. Tah\", \"C. Tolisso\", \"Gon\\u00e7alo Guedes\", \"N. P\\u00e9p\\u00e9\", \"M. Akanji\", \"M. Rashford\", \"J. Stones\", \"A. Rabiot\", \"Grimaldo\", \"T. Werner\", \"T. Lemar\", \"D. S\\u00e1nchez\", \"Marco Asensio\", \"L. Digne\", \"J. Draxler\", \"Y. Carrasco\", \"Borja Iglesias\", \"W. Zaha\", \"Paco Alc\\u00e1cer\", \"Morata\", \"S. Haller\", \"William Carvalho\", \"F. Bernardeschi\", \"D. Djen\\u00e9\", \"Oscar\", \"Bartra\", \"Pablo Sarabia\", \"Lucas Moura\", \"F. Thauvin\", \"Jorginho\", \"V. Kompany\", \"Ra\\u00fal Albiol\", \"F. Quagliarella\", \"Falcao\", \"Miranda\", \"C. Vela\", \"E. Garay\", \"R. Nainggolan\", \"E. Banega\", \"Diego Costa\", \"S. Khedira\", \"David Luiz\", \"M. Kruse\", \"J. Henderson\", \"G. Sigur\\u00f0sson\", \"A. Ramsey\", \"Illarramendi\", \"D. Blind\", \"N. Otamendi\", \"J. Cuadrado\", \"I. Gueye\", \"K. Kampl\", \"Rodrigo\", \"C. Ar\\u00e1nguiz\", \"W. Ben Yedder\", \"F. Acerbi\", \"Danilo Pereira\", \"A. Kramari\\u0107\", \"Louri Beretta\", \"Josu\\u00e9 Chiamulera\", \"Ronaldo Cabrais\", \"Oyarzabal\", \"L. Bailey\", \"Gabriel Jesus\", \"M. Kova\\u010di\\u0107\", \"A. Belotti\", \"N. Ke\\u00efta\", \"L. Torreira\", \"R\\u00faben Neves\", \"P. Kimpembe\", \"S. Bergwijn\", \"N\\u00e9lson Semedo\", \"D. Rugani\", \"A. Correa\", \"I\\u00f1aki Williams\", \"H. Lozano\", \"Gelson Martins\", \"T. Partey\", \"K. Demirbay\", \"J. Matip\", \"Suso\", \"S. Savi\\u0107\", \"A. R\\u00fcdiger\", \"Ricardo Pereira\", \"N. Tagliafico\", \"Muniain\", \"M. G\\u00f6tze\", \"T. Delaney\", \"Willian Jos\\u00e9\", \"Sergi Roberto\", \"N. Schulz\", \"K. Volland\", \"Nacho Fern\\u00e1ndez\", \"Gabriel Paulista\", \"J. Roussillon\", \"H. Maguire\", \"T. Hazard\", \"E. Forsberg\", \"F. Kosti\\u0107\", \"M. Politano\", \"Rafa\", \"D. De Rossi\", \"Aduriz\", \"Jes\\u00fas Navas\", \"Santi Cazorla\", \"H. Herrera\", \"L. Biglia\", \"Juan Mata\", \"O. Giroud\", \"S. Kj\\u00e6r\", \"Willian\", \"V. \\u0106orluka\", \"M. Arnautovi\\u0107\", \"A. S\\u00e1nchez\", \"Giuliano\", \"A. Kolarov\", \"M. Balotelli\", \"Marlos\", \"Taison\", \"B. Dost\", \"G. Bonaventura\", \"Pedro\", \"L. de Jong\", \"S. El Shaarawy\", \"Ander Herrera\", \"X. Shaqiri\", \"M\\u00e1rio Fernandes\", \"S. Coates\", \"C. Bakambu\", \"T. Meunier\", \"K. Bellarabi\", \"J. Lingard\", \"Q. Promes\", \"J. Vardy\", \"D. Zapata\", \"Morales\", \"Juiano Mestres\", \"Rosberto Dourado\", \"E. Schetino\", \"J. Sildero\", \"L. Mart\\u00ednez\", \"H. Aouar\", \"T. Ndombele\", \"\\u00c9der Milit\\u00e3o\", \"D. van de Beek\", \"V. Lindel\\u00f6f\", \"Dani Ceballos\", \"Pablo Fornals\", \"E. Can\", \"Gay\\u00e0\", \"David Neres\", \"P. Zieli\\u0144ski\", \"G. Xhaka\", \"Rafinha\", \"G. Kondogbia\", \"M. Sabitzer\", \"L. Shaw\", \"J. Mart\\u00ednez\", \"A. Doucour\\u00e9\", \"W. Ndidi\", \"W. Orban\", \"A. Plea\", \"Y. Poulsen\", \"R. Fraser\", \"M. Ginter\", \"R. Guerreiro\", \"Jo\\u00e3o M\\u00e1rio\", \"Thiago Mendes\", \"A. Izzo\", \"M. Brozovi\\u0107\", \"A. Ljaji\\u0107\", \"J. Corona\", \"L. Milivojevi\\u0107\", \"Gerard Moreno\", \"W. Weghorst\", \"Quaresma\", \"J. Mathieu\", \"J. Milner\", \"L. L\\u00f3pez\", \"B. Gomis\", \"M. Demb\\u00e9l\\u00e9\", \"Cesc F\\u00e0bregas\", \"L. Koscielny\", \"Jardel\", \"Renato Augusto\", \"Jos\\u00e9 Fonte\", \"A. Guardado\", \"L. Piszczek\", \"K. Gameiro\", \"D. Payet\", \"Be\\u00f1at\", \"B. H\\u00f6wedes\", \"M. Sissoko\", \"M. Parolo\", \"Fernando\", \"N. Gait\\u00e1n\", \"S. Giovinco\", \"Luiz Gustavo\", \"N. Nkoulou\", \"N. Mati\\u0107\", \"Marcos Alonso\", \"H. Mkhitaryan\", \"Andr\\u00e9 Almeida\", \"A. Florenzi\", \"E. Zahavi\", \"F. V\\u00e1zquez\", \"Lucas V\\u00e1zquez\", \"Dani Garc\\u00eda\", \"M. Acu\\u00f1a\", \"Laure Santeiro\", \"J. Frendado\", \"S. Ardero\", \"L. D\\u00e1lves\", \"S. Mand\\u00edquez\"], \"textfont\": {\"color\": \"black\", \"family\": \"sans serif\", \"size\": 10}, \"type\": \"scatter\", \"x\": [95, 94, 87, 84, 82, 52, 72, 90, 89, 22, 94, 65, 33, 93, 63, 91, 88, 67, 89, 80, 75, 83, 77, 65, 72, 88, 42, 75, 87, 89, 87, 45, 78, 64, 86, 69, 40, 84, 56, 86, 55, 45, 73, 69, 77, 81, 33, 42, 60, 51, 66, 79, 85, 78, 56, 76, 48, 77, 80, 87, 87, 87, 50, 64, 40, 22, 80, 64, 78, 66, 57, 37, 39, 77, 84, 25, 63, 89, 41, 73, 86, 79, 88, 60, 84, 73, 71, 55, 88, 72, 83, 74, 78, 81, 79, 58, 82, 53, 69, 78, 76, 79, 76, 81, 82, 77, 65, 25, 74, 46, 73, 74, 44, 62, 73, 43, 88, 70, 79, 85, 75, 34, 46, 78, 71, 81, 51, 80, 64, 76, 83, 81, 77, 80, 39, 79, 30, 80, 56, 86, 88, 82, 80, 20, 75, 77, 82, 36, 81, 29, 69, 50, 86, 75, 40, 78, 60, 76, 80, 86, 78, 86, 81, 85, 52, 68, 29, 76, 55, 78, 82, 80, 57, 45, 27, 89, 86, 43, 85, 51, 75, 68, 85, 68, 55, 84, 67, 78, 75, 72, 62, 54, 64, 50, 63, 80, 66, 88, 37, 60, 86, 85, 38, 74, 86, 75, 84, 61, 88, 74, 61, 64, 31, 74, 50, 33, 82, 83, 76, 70, 68, 74, 36, 70, 34, 32, 62, 58, 76, 78, 72, 84, 63, 48, 84, 32, 42, 63, 48, 76, 70, 74, 76, 73, 50, 83, 66, 70, 72, 50, 74, 83, 55, 77, 44, 78, 76, 77, 60, 83, 79, 76, 86, 70, 78, 82, 80, 71, 71, 56, 42, 84, 72, 73, 77, 80, 85, 87, 83, 56, 53, 38, 74, 82, 74, 59, 48, 77, 42, 68, 77, 60, 61, 76, 68, 53, 73, 69, 79, 44, 84, 73, 50, 40, 82, 80, 75, 55, 73, 64, 63, 19, 69, 70, 72, 55, 80, 84, 67, 52, 62, 86, 84, 64, 71, 37, 38, 65, 40, 64, 64, 80, 76, 65, 51, 65, 70, 54, 71, 78, 48, 33, 59, 68, 74, 58, 70, 86, 77, 72, 69, 66, 72, 56, 72, 82, 83], \"y\": [26, 24, 29, 22, 51, 85, 71, 41, 32, 87, 38, 85, 89, 24, 90, 38, 19, 80, 49, 40, 65, 47, 22, 87, 29, 39, 87, 62, 45, 36, 38, 88, 40, 86, 33, 80, 85, 18, 88, 40, 86, 86, 84, 71, 22, 35, 87, 83, 83, 85, 79, 51, 42, 72, 70, 52, 80, 47, 65, 46, 32, 30, 80, 77, 85, 87, 72, 78, 77, 85, 80, 86, 81, 57, 30, 89, 80, 20, 85, 40, 24, 34, 18, 86, 52, 82, 83, 84, 18, 64, 44, 86, 34, 38, 33, 80, 63, 86, 70, 20, 73, 29, 21, 45, 25, 41, 79, 84, 46, 82, 67, 62, 86, 81, 19, 85, 16, 69, 54, 60, 88, 86, 86, 32, 67, 75, 83, 43, 34, 52, 26, 26, 22, 40, 80, 75, 82, 62, 79, 16, 32, 36, 42, 84, 71, 30, 25, 80, 33, 82, 75, 79, 19, 63, 86, 39, 84, 44, 26, 18, 28, 22, 20, 55, 72, 50, 82, 47, 82, 49, 44, 31, 70, 81, 85, 15, 19, 83, 14, 83, 90, 78, 30, 74, 81, 29, 76, 55, 68, 80, 79, 83, 74, 83, 59, 40, 72, 26, 85, 71, 26, 24, 82, 33, 30, 18, 19, 63, 32, 62, 77, 69, 81, 26, 80, 82, 44, 31, 29, 36, 81, 54, 79, 18, 83, 82, 78, 79, 38, 57, 88, 30, 78, 78, 33, 84, 82, 80, 79, 46, 17, 68, 29, 39, 80, 49, 69, 58, 67, 74, 21, 20, 79, 51, 82, 39, 35, 38, 81, 20, 42, 40, 26, 68, 31, 37, 25, 79, 48, 84, 85, 21, 79, 33, 49, 36, 53, 22, 45, 84, 80, 76, 33, 25, 63, 69, 80, 67, 79, 74, 73, 80, 82, 32, 71, 69, 66, 81, 53, 79, 15, 76, 83, 80, 30, 33, 42, 77, 64, 62, 76, 82, 77, 35, 54, 73, 41, 25, 11, 83, 79, 34, 35, 70, 58, 83, 75, 64, 80, 74, 78, 39, 39, 65, 81, 81, 82, 81, 43, 28, 82, 78, 75, 78, 55, 80, 78, 34, 48, 58, 77, 75, 23, 82, 23, 24, 13]}],\n",
       "                        {\"autosize\": false, \"height\": 1000, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"size\": 20}, \"text\": \"Visualizaci\\u00f3n de la base de a dos variables num\\u00e9ricas\"}, \"width\": 1000, \"xaxis\": {\"title\": {\"text\": \"attacking_finishing\"}}, \"yaxis\": {\"title\": {\"text\": \"defending_sliding_tackle\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('929a0c60-536f-4c41-94f8-a40cddda9e76');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = []\n",
    "bool_crack = df_filter[\"overall\"] > 80 #diferenciamos a los mejores jugadores\n",
    "\n",
    "#Elejimos dos variables, para esto elejimos dos números entre 0 y  de n_skills-1\n",
    "skill_1 = numeric_features[7]\n",
    "skill_2 = numeric_features[34]\n",
    "\n",
    "\n",
    "\n",
    "graf1 = go.Scatter(x=df_over[skill_1], y=df_over[skill_2],\n",
    "                           mode='markers',\n",
    "                        text=df_filter.loc[:,'short_name'], #'Height', 'Weight', 'Club', 'Age', 'Name','Position'\n",
    "                           marker=dict(\n",
    "                                size=5)\n",
    "                           )\n",
    "\n",
    "crack = go.Scatter(x=df_over.loc[bool_crack,skill_1], y=df_over.loc[bool_crack,skill_2],name='Top players',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=10,color='black'),\n",
    "                      opacity=0.9,mode='text')\n",
    "\n",
    "data = [graf1,crack]\n",
    "\n",
    "layout = go.Layout(title=\"Visualización de la base de a dos variables numéricas\",titlefont=dict(size=20),\n",
    "                xaxis=dict(title=skill_1),\n",
    "                yaxis=dict(title=skill_2),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3- Uso de técnicas de clustering: k-Medias, Mean Shift, y jerárquico"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### 3.1 K-means\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Primero utilizamos el método del codo para elegir hiperparámetros (la cantidad de clusters en este caso). Trabajamos con la variable **df_over** al comienzo y luego vemos si los resultados son muy diferentes con su forma normalizada **X_norm**. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:35.254971Z",
     "start_time": "2020-10-13T02:24:34.269886Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Inertia of k-Means versus number of clusters')"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans,MeanShift\n",
    "from sklearn import decomposition\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "scores_df_over = [KMeans(n_clusters=i+2).fit(df_over).inertia_ for i in range(10)]\n",
    "\n",
    "plt.plot(np.arange(2, 12), scores_df_over)\n",
    "plt.xlabel('Number of clusters')\n",
    "plt.ylabel(\"Inertia\")\n",
    "plt.title(\"Inertia of k-Means versus number of clusters\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.260675Z",
     "start_time": "2020-10-13T02:24:35.256613Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Inertia of k-Means versus number of clusters')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scores_X_norm = [KMeans(n_clusters=i+2).fit(X_norm).inertia_ for i in range(10)]\n",
    "\n",
    "plt.plot(np.arange(2, 12), scores_X_norm)\n",
    "plt.xlabel('Number of clusters')\n",
    "plt.ylabel(\"Inertia\")\n",
    "plt.title(\"Inertia of k-Means versus number of clusters\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Como casi no hay diferencia, graficamos graficamos el resultado kmedias con la cantidad de clases elegida sobre **X_norm** usando dos variables a la vez.\n",
    "El numero de clusters que buscamos es 3, ya que hemos descartado a los arqueros, que eran facilmente distinguibles a partir de las features. Por lo tanto, nos resta encontrar defensores, mediocampistas y delanteros."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.328069Z",
     "start_time": "2020-10-13T02:24:36.262548Z"
    }
   },
   "outputs": [],
   "source": [
    "n_clust = 3\n",
    "\n",
    "km = KMeans(n_clusters=n_clust)\n",
    "km.fit(X_norm)\n",
    "\n",
    "# Recuperacion de etiquetas\n",
    "clusters = km.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.718370Z",
     "start_time": "2020-10-13T02:24:36.329906Z"
    }
   },
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-21-bd6b62683a0d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m#Eligo dos números entre 0 y  de n_skills-1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mskill_1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnumeric_features\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m17\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mskill_2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnumeric_features\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m44\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "## data=[]\n",
    "bool_crack=df_filter[\"overall\"] > 85\n",
    "bool_no_crack=df_filter[\"overall\"]<86\n",
    "\n",
    "\n",
    "#Eligo dos números entre 0 y  de n_skills-1\n",
    "skill_1 = numeric_features[17]\n",
    "skill_2 = numeric_features[44]\n",
    "\n",
    "\n",
    "kmean_clusters = go.Scatter(x=df_over[skill_1], y=df_over[skill_2],\n",
    "                           mode='markers',\n",
    "                        text=df_filter.loc[:,'short_name'],\n",
    "                           marker=dict(\n",
    "                                size=5,\n",
    "                                color = clusters.astype(np.float), #set color equal to a variable\n",
    "                                colorscale='Portland',\n",
    "                                showscale=False)\n",
    "                           )\n",
    "\n",
    "crack =go.Scatter(x=df_over.loc[bool_crack,skill_1], y=df_over.loc[bool_crack,skill_2],name='Cracks!!',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=10,color='black'),\n",
    "                      opacity=0.9,mode='text')\n",
    "\n",
    "data=[kmean_clusters,crack]\n",
    "\n",
    "layout = go.Layout(title=\"Clustering K means \",titlefont=dict(size=20),\n",
    "                xaxis=dict(title=skill_1),\n",
    "                yaxis=dict(title=skill_2),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "En el grafico pueden verse los 3 clusters. El color amarillo corresponde a los defensores, el color azul a mediocampistas y el color rojo a delanteros. Los jugadores mas reconocidos estan, en general, bien clasificados, aunque hay un poco de ruido, especialmente entre los defensores, donde algunos son etiquetados como mediocampistas. Esto puede deberse a que las habilidades de algunas posiciones en defensa (como aquellas por los laterales), suelen parecerse a las habilidades de los jugadores volantes carrileros."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 3.2 Mean Shift"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Probamos Mean Shift primero para **df_over** y luego para **X_norm**.\n",
    "Pero antes estimamos el ancho de banda optimo:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.720832Z",
     "start_time": "2020-10-13T02:24:35.880Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans,MeanShift,estimate_bandwidth\n",
    "from sklearn import decomposition\n",
    "\n",
    "qt = [0.2, 0.5, 0.8, 0.9]\n",
    "bw = estimate_bandwidth(df_over, quantile=0.09)\n",
    "bw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.722271Z",
     "start_time": "2020-10-13T02:24:36.077Z"
    }
   },
   "outputs": [],
   "source": [
    "ms = MeanShift(bandwidth=bw)\n",
    "\n",
    "ms.fit(df_over)\n",
    "\n",
    "clusters2 = ms.labels_\n",
    "cluster_centers = ms.cluster_centers_\n",
    "\n",
    "labels_unique = np.unique(clusters2)\n",
    "n_clusters_ = len(labels_unique)\n",
    "\n",
    "print(\"Numero de clusters encontrado por Mean Shift : %d\" % n_clusters_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.723956Z",
     "start_time": "2020-10-13T02:24:36.315Z"
    }
   },
   "outputs": [],
   "source": [
    "ms_norm = MeanShift(bandwidth=12, bin_seeding=True)\n",
    "\n",
    "ms_norm.fit(X_norm)\n",
    "\n",
    "clusters2_norm = ms_norm.labels_\n",
    "cluster_centers_norm = ms_norm.cluster_centers_\n",
    "\n",
    "labels_unique_norm = np.unique(clusters2_norm)\n",
    "n_clusters_norm = len(labels_unique)\n",
    "\n",
    "print(\"Numero estimado de clusters para Mean Shift : %d\" % n_clusters_norm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Graficamos Mean Shift para la variable df_over\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:24:36.725482Z",
     "start_time": "2020-10-13T02:24:36.668Z"
    }
   },
   "outputs": [],
   "source": [
    "data=[]\n",
    "bool_crack=df_filter[\"overall\"] > 85\n",
    "bool_no_crack=df_filter[\"overall\"]<86\n",
    "\n",
    "\n",
    "#Eligo dos números entre 0 y  de n_skills-1\n",
    "skill_1 = numeric_features[7]\n",
    "skill_2 = numeric_features[34]\n",
    "\n",
    "\n",
    "MeanShift_clusters = go.Scatter(x=df_over[skill_1], y=df_over[skill_2],\n",
    "                           mode='markers',\n",
    "                        text=df_filter.loc[:,'short_name'],\n",
    "                           marker=dict(\n",
    "                                size=5,\n",
    "                                color = clusters2.astype(np.float), #set color equal to a variable\n",
    "                                colorscale='Portland',\n",
    "                                showscale=False)\n",
    "                           )\n",
    "\n",
    "crack =go.Scatter(x=df_over.loc[bool_crack,skill_1], y=df_over.loc[bool_crack,skill_2],name='Top players',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=10,color='black'),\n",
    "                      opacity=0.9,mode='text')\n",
    "\n",
    "data=[MeanShift_clusters,crack]\n",
    "\n",
    "layout = go.Layout(title=\"Mean Shift\",titlefont=dict(size=20),\n",
    "                xaxis=dict(title=skill_1),\n",
    "                yaxis=dict(title=skill_2),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Podemos ver que el modelo mean_shift no da los resultados que esperamos. El principal obstaculo es la dificultad para obtener el numero de clusters deseado, por mucho que se intente modificar el hiperparametro bandwith. Esto puede deberse a la proximidad que existe entre los jugadores, lo que complicada para construir un ancho de banda efectivo para la separacion en clusters."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 3.3 Jerarquico"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Como algoritmo jerárquico vamos a utilizar  AgglomerativeClustering de scikitlearn utilizando como métrica \"cityblock\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:25:27.317603Z",
     "start_time": "2020-10-13T02:25:27.293322Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estimated number of clusters: 3\n"
     ]
    }
   ],
   "source": [
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "ac = AgglomerativeClustering(n_clusters=3, linkage='complete', affinity='l1')\n",
    "ac.fit(df_over)\n",
    "\n",
    "labels_unique_ac = np.unique(ac.labels_)\n",
    "n_clusters_ac = len(labels_unique_ac)\n",
    "print('Estimated number of clusters: %d' % n_clusters_ac)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:29:08.342506Z",
     "start_time": "2020-10-13T02:29:08.280150Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": false
       },
       "data": [
        {
         "marker": {
          "color": [
           0,
           0,
           0,
           0,
           0,
           2,
           2,
           0,
           0,
           1,
           0,
           2,
           1,
           0,
           2,
           0,
           0,
           2,
           0,
           0,
           0,
           0,
           0,
           2,
           0,
           0,
           1,
           2,
           0,
           0,
           0,
           2,
           0,
           2,
           0,
           2,
           2,
           0,
           2,
           0,
           2,
           2,
           2,
           2,
           0,
           0,
           1,
           1,
           2,
           2,
           2,
           0,
           0,
           2,
           2,
           0,
           1,
           0,
           2,
           0,
           0,
           0,
           1,
           2,
           1,
           1,
           2,
           2,
           2,
           2,
           2,
           1,
           1,
           0,
           0,
           1,
           2,
           0,
           2,
           0,
           0,
           0,
           0,
           2,
           0,
           2,
           2,
           2,
           0,
           2,
           0,
           2,
           0,
           0,
           0,
           2,
           2,
           1,
           2,
           0,
           2,
           0,
           0,
           0,
           0,
           0,
           2,
           1,
           0,
           1,
           2,
           2,
           1,
           2,
           0,
           1,
           0,
           2,
           0,
           0,
           2,
           1,
           2,
           0,
           2,
           2,
           2,
           0,
           0,
           2,
           0,
           0,
           0,
           0,
           1,
           2,
           1,
           2,
           2,
           0,
           0,
           0,
           0,
           1,
           2,
           0,
           0,
           1,
           0,
           1,
           2,
           2,
           0,
           0,
           1,
           0,
           2,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           2,
           0,
           1,
           0,
           2,
           0,
           0,
           0,
           2,
           1,
           1,
           0,
           0,
           1,
           0,
           1,
           2,
           2,
           0,
           2,
           2,
           0,
           2,
           0,
           2,
           2,
           2,
           1,
           0,
           2,
           2,
           0,
           2,
           0,
           1,
           2,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           2,
           0,
           2,
           2,
           2,
           1,
           0,
           2,
           1,
           0,
           0,
           0,
           0,
           2,
           2,
           1,
           0,
           1,
           1,
           2,
           2,
           0,
           0,
           2,
           0,
           2,
           2,
           0,
           1,
           1,
           2,
           1,
           0,
           0,
           0,
           0,
           0,
           2,
           0,
           0,
           2,
           2,
           2,
           0,
           0,
           1,
           0,
           1,
           0,
           0,
           0,
           2,
           0,
           0,
           0,
           0,
           2,
           0,
           0,
           0,
           2,
           0,
           2,
           1,
           0,
           2,
           0,
           0,
           0,
           0,
           0,
           0,
           1,
           2,
           1,
           0,
           0,
           2,
           2,
           1,
           2,
           2,
           2,
           2,
           2,
           2,
           0,
           2,
           2,
           2,
           2,
           0,
           2,
           0,
           2,
           2,
           1,
           0,
           0,
           0,
           1,
           2,
           2,
           2,
           1,
           2,
           0,
           0,
           2,
           0,
           0,
           0,
           1,
           2,
           0,
           0,
           2,
           2,
           1,
           1,
           2,
           1,
           2,
           2,
           0,
           0,
           2,
           1,
           2,
           2,
           2,
           0,
           0,
           1,
           1,
           2,
           2,
           0,
           2,
           2,
           0,
           2,
           0,
           2,
           2,
           0,
           1,
           0,
           0,
           0,
           0,
           2,
           1,
           1,
           2,
           2,
           2,
           1,
           2,
           0,
           0,
           2,
           2,
           0,
           1,
           2,
           2,
           0,
           0,
           0,
           0,
           1,
           2,
           2,
           0,
           2,
           1,
           2,
           2,
           2,
           2,
           0,
           2,
           2,
           1,
           0,
           2,
           0,
           2,
           1,
           0,
           2,
           1,
           0,
           0,
           0,
           1,
           0,
           0,
           0,
           1,
           2,
           1,
           1,
           2,
           0,
           1,
           2,
           2,
           2,
           1,
           0,
           2,
           2,
           0,
           2,
           2,
           0,
           0,
           0,
           2,
           0,
           0,
           1,
           0,
           1,
           2,
           0,
           2,
           1,
           2,
           0,
           0,
           2,
           0,
           2,
           1,
           2,
           2,
           1,
           2,
           1,
           0,
           0,
           0,
           2,
           1,
           2,
           0,
           0,
           2,
           2,
           0,
           2,
           1,
           1,
           0,
           1,
           2,
           0,
           0,
           1,
           0,
           0,
           1,
           0,
           0,
           0,
           2,
           2,
           1,
           0,
           2,
           0,
           0,
           0,
           2,
           2,
           0,
           0,
           0,
           2,
           2,
           2,
           2,
           0,
           2,
           0,
           2,
           1,
           2,
           2,
           2,
           0,
           0,
           2,
           0,
           0,
           1,
           0,
           2,
           2,
           1,
           2,
           1,
           0,
           0,
           2,
           2,
           1,
           1,
           0,
           1,
           1,
           0,
           2,
           0,
           2,
           2,
           2,
           0,
           0,
           1,
           0,
           2,
           0,
           2,
           0,
           0,
           0,
           0,
           0,
           1,
           0,
           2,
           2,
           2,
           2,
           2,
           1,
           2,
           1,
           1,
           1,
           0,
           2,
           2,
           2,
           0,
           0,
           0,
           2,
           1,
           1,
           1,
           2,
           1,
           2,
           2,
           0,
           1,
           0,
           0,
           1,
           0,
           0,
           1,
           1,
           2,
           2,
           2,
           2,
           2,
           2,
           0,
           1,
           2,
           0,
           0,
           0,
           0,
           1,
           2,
           0,
           2,
           1,
           1,
           0,
           2,
           2,
           0,
           1,
           0,
           2,
           2,
           0,
           2,
           0,
           2,
           2,
           2,
           0,
           0,
           2,
           2,
           1,
           0,
           0,
           2,
           0,
           2,
           0,
           0,
           2,
           2,
           0,
           2,
           1,
           0,
           0,
           0,
           2,
           2,
           1,
           0,
           0,
           0,
           2,
           2,
           2,
           1,
           0,
           2,
           0,
           2,
           2,
           2,
           0,
           0,
           0,
           2,
           2,
           2,
           0,
           0,
           1,
           1,
           2,
           0,
           0,
           2,
           2,
           1,
           2,
           0,
           1,
           2,
           0
          ],
          "colorscale": [
           [
            0,
            "rgb(12,51,131)"
           ],
           [
            0.25,
            "rgb(10,136,186)"
           ],
           [
            0.5,
            "rgb(242,211,56)"
           ],
           [
            0.75,
            "rgb(242,143,56)"
           ],
           [
            1,
            "rgb(217,30,30)"
           ]
          ],
          "showscale": false,
          "size": 5
         },
         "mode": "markers",
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette",
          "M. de Ligt",
          "F. de Jong",
          "R. Varane",
          "N. Süle",
          "S. Milinković-Savić",
          "Rodri",
          "Saúl",
          "Fabinho",
          "A. Robertson",
          "J. Giménez",
          "C. Lenglet",
          "Bruno Fernandes",
          "R. Lukaku",
          "K. Manolas",
          "D. Alaba",
          "M. Icardi",
          "Carvajal",
          "H. Ziyech",
          "Z. Ibrahimović",
          "A. Gómez",
          "G. Higuaín",
          "B. Matuidi",
          "G. Bale",
          "Marcelo",
          "A. Witsel",
          "Alex Sandro",
          "Iago Aspas",
          "Koke",
          "J. Rodríguez",
          "Allan",
          "J. Sancho",
          "K. Havertz",
          "O. Dembélé",
          "João Cancelo",
          "D. Alli",
          "L. Hernández",
          "Arthur",
          "M. Depay",
          "L. Goretzka",
          "J. Brandt",
          "K. Coman",
          "S. Gnabry",
          "N. Fekir",
          "Luis Alberto",
          "Alex Telles",
          "S. de Vrij",
          "Felipe Anderson",
          "Pepe",
          "João Moutinho",
          "M. Hamšík",
          "Sokratis",
          "Lucas Leiva",
          "M. Özil",
          "Javi Martínez",
          "E. Džeko",
          "G. Wijnaldum",
          "I. Perišić",
          "M. Mandžukić",
          "A. Vidal",
          "J. Boateng",
          "Azpilicueta",
          "José Callejón",
          "I. Gündoğan",
          "Paulinho",
          "K. Walker",
          "Canales",
          "Douglas Costa",
          "Pizzi",
          "D. Tadić",
          "J. Iličić",
          "R. Mahrez",
          "E. Višća",
          "Felipe",
          "Fabián",
          "A. Romagnoli",
          "G. Lo Celso",
          "T. Alexander-Arnold",
          "L. Jović",
          "A. Milik",
          "A. Martial",
          "Anderson Talisca",
          "J. Tah",
          "C. Tolisso",
          "Gonçalo Guedes",
          "N. Pépé",
          "M. Akanji",
          "M. Rashford",
          "J. Stones",
          "A. Rabiot",
          "Grimaldo",
          "T. Werner",
          "T. Lemar",
          "D. Sánchez",
          "Marco Asensio",
          "L. Digne",
          "J. Draxler",
          "Y. Carrasco",
          "Borja Iglesias",
          "W. Zaha",
          "Paco Alcácer",
          "Morata",
          "S. Haller",
          "William Carvalho",
          "F. Bernardeschi",
          "D. Djené",
          "Oscar",
          "Bartra",
          "Pablo Sarabia",
          "Lucas Moura",
          "F. Thauvin",
          "Jorginho",
          "V. Kompany",
          "Raúl Albiol",
          "F. Quagliarella",
          "Falcao",
          "Miranda",
          "C. Vela",
          "E. Garay",
          "R. Nainggolan",
          "E. Banega",
          "Diego Costa",
          "S. Khedira",
          "David Luiz",
          "M. Kruse",
          "J. Henderson",
          "G. Sigurðsson",
          "A. Ramsey",
          "Illarramendi",
          "D. Blind",
          "N. Otamendi",
          "J. Cuadrado",
          "I. Gueye",
          "K. Kampl",
          "Rodrigo",
          "C. Aránguiz",
          "W. Ben Yedder",
          "F. Acerbi",
          "Danilo Pereira",
          "A. Kramarić",
          "Louri Beretta",
          "Josué Chiamulera",
          "Ronaldo Cabrais",
          "Oyarzabal",
          "L. Bailey",
          "Gabriel Jesus",
          "M. Kovačić",
          "A. Belotti",
          "N. Keïta",
          "L. Torreira",
          "Rúben Neves",
          "P. Kimpembe",
          "S. Bergwijn",
          "Nélson Semedo",
          "D. Rugani",
          "A. Correa",
          "Iñaki Williams",
          "H. Lozano",
          "Gelson Martins",
          "T. Partey",
          "K. Demirbay",
          "J. Matip",
          "Suso",
          "S. Savić",
          "A. Rüdiger",
          "Ricardo Pereira",
          "N. Tagliafico",
          "Muniain",
          "M. Götze",
          "T. Delaney",
          "Willian José",
          "Sergi Roberto",
          "N. Schulz",
          "K. Volland",
          "Nacho Fernández",
          "Gabriel Paulista",
          "J. Roussillon",
          "H. Maguire",
          "T. Hazard",
          "E. Forsberg",
          "F. Kostić",
          "M. Politano",
          "Rafa",
          "D. De Rossi",
          "Aduriz",
          "Jesús Navas",
          "Santi Cazorla",
          "H. Herrera",
          "L. Biglia",
          "Juan Mata",
          "O. Giroud",
          "S. Kjær",
          "Willian",
          "V. Ćorluka",
          "M. Arnautović",
          "A. Sánchez",
          "Giuliano",
          "A. Kolarov",
          "M. Balotelli",
          "Marlos",
          "Taison",
          "B. Dost",
          "G. Bonaventura",
          "Pedro",
          "L. de Jong",
          "S. El Shaarawy",
          "Ander Herrera",
          "X. Shaqiri",
          "Mário Fernandes",
          "S. Coates",
          "C. Bakambu",
          "T. Meunier",
          "K. Bellarabi",
          "J. Lingard",
          "Q. Promes",
          "J. Vardy",
          "D. Zapata",
          "Morales",
          "Juiano Mestres",
          "Rosberto Dourado",
          "E. Schetino",
          "J. Sildero",
          "L. Martínez",
          "H. Aouar",
          "T. Ndombele",
          "Éder Militão",
          "D. van de Beek",
          "V. Lindelöf",
          "Dani Ceballos",
          "Pablo Fornals",
          "E. Can",
          "Gayà",
          "David Neres",
          "P. Zieliński",
          "G. Xhaka",
          "Rafinha",
          "G. Kondogbia",
          "M. Sabitzer",
          "L. Shaw",
          "J. Martínez",
          "A. Doucouré",
          "W. Ndidi",
          "W. Orban",
          "A. Plea",
          "Y. Poulsen",
          "R. Fraser",
          "M. Ginter",
          "R. Guerreiro",
          "João Mário",
          "Thiago Mendes",
          "A. Izzo",
          "M. Brozović",
          "A. Ljajić",
          "J. Corona",
          "L. Milivojević",
          "Gerard Moreno",
          "W. Weghorst",
          "Quaresma",
          "J. Mathieu",
          "J. Milner",
          "L. López",
          "B. Gomis",
          "M. Dembélé",
          "Cesc Fàbregas",
          "L. Koscielny",
          "Jardel",
          "Renato Augusto",
          "José Fonte",
          "A. Guardado",
          "L. Piszczek",
          "K. Gameiro",
          "D. Payet",
          "Beñat",
          "B. Höwedes",
          "M. Sissoko",
          "M. Parolo",
          "Fernando",
          "N. Gaitán",
          "S. Giovinco",
          "Luiz Gustavo",
          "N. Nkoulou",
          "N. Matić",
          "Marcos Alonso",
          "H. Mkhitaryan",
          "André Almeida",
          "A. Florenzi",
          "E. Zahavi",
          "F. Vázquez",
          "Lucas Vázquez",
          "Dani García",
          "M. Acuña",
          "Laure Santeiro",
          "J. Frendado",
          "S. Ardero",
          "L. Dálves",
          "S. Mandíquez",
          "João Félix",
          "N. Barella",
          "J. Gomez",
          "A. Christensen",
          "Y. Tielemans",
          "Mario Hermoso",
          "Carlos Soler",
          "M. Caldara",
          "H. Winks",
          "K. Piątek",
          "Diogo Jota",
          "Marcos Llorente",
          "F. Mendy",
          "Melendo",
          "Rúben Dias",
          "Héctor Bellerín",
          "B. Mendy",
          "M. Dembélé",
          "Santi Mina",
          "Rony Lopes",
          "J. Correa",
          "T. Bakayoko",
          "M. Eggestein",
          "Odriozola",
          "M. Gómez",
          "Sergi Darder",
          "K. Zouma",
          "L. Paredes",
          "N. Aké",
          "E. Hysaj",
          "André Gomes",
          "K. Baldé",
          "J. Weigl",
          "V. Rongier",
          "Yeray",
          "Loren",
          "R. Rodríguez",
          "A. Oxlade-Chamberlain",
          "Campaña",
          "A. Mandi",
          "Deulofeu",
          "Bernat",
          "M. Keane",
          "J. Quintero",
          "Samu Castillejo",
          "A. Rebić",
          "E. Bailly",
          "M. Almirón",
          "M. Lazzari",
          "M. Lanzini",
          "Sergi Gómez",
          "H. Vanaken",
          "M. Hinteregger",
          "M. Nastasić",
          "Gabriel",
          "C. Wilson",
          "J. Guilavogui",
          "D. Klaassen",
          "P. Kadeřábek",
          "C. Kramer",
          "Iñigo Martínez",
          "Portu",
          "Manu Trigueros",
          "H. Çalhanoğlu",
          "M. Dabbur",
          "M. Halstenberg",
          "M. Vecino",
          "Joaquín",
          "W. Rooney",
          "Nani",
          "J. Mascherano",
          "A. Gignac",
          "Jorge Molina",
          "L. Perrin",
          "Charles",
          "S. Radu",
          "D. Rose",
          "E. Lamela",
          "Raúl García",
          "Naldo",
          "D. Wass",
          "Pedro León",
          "I. Piatti",
          "M. Díaz",
          "M. Valbuena",
          "L. Bender",
          "S. Bender",
          "E. Capoue",
          "Antunes",
          "F. Fazio",
          "M. Hasebe",
          "Sidnei",
          "D. Perotti",
          "L. Pratto",
          "S. Feghouli",
          "K. Trippier",
          "M. Musacchio",
          "Y. M'Vila",
          "L. Stindl",
          "F. Smolov",
          "S. Nzonzi",
          "F. Coquelin",
          "Hulk",
          "K. Strootman",
          "C. Smalling",
          "K. Glik",
          "E. Salvio",
          "K. Vogt",
          "R. Pereyra",
          "Y. Belhanda",
          "Sergi Enrich",
          "D. Lovren",
          "S. Verdi",
          "L. Muriel",
          "D. Vida",
          "Ibai Gómez",
          "S. Berghuis",
          "Cristian Tello",
          "Ismaily",
          "F. Ghoulam",
          "S. Sané",
          "S. Zaza",
          "S. Vrsaljko",
          "Pozuelo",
          "R. Jiménez",
          "Bernard",
          "T. Stepanenko",
          "I. Marcone",
          "Jony",
          "Mata",
          "M. Marega",
          "Everton Andrão",
          "Welington Dano",
          "M. Baldona",
          "M. Nérez",
          "Vinícius Jr.",
          "R. Bentancur",
          "Lucas Paquetá",
          "A. Wan-Bissaka",
          "I. Konaté",
          "Merino",
          "S. Berge",
          "L. Pellegrini",
          "F. Chiesa",
          "Dani Olmo",
          "R. Zobnin",
          "A. Saint-Maximin",
          "C. Pavón",
          "T. Kehrer",
          "C. Pulisic",
          "F. Kessié",
          "A. Hakimi",
          "D. Samassékou",
          "Marc Roca",
          "D. Zagadou",
          "V. Tsygankov",
          "De Tomás",
          "R. Loftus-Cheek",
          "S. Lobotka",
          "J. Denayer",
          "L. Klostermann",
          "A. Golovin",
          "A. Diallo",
          "B. Pavard",
          "M. Rashica",
          "B. Chilwell",
          "Wesley",
          "T. Souček",
          "Junior Firpo",
          "J. Ward-Prowse",
          "A. Januzaj",
          "Otávio",
          "N. Stark",
          "A. Iwobi",
          "J. Gbamin",
          "Munir",
          "Angeliño",
          "J. Maddison",
          "André Silva",
          "Richarlison",
          "S. Nakajima",
          "Raphinha",
          "E. Dier",
          "L. Trossard",
          "Jonny",
          "M. Sanson",
          "J. Lerma",
          "L. Dubois",
          "F. Grillitsch",
          "L. Cabrera",
          "R. Barkley",
          "J. Murillo",
          "J. Tarkowski",
          "J. Brooks",
          "M. Batshuayi",
          "M. Arnold",
          "S. Kolašinac",
          "F. Schär",
          "Ricardo Horta",
          "L. Alario",
          "Mariano",
          "R. Aguilar",
          "F. Balbuena",
          "S. Mustafi",
          "G. Pezzella",
          "D. da Costa",
          "W. Boly",
          "B. Davies",
          "Fred",
          "M. Samatta",
          "Diego Carlos",
          "K. Toko-Ekambi",
          "R. Malinovskyi",
          "M. Sakho",
          "J. King",
          "H. Seferović",
          "Laguardia",
          "P. Jones",
          "S. Aurier",
          "L. Spinazzola",
          "K. Lala",
          "S. Arias",
          "D. Baselli",
          "T. Savanier",
          "Leo Baptistao",
          "J. Veltman",
          "D. Zappacosta",
          "Wu Lei",
          "David Villa",
          "B. Yılmaz",
          "S. Kalou",
          "Dante",
          "M. Debuchy",
          "E. Lavezzi",
          "Borja Valero",
          "M. Škrtel",
          "J. Evans",
          "D. Valeri",
          "N. Moisander",
          "D. Criscito",
          "A. Candreva",
          "Marcano",
          "K. Boateng",
          "A. Fernández",
          "Nacho Monreal",
          "Ángel",
          "Granero",
          "Éder",
          "R. Vormer",
          "S. Coleman",
          "A. Lallana",
          "A. Modeste",
          "M. Gradel",
          "Yuri Berchiche",
          "Mariano",
          "O. Toprak",
          "N. Kalinić",
          "C. Stuani",
          "K. Asamoah",
          "Alex Teixeira",
          "S. Lulić",
          "S. Rondón",
          "S. Kagawa",
          "J. Wilshere",
          "Cote",
          "Iago Falqué",
          "J. Pastore",
          "Maicon",
          "F. Orellana",
          "Elkeson",
          "Kike García",
          "Escudero",
          "Mario Gaspar",
          "Víctor Ruiz",
          "I. Belfodil",
          "A. Yarmolenko",
          "W. Khazri",
          "E. Pérez",
          "D. Caligiuri",
          "Danilo",
          "N. Pallois",
          "Vitolo",
          "M. Badelj",
          "Zé Luís",
          "D. Suárez",
          "Roque Mesa",
          "Mário Rui",
          "T. Inui",
          "D. Cheryshev",
          "C. Bacca",
          "A. Samaris",
          "J. Hector",
          "Rubén Peña",
          "A. Hamdallah",
          "D. Benedetto",
          "L. Sigali",
          "Raúl",
          "Petros",
          "Dyego Sousa",
          "Soares",
          "Rubén Alcaraz",
          "Maikel Catarino",
          "Antônio Chiamuloira",
          "Melvin Parrela",
          "Luimo Boas Santos",
          "D. Lenzado",
          "E. Riquero",
          "E. Aguerro"
         ],
         "type": "scatter",
         "x": [
          95,
          94,
          87,
          84,
          82,
          52,
          72,
          90,
          89,
          22,
          94,
          65,
          33,
          93,
          63,
          91,
          88,
          67,
          89,
          80,
          75,
          83,
          77,
          65,
          72,
          88,
          42,
          75,
          87,
          89,
          87,
          45,
          78,
          64,
          86,
          69,
          40,
          84,
          56,
          86,
          55,
          45,
          73,
          69,
          77,
          81,
          33,
          42,
          60,
          51,
          66,
          79,
          85,
          78,
          56,
          76,
          48,
          77,
          80,
          87,
          87,
          87,
          50,
          64,
          40,
          22,
          80,
          64,
          78,
          66,
          57,
          37,
          39,
          77,
          84,
          25,
          63,
          89,
          41,
          73,
          86,
          79,
          88,
          60,
          84,
          73,
          71,
          55,
          88,
          72,
          83,
          74,
          78,
          81,
          79,
          58,
          82,
          53,
          69,
          78,
          76,
          79,
          76,
          81,
          82,
          77,
          65,
          25,
          74,
          46,
          73,
          74,
          44,
          62,
          73,
          43,
          88,
          70,
          79,
          85,
          75,
          34,
          46,
          78,
          71,
          81,
          51,
          80,
          64,
          76,
          83,
          81,
          77,
          80,
          39,
          79,
          30,
          80,
          56,
          86,
          88,
          82,
          80,
          20,
          75,
          77,
          82,
          36,
          81,
          29,
          69,
          50,
          86,
          75,
          40,
          78,
          60,
          76,
          80,
          86,
          78,
          86,
          81,
          85,
          52,
          68,
          29,
          76,
          55,
          78,
          82,
          80,
          57,
          45,
          27,
          89,
          86,
          43,
          85,
          51,
          75,
          68,
          85,
          68,
          55,
          84,
          67,
          78,
          75,
          72,
          62,
          54,
          64,
          50,
          63,
          80,
          66,
          88,
          37,
          60,
          86,
          85,
          38,
          74,
          86,
          75,
          84,
          61,
          88,
          74,
          61,
          64,
          31,
          74,
          50,
          33,
          82,
          83,
          76,
          70,
          68,
          74,
          36,
          70,
          34,
          32,
          62,
          58,
          76,
          78,
          72,
          84,
          63,
          48,
          84,
          32,
          42,
          63,
          48,
          76,
          70,
          74,
          76,
          73,
          50,
          83,
          66,
          70,
          72,
          50,
          74,
          83,
          55,
          77,
          44,
          78,
          76,
          77,
          60,
          83,
          79,
          76,
          86,
          70,
          78,
          82,
          80,
          71,
          71,
          56,
          42,
          84,
          72,
          73,
          77,
          80,
          85,
          87,
          83,
          56,
          53,
          38,
          74,
          82,
          74,
          59,
          48,
          77,
          42,
          68,
          77,
          60,
          61,
          76,
          68,
          53,
          73,
          69,
          79,
          44,
          84,
          73,
          50,
          40,
          82,
          80,
          75,
          55,
          73,
          64,
          63,
          19,
          69,
          70,
          72,
          55,
          80,
          84,
          67,
          52,
          62,
          86,
          84,
          64,
          71,
          37,
          38,
          65,
          40,
          64,
          64,
          80,
          76,
          65,
          51,
          65,
          70,
          54,
          71,
          78,
          48,
          33,
          59,
          68,
          74,
          58,
          70,
          86,
          77,
          72,
          69,
          66,
          72,
          56,
          72,
          82,
          83,
          79,
          63,
          26,
          36,
          73,
          42,
          74,
          36,
          55,
          86,
          77,
          39,
          63,
          74,
          29,
          52,
          33,
          81,
          82,
          77,
          77,
          37,
          62,
          45,
          84,
          61,
          47,
          55,
          48,
          47,
          67,
          78,
          41,
          71,
          41,
          81,
          59,
          69,
          73,
          41,
          74,
          60,
          50,
          74,
          75,
          79,
          33,
          73,
          67,
          70,
          35,
          75,
          48,
          30,
          67,
          83,
          49,
          77,
          28,
          46,
          42,
          81,
          69,
          65,
          83,
          59,
          61,
          80,
          80,
          68,
          42,
          83,
          85,
          55,
          81,
          55,
          57,
          74,
          82,
          53,
          75,
          76,
          81,
          55,
          74,
          59,
          39,
          69,
          56,
          41,
          45,
          51,
          66,
          78,
          68,
          48,
          40,
          56,
          79,
          82,
          50,
          62,
          81,
          68,
          54,
          27,
          74,
          50,
          74,
          74,
          82,
          33,
          67,
          78,
          41,
          79,
          75,
          76,
          60,
          54,
          37,
          79,
          44,
          71,
          80,
          69,
          53,
          48,
          70,
          84,
          80,
          58,
          51,
          58,
          51,
          68,
          52,
          75,
          44,
          21,
          74,
          34,
          60,
          70,
          75,
          65,
          69,
          72,
          37,
          68,
          64,
          59,
          42,
          59,
          26,
          75,
          81,
          66,
          64,
          42,
          59,
          69,
          38,
          37,
          78,
          43,
          74,
          67,
          66,
          69,
          79,
          67,
          50,
          66,
          40,
          78,
          57,
          69,
          80,
          81,
          72,
          70,
          52,
          80,
          48,
          73,
          56,
          53,
          58,
          23,
          68,
          37,
          40,
          39,
          81,
          77,
          57,
          60,
          76,
          84,
          79,
          49,
          31,
          58,
          48,
          39,
          32,
          58,
          72,
          83,
          26,
          81,
          70,
          23,
          81,
          78,
          49,
          44,
          54,
          60,
          46,
          51,
          67,
          66,
          74,
          50,
          59,
          78,
          83,
          82,
          83,
          47,
          63,
          80,
          67,
          35,
          28,
          78,
          39,
          56,
          73,
          43,
          77,
          69,
          55,
          80,
          73,
          78,
          72,
          61,
          70,
          80,
          80,
          56,
          54,
          28,
          82,
          80,
          55,
          77,
          66,
          78,
          75,
          63,
          46,
          75,
          70,
          40,
          78,
          75,
          78,
          56,
          68,
          37,
          80,
          77,
          79,
          68,
          72,
          61,
          44,
          76,
          54,
          74,
          59,
          65,
          27,
          72,
          78,
          80,
          59,
          55,
          71,
          84,
          81,
          45,
          50,
          65,
          83,
          77,
          66,
          48,
          51,
          68,
          79,
          51,
          53,
          79
         ],
         "y": [
          26,
          24,
          29,
          22,
          51,
          85,
          71,
          41,
          32,
          87,
          38,
          85,
          89,
          24,
          90,
          38,
          19,
          80,
          49,
          40,
          65,
          47,
          22,
          87,
          29,
          39,
          87,
          62,
          45,
          36,
          38,
          88,
          40,
          86,
          33,
          80,
          85,
          18,
          88,
          40,
          86,
          86,
          84,
          71,
          22,
          35,
          87,
          83,
          83,
          85,
          79,
          51,
          42,
          72,
          70,
          52,
          80,
          47,
          65,
          46,
          32,
          30,
          80,
          77,
          85,
          87,
          72,
          78,
          77,
          85,
          80,
          86,
          81,
          57,
          30,
          89,
          80,
          20,
          85,
          40,
          24,
          34,
          18,
          86,
          52,
          82,
          83,
          84,
          18,
          64,
          44,
          86,
          34,
          38,
          33,
          80,
          63,
          86,
          70,
          20,
          73,
          29,
          21,
          45,
          25,
          41,
          79,
          84,
          46,
          82,
          67,
          62,
          86,
          81,
          19,
          85,
          16,
          69,
          54,
          60,
          88,
          86,
          86,
          32,
          67,
          75,
          83,
          43,
          34,
          52,
          26,
          26,
          22,
          40,
          80,
          75,
          82,
          62,
          79,
          16,
          32,
          36,
          42,
          84,
          71,
          30,
          25,
          80,
          33,
          82,
          75,
          79,
          19,
          63,
          86,
          39,
          84,
          44,
          26,
          18,
          28,
          22,
          20,
          55,
          72,
          50,
          82,
          47,
          82,
          49,
          44,
          31,
          70,
          81,
          85,
          15,
          19,
          83,
          14,
          83,
          90,
          78,
          30,
          74,
          81,
          29,
          76,
          55,
          68,
          80,
          79,
          83,
          74,
          83,
          59,
          40,
          72,
          26,
          85,
          71,
          26,
          24,
          82,
          33,
          30,
          18,
          19,
          63,
          32,
          62,
          77,
          69,
          81,
          26,
          80,
          82,
          44,
          31,
          29,
          36,
          81,
          54,
          79,
          18,
          83,
          82,
          78,
          79,
          38,
          57,
          88,
          30,
          78,
          78,
          33,
          84,
          82,
          80,
          79,
          46,
          17,
          68,
          29,
          39,
          80,
          49,
          69,
          58,
          67,
          74,
          21,
          20,
          79,
          51,
          82,
          39,
          35,
          38,
          81,
          20,
          42,
          40,
          26,
          68,
          31,
          37,
          25,
          79,
          48,
          84,
          85,
          21,
          79,
          33,
          49,
          36,
          53,
          22,
          45,
          84,
          80,
          76,
          33,
          25,
          63,
          69,
          80,
          67,
          79,
          74,
          73,
          80,
          82,
          32,
          71,
          69,
          66,
          81,
          53,
          79,
          15,
          76,
          83,
          80,
          30,
          33,
          42,
          77,
          64,
          62,
          76,
          82,
          77,
          35,
          54,
          73,
          41,
          25,
          11,
          83,
          79,
          34,
          35,
          70,
          58,
          83,
          75,
          64,
          80,
          74,
          78,
          39,
          39,
          65,
          81,
          81,
          82,
          81,
          43,
          28,
          82,
          78,
          75,
          78,
          55,
          80,
          78,
          34,
          48,
          58,
          77,
          75,
          23,
          82,
          23,
          24,
          13,
          35,
          76,
          78,
          82,
          68,
          80,
          56,
          80,
          67,
          24,
          44,
          72,
          77,
          53,
          77,
          80,
          80,
          16,
          49,
          27,
          26,
          82,
          65,
          79,
          23,
          69,
          78,
          75,
          81,
          80,
          67,
          28,
          73,
          71,
          85,
          16,
          78,
          66,
          68,
          82,
          22,
          78,
          82,
          22,
          25,
          25,
          81,
          49,
          46,
          25,
          79,
          53,
          81,
          84,
          73,
          25,
          82,
          65,
          77,
          74,
          84,
          59,
          62,
          56,
          27,
          76,
          73,
          39,
          40,
          20,
          80,
          23,
          19,
          82,
          27,
          84,
          83,
          44,
          63,
          78,
          75,
          36,
          22,
          70,
          34,
          82,
          81,
          77,
          82,
          77,
          80,
          77,
          22,
          55,
          31,
          79,
          80,
          72,
          50,
          24,
          74,
          79,
          28,
          74,
          79,
          77,
          56,
          78,
          70,
          55,
          31,
          84,
          60,
          22,
          83,
          55,
          30,
          42,
          75,
          80,
          77,
          50,
          77,
          36,
          28,
          25,
          77,
          73,
          46,
          29,
          28,
          77,
          81,
          77,
          81,
          18,
          64,
          56,
          86,
          79,
          65,
          67,
          72,
          34,
          44,
          76,
          22,
          33,
          83,
          47,
          74,
          71,
          79,
          74,
          80,
          37,
          20,
          61,
          68,
          81,
          79,
          64,
          81,
          81,
          34,
          81,
          15,
          78,
          76,
          60,
          22,
          27,
          77,
          23,
          71,
          25,
          73,
          34,
          35,
          36,
          36,
          38,
          82,
          18,
          80,
          70,
          79,
          82,
          51,
          82,
          51,
          81,
          79,
          76,
          22,
          66,
          78,
          76,
          35,
          20,
          34,
          79,
          75,
          80,
          78,
          77,
          78,
          80,
          71,
          23,
          75,
          18,
          48,
          78,
          27,
          40,
          76,
          80,
          81,
          78,
          74,
          78,
          63,
          68,
          19,
          78,
          79,
          31,
          38,
          26,
          27,
          80,
          78,
          37,
          62,
          77,
          79,
          30,
          75,
          81,
          53,
          78,
          68,
          64,
          81,
          20,
          62,
          26,
          70,
          80,
          62,
          19,
          35,
          78,
          81,
          81,
          28,
          42,
          80,
          43,
          76,
          18,
          49,
          65,
          82,
          32,
          51,
          76,
          25,
          35,
          21,
          80,
          82,
          82,
          15,
          30,
          30,
          74,
          68,
          79,
          77,
          23,
          76,
          24,
          81,
          76,
          76,
          31,
          55,
          14,
          75,
          77,
          79,
          20,
          25,
          79,
          76,
          78,
          27,
          35,
          76,
          76,
          81,
          77,
          19,
          81,
          77,
          19
         ]
        },
        {
         "mode": "text",
         "name": "Top players",
         "opacity": 0.9,
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette"
         ],
         "textfont": {
          "color": "black",
          "family": "sans serif",
          "size": 10
         },
         "type": "scatter",
         "x": [
          95,
          94,
          87,
          84,
          82,
          52,
          72,
          90,
          89,
          22,
          94,
          65,
          33,
          93,
          63,
          91,
          88,
          67,
          89,
          80,
          75,
          83,
          77,
          65,
          72,
          88,
          42,
          75,
          87,
          89,
          87,
          45,
          78,
          64,
          86,
          69,
          40,
          84,
          56,
          86,
          55,
          45,
          73,
          69,
          77,
          81,
          33,
          42,
          60,
          51,
          66,
          79,
          85,
          78,
          56,
          76,
          48,
          77,
          80,
          87,
          87,
          87
         ],
         "y": [
          26,
          24,
          29,
          22,
          51,
          85,
          71,
          41,
          32,
          87,
          38,
          85,
          89,
          24,
          90,
          38,
          19,
          80,
          49,
          40,
          65,
          47,
          22,
          87,
          29,
          39,
          87,
          62,
          45,
          36,
          38,
          88,
          40,
          86,
          33,
          80,
          85,
          18,
          88,
          40,
          86,
          86,
          84,
          71,
          22,
          35,
          87,
          83,
          83,
          85,
          79,
          51,
          42,
          72,
          70,
          52,
          80,
          47,
          65,
          46,
          32,
          30
         ]
        }
       ],
       "layout": {
        "autosize": false,
        "height": 1000,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 20
         },
         "text": "Jerarquico"
        },
        "width": 1000,
        "xaxis": {
         "title": {
          "text": "attacking_finishing"
         }
        },
        "yaxis": {
         "title": {
          "text": "defending_sliding_tackle"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"cdefc2f5-1460-430d-b9ab-8776ba7eaa38\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"cdefc2f5-1460-430d-b9ab-8776ba7eaa38\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'cdefc2f5-1460-430d-b9ab-8776ba7eaa38',\n",
       "                        [{\"marker\": {\"color\": [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2.0, 1.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 0.0, 0.0, 1.0, 1.0, 2.0, 2.0, 2.0, 0.0, 0.0, 2.0, 2.0, 0.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 1.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 2.0, 1.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 1.0, 2.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 0.0, 0.0, 2.0, 1.0, 2.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 1.0, 0.0, 2.0, 2.0, 0.0, 2.0, 0.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 1.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 1.0, 1.0, 2.0, 2.0, 0.0, 0.0, 2.0, 0.0, 2.0, 2.0, 0.0, 1.0, 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 0.0, 0.0, 2.0, 1.0, 2.0, 2.0, 2.0, 0.0, 0.0, 1.0, 1.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 0.0, 0.0, 2.0, 2.0, 0.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 0.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 1.0, 0.0, 2.0, 0.0, 2.0, 1.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 1.0, 2.0, 0.0, 1.0, 2.0, 2.0, 2.0, 1.0, 0.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 2.0, 0.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 2.0, 2.0, 0.0, 2.0, 1.0, 1.0, 0.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 1.0, 2.0, 2.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2.0, 2.0, 1.0, 2.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 0.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 0.0, 1.0, 0.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 2.0, 2.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 1.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 1.0, 1.0, 2.0, 0.0, 0.0, 2.0, 2.0, 1.0, 2.0, 0.0, 1.0, 2.0, 0.0], \"colorscale\": [[0.0, \"rgb(12,51,131)\"], [0.25, \"rgb(10,136,186)\"], [0.5, \"rgb(242,211,56)\"], [0.75, \"rgb(242,143,56)\"], [1.0, \"rgb(217,30,30)\"]], \"showscale\": false, \"size\": 5}, \"mode\": \"markers\", \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\", \"M. de Ligt\", \"F. de Jong\", \"R. Varane\", \"N. S\\u00fcle\", \"S. Milinkovi\\u0107-Savi\\u0107\", \"Rodri\", \"Sa\\u00fal\", \"Fabinho\", \"A. Robertson\", \"J. Gim\\u00e9nez\", \"C. Lenglet\", \"Bruno Fernandes\", \"R. Lukaku\", \"K. Manolas\", \"D. Alaba\", \"M. Icardi\", \"Carvajal\", \"H. Ziyech\", \"Z. Ibrahimovi\\u0107\", \"A. G\\u00f3mez\", \"G. Higua\\u00edn\", \"B. Matuidi\", \"G. Bale\", \"Marcelo\", \"A. Witsel\", \"Alex Sandro\", \"Iago Aspas\", \"Koke\", \"J. Rodr\\u00edguez\", \"Allan\", \"J. Sancho\", \"K. Havertz\", \"O. Demb\\u00e9l\\u00e9\", \"Jo\\u00e3o Cancelo\", \"D. Alli\", \"L. Hern\\u00e1ndez\", \"Arthur\", \"M. Depay\", \"L. Goretzka\", \"J. Brandt\", \"K. Coman\", \"S. Gnabry\", \"N. Fekir\", \"Luis Alberto\", \"Alex Telles\", \"S. de Vrij\", \"Felipe Anderson\", \"Pepe\", \"Jo\\u00e3o Moutinho\", \"M. Ham\\u0161\\u00edk\", \"Sokratis\", \"Lucas Leiva\", \"M. \\u00d6zil\", \"Javi Mart\\u00ednez\", \"E. D\\u017eeko\", \"G. Wijnaldum\", \"I. Peri\\u0161i\\u0107\", \"M. Mand\\u017euki\\u0107\", \"A. Vidal\", \"J. Boateng\", \"Azpilicueta\", \"Jos\\u00e9 Callej\\u00f3n\", \"I. G\\u00fcndo\\u011fan\", \"Paulinho\", \"K. Walker\", \"Canales\", \"Douglas Costa\", \"Pizzi\", \"D. Tadi\\u0107\", \"J. Ili\\u010di\\u0107\", \"R. Mahrez\", \"E. Vi\\u0161\\u0107a\", \"Felipe\", \"Fabi\\u00e1n\", \"A. Romagnoli\", \"G. Lo Celso\", \"T. Alexander-Arnold\", \"L. Jovi\\u0107\", \"A. Milik\", \"A. Martial\", \"Anderson Talisca\", \"J. Tah\", \"C. Tolisso\", \"Gon\\u00e7alo Guedes\", \"N. P\\u00e9p\\u00e9\", \"M. Akanji\", \"M. Rashford\", \"J. Stones\", \"A. Rabiot\", \"Grimaldo\", \"T. Werner\", \"T. Lemar\", \"D. S\\u00e1nchez\", \"Marco Asensio\", \"L. Digne\", \"J. Draxler\", \"Y. Carrasco\", \"Borja Iglesias\", \"W. Zaha\", \"Paco Alc\\u00e1cer\", \"Morata\", \"S. Haller\", \"William Carvalho\", \"F. Bernardeschi\", \"D. Djen\\u00e9\", \"Oscar\", \"Bartra\", \"Pablo Sarabia\", \"Lucas Moura\", \"F. Thauvin\", \"Jorginho\", \"V. Kompany\", \"Ra\\u00fal Albiol\", \"F. Quagliarella\", \"Falcao\", \"Miranda\", \"C. Vela\", \"E. Garay\", \"R. Nainggolan\", \"E. Banega\", \"Diego Costa\", \"S. Khedira\", \"David Luiz\", \"M. Kruse\", \"J. Henderson\", \"G. Sigur\\u00f0sson\", \"A. Ramsey\", \"Illarramendi\", \"D. Blind\", \"N. Otamendi\", \"J. Cuadrado\", \"I. Gueye\", \"K. Kampl\", \"Rodrigo\", \"C. Ar\\u00e1nguiz\", \"W. Ben Yedder\", \"F. Acerbi\", \"Danilo Pereira\", \"A. Kramari\\u0107\", \"Louri Beretta\", \"Josu\\u00e9 Chiamulera\", \"Ronaldo Cabrais\", \"Oyarzabal\", \"L. Bailey\", \"Gabriel Jesus\", \"M. Kova\\u010di\\u0107\", \"A. Belotti\", \"N. Ke\\u00efta\", \"L. Torreira\", \"R\\u00faben Neves\", \"P. Kimpembe\", \"S. Bergwijn\", \"N\\u00e9lson Semedo\", \"D. Rugani\", \"A. Correa\", \"I\\u00f1aki Williams\", \"H. Lozano\", \"Gelson Martins\", \"T. Partey\", \"K. Demirbay\", \"J. Matip\", \"Suso\", \"S. Savi\\u0107\", \"A. R\\u00fcdiger\", \"Ricardo Pereira\", \"N. Tagliafico\", \"Muniain\", \"M. G\\u00f6tze\", \"T. Delaney\", \"Willian Jos\\u00e9\", \"Sergi Roberto\", \"N. Schulz\", \"K. Volland\", \"Nacho Fern\\u00e1ndez\", \"Gabriel Paulista\", \"J. Roussillon\", \"H. Maguire\", \"T. Hazard\", \"E. Forsberg\", \"F. Kosti\\u0107\", \"M. Politano\", \"Rafa\", \"D. De Rossi\", \"Aduriz\", \"Jes\\u00fas Navas\", \"Santi Cazorla\", \"H. Herrera\", \"L. Biglia\", \"Juan Mata\", \"O. Giroud\", \"S. Kj\\u00e6r\", \"Willian\", \"V. \\u0106orluka\", \"M. Arnautovi\\u0107\", \"A. S\\u00e1nchez\", \"Giuliano\", \"A. Kolarov\", \"M. Balotelli\", \"Marlos\", \"Taison\", \"B. Dost\", \"G. Bonaventura\", \"Pedro\", \"L. de Jong\", \"S. El Shaarawy\", \"Ander Herrera\", \"X. Shaqiri\", \"M\\u00e1rio Fernandes\", \"S. Coates\", \"C. Bakambu\", \"T. Meunier\", \"K. Bellarabi\", \"J. Lingard\", \"Q. Promes\", \"J. Vardy\", \"D. Zapata\", \"Morales\", \"Juiano Mestres\", \"Rosberto Dourado\", \"E. Schetino\", \"J. Sildero\", \"L. Mart\\u00ednez\", \"H. Aouar\", \"T. Ndombele\", \"\\u00c9der Milit\\u00e3o\", \"D. van de Beek\", \"V. Lindel\\u00f6f\", \"Dani Ceballos\", \"Pablo Fornals\", \"E. Can\", \"Gay\\u00e0\", \"David Neres\", \"P. Zieli\\u0144ski\", \"G. Xhaka\", \"Rafinha\", \"G. Kondogbia\", \"M. Sabitzer\", \"L. Shaw\", \"J. Mart\\u00ednez\", \"A. Doucour\\u00e9\", \"W. Ndidi\", \"W. Orban\", \"A. Plea\", \"Y. Poulsen\", \"R. Fraser\", \"M. Ginter\", \"R. Guerreiro\", \"Jo\\u00e3o M\\u00e1rio\", \"Thiago Mendes\", \"A. Izzo\", \"M. Brozovi\\u0107\", \"A. Ljaji\\u0107\", \"J. Corona\", \"L. Milivojevi\\u0107\", \"Gerard Moreno\", \"W. Weghorst\", \"Quaresma\", \"J. Mathieu\", \"J. Milner\", \"L. L\\u00f3pez\", \"B. Gomis\", \"M. Demb\\u00e9l\\u00e9\", \"Cesc F\\u00e0bregas\", \"L. Koscielny\", \"Jardel\", \"Renato Augusto\", \"Jos\\u00e9 Fonte\", \"A. Guardado\", \"L. Piszczek\", \"K. Gameiro\", \"D. Payet\", \"Be\\u00f1at\", \"B. H\\u00f6wedes\", \"M. Sissoko\", \"M. Parolo\", \"Fernando\", \"N. Gait\\u00e1n\", \"S. Giovinco\", \"Luiz Gustavo\", \"N. Nkoulou\", \"N. Mati\\u0107\", \"Marcos Alonso\", \"H. Mkhitaryan\", \"Andr\\u00e9 Almeida\", \"A. Florenzi\", \"E. Zahavi\", \"F. V\\u00e1zquez\", \"Lucas V\\u00e1zquez\", \"Dani Garc\\u00eda\", \"M. Acu\\u00f1a\", \"Laure Santeiro\", \"J. Frendado\", \"S. Ardero\", \"L. D\\u00e1lves\", \"S. Mand\\u00edquez\", \"Jo\\u00e3o F\\u00e9lix\", \"N. Barella\", \"J. Gomez\", \"A. Christensen\", \"Y. Tielemans\", \"Mario Hermoso\", \"Carlos Soler\", \"M. Caldara\", \"H. Winks\", \"K. Pi\\u0105tek\", \"Diogo Jota\", \"Marcos Llorente\", \"F. Mendy\", \"Melendo\", \"R\\u00faben Dias\", \"H\\u00e9ctor Beller\\u00edn\", \"B. Mendy\", \"M. Demb\\u00e9l\\u00e9\", \"Santi Mina\", \"Rony Lopes\", \"J. Correa\", \"T. Bakayoko\", \"M. Eggestein\", \"Odriozola\", \"M. G\\u00f3mez\", \"Sergi Darder\", \"K. Zouma\", \"L. Paredes\", \"N. Ak\\u00e9\", \"E. Hysaj\", \"Andr\\u00e9 Gomes\", \"K. Bald\\u00e9\", \"J. Weigl\", \"V. Rongier\", \"Yeray\", \"Loren\", \"R. Rodr\\u00edguez\", \"A. Oxlade-Chamberlain\", \"Campa\\u00f1a\", \"A. Mandi\", \"Deulofeu\", \"Bernat\", \"M. Keane\", \"J. Quintero\", \"Samu Castillejo\", \"A. Rebi\\u0107\", \"E. Bailly\", \"M. Almir\\u00f3n\", \"M. Lazzari\", \"M. Lanzini\", \"Sergi G\\u00f3mez\", \"H. Vanaken\", \"M. Hinteregger\", \"M. Nastasi\\u0107\", \"Gabriel\", \"C. Wilson\", \"J. Guilavogui\", \"D. Klaassen\", \"P. Kade\\u0159\\u00e1bek\", \"C. Kramer\", \"I\\u00f1igo Mart\\u00ednez\", \"Portu\", \"Manu Trigueros\", \"H. \\u00c7alhano\\u011flu\", \"M. Dabbur\", \"M. Halstenberg\", \"M. Vecino\", \"Joaqu\\u00edn\", \"W. Rooney\", \"Nani\", \"J. Mascherano\", \"A. Gignac\", \"Jorge Molina\", \"L. Perrin\", \"Charles\", \"S. Radu\", \"D. Rose\", \"E. Lamela\", \"Ra\\u00fal Garc\\u00eda\", \"Naldo\", \"D. Wass\", \"Pedro Le\\u00f3n\", \"I. Piatti\", \"M. D\\u00edaz\", \"M. Valbuena\", \"L. Bender\", \"S. Bender\", \"E. Capoue\", \"Antunes\", \"F. Fazio\", \"M. Hasebe\", \"Sidnei\", \"D. Perotti\", \"L. Pratto\", \"S. Feghouli\", \"K. Trippier\", \"M. Musacchio\", \"Y. M'Vila\", \"L. Stindl\", \"F. Smolov\", \"S. Nzonzi\", \"F. Coquelin\", \"Hulk\", \"K. Strootman\", \"C. Smalling\", \"K. Glik\", \"E. Salvio\", \"K. Vogt\", \"R. Pereyra\", \"Y. Belhanda\", \"Sergi Enrich\", \"D. Lovren\", \"S. Verdi\", \"L. Muriel\", \"D. Vida\", \"Ibai G\\u00f3mez\", \"S. Berghuis\", \"Cristian Tello\", \"Ismaily\", \"F. Ghoulam\", \"S. San\\u00e9\", \"S. Zaza\", \"S. Vrsaljko\", \"Pozuelo\", \"R. Jim\\u00e9nez\", \"Bernard\", \"T. Stepanenko\", \"I. Marcone\", \"Jony\", \"Mata\", \"M. Marega\", \"Everton Andr\\u00e3o\", \"Welington Dano\", \"M. Baldona\", \"M. N\\u00e9rez\", \"Vin\\u00edcius Jr.\", \"R. Bentancur\", \"Lucas Paquet\\u00e1\", \"A. Wan-Bissaka\", \"I. Konat\\u00e9\", \"Merino\", \"S. Berge\", \"L. Pellegrini\", \"F. Chiesa\", \"Dani Olmo\", \"R. Zobnin\", \"A. Saint-Maximin\", \"C. Pav\\u00f3n\", \"T. Kehrer\", \"C. Pulisic\", \"F. Kessi\\u00e9\", \"A. Hakimi\", \"D. Samass\\u00e9kou\", \"Marc Roca\", \"D. Zagadou\", \"V. Tsygankov\", \"De Tom\\u00e1s\", \"R. Loftus-Cheek\", \"S. Lobotka\", \"J. Denayer\", \"L. Klostermann\", \"A. Golovin\", \"A. Diallo\", \"B. Pavard\", \"M. Rashica\", \"B. Chilwell\", \"Wesley\", \"T. Sou\\u010dek\", \"Junior Firpo\", \"J. Ward-Prowse\", \"A. Januzaj\", \"Ot\\u00e1vio\", \"N. Stark\", \"A. Iwobi\", \"J. Gbamin\", \"Munir\", \"Angeli\\u00f1o\", \"J. Maddison\", \"Andr\\u00e9 Silva\", \"Richarlison\", \"S. Nakajima\", \"Raphinha\", \"E. Dier\", \"L. Trossard\", \"Jonny\", \"M. Sanson\", \"J. Lerma\", \"L. Dubois\", \"F. Grillitsch\", \"L. Cabrera\", \"R. Barkley\", \"J. Murillo\", \"J. Tarkowski\", \"J. Brooks\", \"M. Batshuayi\", \"M. Arnold\", \"S. Kola\\u0161inac\", \"F. Sch\\u00e4r\", \"Ricardo Horta\", \"L. Alario\", \"Mariano\", \"R. Aguilar\", \"F. Balbuena\", \"S. Mustafi\", \"G. Pezzella\", \"D. da Costa\", \"W. Boly\", \"B. Davies\", \"Fred\", \"M. Samatta\", \"Diego Carlos\", \"K. Toko-Ekambi\", \"R. Malinovskyi\", \"M. Sakho\", \"J. King\", \"H. Seferovi\\u0107\", \"Laguardia\", \"P. Jones\", \"S. Aurier\", \"L. Spinazzola\", \"K. Lala\", \"S. Arias\", \"D. Baselli\", \"T. Savanier\", \"Leo Baptistao\", \"J. Veltman\", \"D. Zappacosta\", \"Wu Lei\", \"David Villa\", \"B. Y\\u0131lmaz\", \"S. Kalou\", \"Dante\", \"M. Debuchy\", \"E. Lavezzi\", \"Borja Valero\", \"M. \\u0160krtel\", \"J. Evans\", \"D. Valeri\", \"N. Moisander\", \"D. Criscito\", \"A. Candreva\", \"Marcano\", \"K. Boateng\", \"A. Fern\\u00e1ndez\", \"Nacho Monreal\", \"\\u00c1ngel\", \"Granero\", \"\\u00c9der\", \"R. Vormer\", \"S. Coleman\", \"A. Lallana\", \"A. Modeste\", \"M. Gradel\", \"Yuri Berchiche\", \"Mariano\", \"O. Toprak\", \"N. Kalini\\u0107\", \"C. Stuani\", \"K. Asamoah\", \"Alex Teixeira\", \"S. Luli\\u0107\", \"S. Rond\\u00f3n\", \"S. Kagawa\", \"J. Wilshere\", \"Cote\", \"Iago Falqu\\u00e9\", \"J. Pastore\", \"Maicon\", \"F. Orellana\", \"Elkeson\", \"Kike Garc\\u00eda\", \"Escudero\", \"Mario Gaspar\", \"V\\u00edctor Ruiz\", \"I. Belfodil\", \"A. Yarmolenko\", \"W. Khazri\", \"E. P\\u00e9rez\", \"D. Caligiuri\", \"Danilo\", \"N. Pallois\", \"Vitolo\", \"M. Badelj\", \"Z\\u00e9 Lu\\u00eds\", \"D. Su\\u00e1rez\", \"Roque Mesa\", \"M\\u00e1rio Rui\", \"T. Inui\", \"D. Cheryshev\", \"C. Bacca\", \"A. Samaris\", \"J. Hector\", \"Rub\\u00e9n Pe\\u00f1a\", \"A. Hamdallah\", \"D. Benedetto\", \"L. Sigali\", \"Ra\\u00fal\", \"Petros\", \"Dyego Sousa\", \"Soares\", \"Rub\\u00e9n Alcaraz\", \"Maikel Catarino\", \"Ant\\u00f4nio Chiamuloira\", \"Melvin Parrela\", \"Luimo Boas Santos\", \"D. Lenzado\", \"E. Riquero\", \"E. Aguerro\"], \"type\": \"scatter\", \"x\": [95, 94, 87, 84, 82, 52, 72, 90, 89, 22, 94, 65, 33, 93, 63, 91, 88, 67, 89, 80, 75, 83, 77, 65, 72, 88, 42, 75, 87, 89, 87, 45, 78, 64, 86, 69, 40, 84, 56, 86, 55, 45, 73, 69, 77, 81, 33, 42, 60, 51, 66, 79, 85, 78, 56, 76, 48, 77, 80, 87, 87, 87, 50, 64, 40, 22, 80, 64, 78, 66, 57, 37, 39, 77, 84, 25, 63, 89, 41, 73, 86, 79, 88, 60, 84, 73, 71, 55, 88, 72, 83, 74, 78, 81, 79, 58, 82, 53, 69, 78, 76, 79, 76, 81, 82, 77, 65, 25, 74, 46, 73, 74, 44, 62, 73, 43, 88, 70, 79, 85, 75, 34, 46, 78, 71, 81, 51, 80, 64, 76, 83, 81, 77, 80, 39, 79, 30, 80, 56, 86, 88, 82, 80, 20, 75, 77, 82, 36, 81, 29, 69, 50, 86, 75, 40, 78, 60, 76, 80, 86, 78, 86, 81, 85, 52, 68, 29, 76, 55, 78, 82, 80, 57, 45, 27, 89, 86, 43, 85, 51, 75, 68, 85, 68, 55, 84, 67, 78, 75, 72, 62, 54, 64, 50, 63, 80, 66, 88, 37, 60, 86, 85, 38, 74, 86, 75, 84, 61, 88, 74, 61, 64, 31, 74, 50, 33, 82, 83, 76, 70, 68, 74, 36, 70, 34, 32, 62, 58, 76, 78, 72, 84, 63, 48, 84, 32, 42, 63, 48, 76, 70, 74, 76, 73, 50, 83, 66, 70, 72, 50, 74, 83, 55, 77, 44, 78, 76, 77, 60, 83, 79, 76, 86, 70, 78, 82, 80, 71, 71, 56, 42, 84, 72, 73, 77, 80, 85, 87, 83, 56, 53, 38, 74, 82, 74, 59, 48, 77, 42, 68, 77, 60, 61, 76, 68, 53, 73, 69, 79, 44, 84, 73, 50, 40, 82, 80, 75, 55, 73, 64, 63, 19, 69, 70, 72, 55, 80, 84, 67, 52, 62, 86, 84, 64, 71, 37, 38, 65, 40, 64, 64, 80, 76, 65, 51, 65, 70, 54, 71, 78, 48, 33, 59, 68, 74, 58, 70, 86, 77, 72, 69, 66, 72, 56, 72, 82, 83, 79, 63, 26, 36, 73, 42, 74, 36, 55, 86, 77, 39, 63, 74, 29, 52, 33, 81, 82, 77, 77, 37, 62, 45, 84, 61, 47, 55, 48, 47, 67, 78, 41, 71, 41, 81, 59, 69, 73, 41, 74, 60, 50, 74, 75, 79, 33, 73, 67, 70, 35, 75, 48, 30, 67, 83, 49, 77, 28, 46, 42, 81, 69, 65, 83, 59, 61, 80, 80, 68, 42, 83, 85, 55, 81, 55, 57, 74, 82, 53, 75, 76, 81, 55, 74, 59, 39, 69, 56, 41, 45, 51, 66, 78, 68, 48, 40, 56, 79, 82, 50, 62, 81, 68, 54, 27, 74, 50, 74, 74, 82, 33, 67, 78, 41, 79, 75, 76, 60, 54, 37, 79, 44, 71, 80, 69, 53, 48, 70, 84, 80, 58, 51, 58, 51, 68, 52, 75, 44, 21, 74, 34, 60, 70, 75, 65, 69, 72, 37, 68, 64, 59, 42, 59, 26, 75, 81, 66, 64, 42, 59, 69, 38, 37, 78, 43, 74, 67, 66, 69, 79, 67, 50, 66, 40, 78, 57, 69, 80, 81, 72, 70, 52, 80, 48, 73, 56, 53, 58, 23, 68, 37, 40, 39, 81, 77, 57, 60, 76, 84, 79, 49, 31, 58, 48, 39, 32, 58, 72, 83, 26, 81, 70, 23, 81, 78, 49, 44, 54, 60, 46, 51, 67, 66, 74, 50, 59, 78, 83, 82, 83, 47, 63, 80, 67, 35, 28, 78, 39, 56, 73, 43, 77, 69, 55, 80, 73, 78, 72, 61, 70, 80, 80, 56, 54, 28, 82, 80, 55, 77, 66, 78, 75, 63, 46, 75, 70, 40, 78, 75, 78, 56, 68, 37, 80, 77, 79, 68, 72, 61, 44, 76, 54, 74, 59, 65, 27, 72, 78, 80, 59, 55, 71, 84, 81, 45, 50, 65, 83, 77, 66, 48, 51, 68, 79, 51, 53, 79], \"y\": [26, 24, 29, 22, 51, 85, 71, 41, 32, 87, 38, 85, 89, 24, 90, 38, 19, 80, 49, 40, 65, 47, 22, 87, 29, 39, 87, 62, 45, 36, 38, 88, 40, 86, 33, 80, 85, 18, 88, 40, 86, 86, 84, 71, 22, 35, 87, 83, 83, 85, 79, 51, 42, 72, 70, 52, 80, 47, 65, 46, 32, 30, 80, 77, 85, 87, 72, 78, 77, 85, 80, 86, 81, 57, 30, 89, 80, 20, 85, 40, 24, 34, 18, 86, 52, 82, 83, 84, 18, 64, 44, 86, 34, 38, 33, 80, 63, 86, 70, 20, 73, 29, 21, 45, 25, 41, 79, 84, 46, 82, 67, 62, 86, 81, 19, 85, 16, 69, 54, 60, 88, 86, 86, 32, 67, 75, 83, 43, 34, 52, 26, 26, 22, 40, 80, 75, 82, 62, 79, 16, 32, 36, 42, 84, 71, 30, 25, 80, 33, 82, 75, 79, 19, 63, 86, 39, 84, 44, 26, 18, 28, 22, 20, 55, 72, 50, 82, 47, 82, 49, 44, 31, 70, 81, 85, 15, 19, 83, 14, 83, 90, 78, 30, 74, 81, 29, 76, 55, 68, 80, 79, 83, 74, 83, 59, 40, 72, 26, 85, 71, 26, 24, 82, 33, 30, 18, 19, 63, 32, 62, 77, 69, 81, 26, 80, 82, 44, 31, 29, 36, 81, 54, 79, 18, 83, 82, 78, 79, 38, 57, 88, 30, 78, 78, 33, 84, 82, 80, 79, 46, 17, 68, 29, 39, 80, 49, 69, 58, 67, 74, 21, 20, 79, 51, 82, 39, 35, 38, 81, 20, 42, 40, 26, 68, 31, 37, 25, 79, 48, 84, 85, 21, 79, 33, 49, 36, 53, 22, 45, 84, 80, 76, 33, 25, 63, 69, 80, 67, 79, 74, 73, 80, 82, 32, 71, 69, 66, 81, 53, 79, 15, 76, 83, 80, 30, 33, 42, 77, 64, 62, 76, 82, 77, 35, 54, 73, 41, 25, 11, 83, 79, 34, 35, 70, 58, 83, 75, 64, 80, 74, 78, 39, 39, 65, 81, 81, 82, 81, 43, 28, 82, 78, 75, 78, 55, 80, 78, 34, 48, 58, 77, 75, 23, 82, 23, 24, 13, 35, 76, 78, 82, 68, 80, 56, 80, 67, 24, 44, 72, 77, 53, 77, 80, 80, 16, 49, 27, 26, 82, 65, 79, 23, 69, 78, 75, 81, 80, 67, 28, 73, 71, 85, 16, 78, 66, 68, 82, 22, 78, 82, 22, 25, 25, 81, 49, 46, 25, 79, 53, 81, 84, 73, 25, 82, 65, 77, 74, 84, 59, 62, 56, 27, 76, 73, 39, 40, 20, 80, 23, 19, 82, 27, 84, 83, 44, 63, 78, 75, 36, 22, 70, 34, 82, 81, 77, 82, 77, 80, 77, 22, 55, 31, 79, 80, 72, 50, 24, 74, 79, 28, 74, 79, 77, 56, 78, 70, 55, 31, 84, 60, 22, 83, 55, 30, 42, 75, 80, 77, 50, 77, 36, 28, 25, 77, 73, 46, 29, 28, 77, 81, 77, 81, 18, 64, 56, 86, 79, 65, 67, 72, 34, 44, 76, 22, 33, 83, 47, 74, 71, 79, 74, 80, 37, 20, 61, 68, 81, 79, 64, 81, 81, 34, 81, 15, 78, 76, 60, 22, 27, 77, 23, 71, 25, 73, 34, 35, 36, 36, 38, 82, 18, 80, 70, 79, 82, 51, 82, 51, 81, 79, 76, 22, 66, 78, 76, 35, 20, 34, 79, 75, 80, 78, 77, 78, 80, 71, 23, 75, 18, 48, 78, 27, 40, 76, 80, 81, 78, 74, 78, 63, 68, 19, 78, 79, 31, 38, 26, 27, 80, 78, 37, 62, 77, 79, 30, 75, 81, 53, 78, 68, 64, 81, 20, 62, 26, 70, 80, 62, 19, 35, 78, 81, 81, 28, 42, 80, 43, 76, 18, 49, 65, 82, 32, 51, 76, 25, 35, 21, 80, 82, 82, 15, 30, 30, 74, 68, 79, 77, 23, 76, 24, 81, 76, 76, 31, 55, 14, 75, 77, 79, 20, 25, 79, 76, 78, 27, 35, 76, 76, 81, 77, 19, 81, 77, 19]}, {\"mode\": \"text\", \"name\": \"Top players\", \"opacity\": 0.9, \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\"], \"textfont\": {\"color\": \"black\", \"family\": \"sans serif\", \"size\": 10}, \"type\": \"scatter\", \"x\": [95, 94, 87, 84, 82, 52, 72, 90, 89, 22, 94, 65, 33, 93, 63, 91, 88, 67, 89, 80, 75, 83, 77, 65, 72, 88, 42, 75, 87, 89, 87, 45, 78, 64, 86, 69, 40, 84, 56, 86, 55, 45, 73, 69, 77, 81, 33, 42, 60, 51, 66, 79, 85, 78, 56, 76, 48, 77, 80, 87, 87, 87], \"y\": [26, 24, 29, 22, 51, 85, 71, 41, 32, 87, 38, 85, 89, 24, 90, 38, 19, 80, 49, 40, 65, 47, 22, 87, 29, 39, 87, 62, 45, 36, 38, 88, 40, 86, 33, 80, 85, 18, 88, 40, 86, 86, 84, 71, 22, 35, 87, 83, 83, 85, 79, 51, 42, 72, 70, 52, 80, 47, 65, 46, 32, 30]}],\n",
       "                        {\"autosize\": false, \"height\": 1000, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"size\": 20}, \"text\": \"Jerarquico\"}, \"width\": 1000, \"xaxis\": {\"title\": {\"text\": \"attacking_finishing\"}}, \"yaxis\": {\"title\": {\"text\": \"defending_sliding_tackle\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('cdefc2f5-1460-430d-b9ab-8776ba7eaa38');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data=[]\n",
    "bool_crack=df_filter[\"overall\"] > 85\n",
    "bool_no_crack=df_filter[\"overall\"]<86\n",
    "\n",
    "\n",
    "#Eligo dos números entre 0 y  de n_skills-1\n",
    "skill_1 = numeric_features[7]\n",
    "skill_2 = numeric_features[34]\n",
    "\n",
    "\n",
    "jerarquico_clusters = go.Scatter(x=df_over[skill_1], y=df_over[skill_2],\n",
    "                           mode='markers',\n",
    "                        text=df_filter.loc[:,'short_name'],\n",
    "                           marker=dict(\n",
    "                                size=5,\n",
    "                                color = ac.labels_.astype(np.float), #set color equal to a variable\n",
    "                                colorscale='Portland',\n",
    "                                showscale=False)\n",
    "                           )\n",
    "\n",
    "crack =go.Scatter(x=df_over.loc[bool_crack,skill_1], y=df_over.loc[bool_crack,skill_2],name='Top players',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=10,color='black'),\n",
    "                      opacity=0.9,mode='text')\n",
    "\n",
    "data=[jerarquico_clusters,crack]\n",
    "\n",
    "layout = go.Layout(title=\"Jerarquico\",titlefont=dict(size=20),\n",
    "                xaxis=dict(title=skill_1),\n",
    "                yaxis=dict(title=skill_2),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Como puede observarse este modelo tambien ofrece una separacion aceptable en 3 clusters, muy similar en la forma en la que clasifico algunos nombres al modelo Kmeans. De nuevo puede observarse cierto ruido en el area de los defensores (color amarillo), los cuales se confunden en algunos casos con mediocampistas (rojos)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dendogram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:29:10.510195Z",
     "start_time": "2020-10-13T02:29:10.500906Z"
    }
   },
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "from scipy.cluster.hierarchy import dendrogram\n",
    "from scipy.cluster import hierarchy\n",
    "\n",
    "def calcLinkageMatrixs(model, metodos):\n",
    "    linkageMatrixs =[]\n",
    "    for metodo in metodos:\n",
    "        linkageMatrix = hierarchy.linkage(model.children_, metodo)\n",
    "        linkageMatrixs.append(linkageMatrix)\n",
    "    return linkageMatrixs\n",
    "\n",
    "def plotDedogramas(linkageMatrixs_dict,metodos, **kwargs):\n",
    "    for metodo in metodos:\n",
    "        plt.title('Clustering Jerarquico '+metodo)\n",
    "        dendrogram(linkageMatrixs_dict[metodo], **kwargs) #,  truncate_mode='lastp', p= 4)\n",
    "        plt.xlabel(\"N° de Jugadores en cada Nodo\")\n",
    "        plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:29:10.927826Z",
     "start_time": "2020-10-13T02:29:10.905828Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "ac = AgglomerativeClustering(distance_threshold=800, n_clusters=None) #con 700 da 4 clusters\n",
    "\n",
    "ac.fit(df_over)\n",
    "distancias = ac.distances_\n",
    "ac.n_clusters_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:29:11.157406Z",
     "start_time": "2020-10-13T02:29:11.151941Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.0, 1861.903387337037)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distancias.min(),distancias.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:29:11.432667Z",
     "start_time": "2020-10-13T02:29:11.400143Z"
    }
   },
   "outputs": [],
   "source": [
    "metodos = ['ward','complete','average','single']\n",
    "linkageMatrixs = calcLinkageMatrixs(ac, metodos)\n",
    "linkageMatrixs_dict = dict(zip(metodos, linkageMatrixs)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:07.701922Z",
     "start_time": "2020-10-13T02:29:12.020369Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXkAAAEWCAYAAACDoeeyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAgAElEQVR4nO2de5hkVXXof6t7ppmBGXpggMmA8hARgiYMSlQUdaK5Goyvm+sTH2hMuLkaNSZeFL/cRJNcY0wwmusrI8nFGwUf+DaJhqCDYBAcmAZ5yMAgMjBNz/CYnumZpqu7at8/9l51dp05VXWq6lTXo9fv+/rrqlPn7LPPPnuvvfbaa68tzjkMwzCM4WSk1xkwDMMwuocJecMwjCHGhLxhGMYQY0LeMAxjiDEhbxiGMcSYkDcMwxhiTMgvYUTkAyLy+V7nA0BEZkTkCb3OR68RkX8TkfMX6V6vF5F/LyitzSLyu0WkZRSLCfkhR0TOE5EtQYhOBiFyToHpnygiTkSWdZKOc26Vc+6eovKliMibReTaotPtFs65c51zn1uke33BOffCxbiX0TtMyA8xIvJHwMeADwHrgOOBTwEv72W+YjrtHLpJq3nr52cxli4m5IcUERkH/hx4u3Pua865/c65eefct51z/zPj/I0icn/q2L0i8hvh89PDiGCviEyJyEfDaT8M//eE0cLZ4fzfEZE7RORREfmeiJwQpetE5O0ichdwV3TsieHzpSLySRH5FxHZJyLXi8jJ0fUvFJE7RWRaRD4lIlfnNRWIyLEi8lUR2S0iPxeRd0a/fUBErhCRz4vIXuDN4bmvE5E9YST0CREZa/Is/0VEfhby94k4f2kTWXoklDZ7iMjvhXLcJyK3i8hTw/FfDufuEZHbRORlDZ75zSJyT0jj5yLy+uj4tdF5TkR+X0TuCu/tkyIi4bdREblYRB4KafxBoxFco/dvLC4m5IeXs4EVwNcLSu/jwMedc4cDJwNfDsefG/6vCSaX60TkFcD7gd8GjgauAS5PpfcK4BnA6XXu9zrgg8ARwN3A/wYQkaOAK4CLgLXAncCz8jyAiIwA3wZuBo4DXgD8oYi8KDrt5SH9NcAXgDLwbuAofJm+AHhbvWcJ+fsq8Cfhmu3As/PkLyO/rwI+ALwJOBx4GfCwiCwPz/HvwDHAO4AviMipGWkcBvw9cK5zbjW+rCYa3PYlwK8BZwCvBrRsfg84F9gAPDU8c71853n/xiJhQn54WQs85JxbKCi9eeCJInKUc27GOffjBuf+d+CvnHN3hPt/CNiQ0ub+yjn3iHNutk4aX3PO3RCu/wJeuAC8GLgtjE4W8ALswZzP8GvA0c65P3fOlcIcwGeB10bnXOec+4ZzruKcm3XO3eic+7FzbsE5dy/wD8DzUunGz/Ji4Hbn3BXOuXm8uSxv/tL8LvAR59xPnOdu59wvgGcCq4APh+f4PvAdfMeYRQV4ioisdM5NOudua3DPDzvn9jjn7gN+QFLur8Z38vc75x4FPtwgjTzv31gkTMgPLw8DRxVoJ34r8CTgZyLyExF5SYNzTwA+HkwJe4BHAMFrz8qOJveLBeMBvFADODa+1vkIezVmpib5OlbzFfL2fvx8RWa+RORJIvIdEXkwmHA+hNfQqXNNVv6aPWs9Ho8fCaQ5FtjhnKtEx35Bbfnq/fcDrwF+H5gMJrDTGtwzV7nT+JnyvH9jkTAhP7xcBzxGg2F1iv3AofpFREbxQ20AnHN3OedehzcP/DVwRTAFZIUx3QH8d+fcmuhvpXPuP6Nz2g1/Ogk8LsqnxN+bsAP4eSpfq51zL26Qr08DPwNOCaaq9+MFFnWumcQL5zh/j49+ryln4Jea5PfkjOM7gccH85NyPPBAViLOue855/4LsD48y2cb3LMeNeVO7TOlyfP+jUXChPyQ4pybBv4U+KSIvEJEDhWR5SJyroh8JOOSbcAKEfmtYPP9E+AQ/VFE3iAiRwftcU84XAZ2480BsY/7Z4CLROTJ4drxYF8ugn8BfiU80zLg7TQWlDE3AHtF5L0isjJMJj5FRH6twTWrgb3ATNCA/0eO/D1ZRH475O+dqfxNAM8VkePFT45f1CCtS4D3iMjTxPPEYPK4Ht9ZXBje6UbgpcAX0wmIyDoReVnokOeAGfx7a5UvA+8SkeNEZA3w3gbndvP9Gy1iQn6Icc59FPgjvMDejdew/gD4Rsa50/gJxUvwGuF+as0gvwncJiIz+EnY1zrnHnPOHcBPiv4oDM+f6Zz7Ol7b/2IwcdyKn7Qr4pkeAl4FfARvkjod2IIXYHUvC9eW8cJwA/Bz4KHwvOMNrn0PcB6wD68Bfyln/j4c8ncK8KPo9ytDGrcAN+Jt6fXS+gq+bC8L9/8GcKRzroSfhD03PMOngDc5536WkcwI8Md47f8R/HxCeuI4D5/FT/TeAmwF/hVYIKPD6Ob7N1pHbNMQY5AJJov7gdc7536Q8fs7gec75/KarQpHRDYDn3fOXdKrPBSNiJwLfMY5Z5OpfY5p8sbAISIvEpE1InIIiY38IG8fEVmBd4ncsshZHDqCeevFIrJMRI4D/ozi3HONLmJC3hhEzsZ7nTyEN7+8Iu2KKSK/gvcU2Qt8YtFzOHwIft3Co3hzzR34OR+jzzFzjWEYxhDTVJMXkX8SkV0icmt07EgRuTIsf75SRI4Ix0VE/l5E7haRWyQswTYMwzB6Qx5zzaV4z4qY9wFXOedOAa4K38HPoJ8S/i7A+xgbhmEYPSKXuUZETgS+45x7Svh+J7DROTcpIuuBzc65U0XkH8Lny9PnNUr/qKOOcieeeGJHD2IYhrHUuPHGGx9yzh3d6Jx2l7yvU8EdBP0x4fhx1C53vj8cayjkTzzxRLZsMQcIwzCMVhCRXzQ7p2jvmvRyb6izfF1ELhAfunbL7t27C86GYRiGAe0L+algpiH83xWO309tTIvH4VfaHYRzbpNz7izn3FlHH91wtGEYhmG0SbtC/luA7kN5PvDN6PibgpfNM4HpZvZ4wzAMo3s0tcmLyOXARnzY2vvxK90+DHxZRN4K3IeP1QE+nsWL8Zs8HADe0oU8G4ZhGDlpKuRDeNksXpBxrsNHBTQMwzD6AAtrYBiGMcSYkDcMwxhiitoarmM2bYLLLut1LgzDMAaD887Ld17fCPnLLoOJCdiwofm5hmEYS5mJifzn9o2QBy/gN2/udS4MwzD6m40b859rNnnDMIwhxoS8YRjGEGNC3jAMY4gxIW8YhjHEmJA3DMMYYkzIG4ZhDDEm5A3DMIYYE/KGYRhDjAl5wzCMIcaEvGEYxhDTV2ENDMMwjOZMTsLUVL5zTZM3DMMYMNavh+npfOeakDcMwxhiTMgbhmEMMSbkDcMwhhgT8oZhGEOMCXnDMIwhxoS8YRjGEGNC3jAMY4gxIW8YhjHEmJA3DMMYYkzIG4ZhDDF9Ebtm9264+25Yt67XOTEMwxgu+kKTf+QRH4dh/fpe58QwDGO46AshbxiGYXQHE/KGYRhDjAl5wzCMIcaEvGEYxhBjQt4wDGOIMSFvGIYxxHQk5EXk3SJym4jcKiKXi8gKETlJRK4XkbtE5EsiMlZUZg3DMIzWaFvIi8hxwDuBs5xzTwFGgdcCfw38nXPuFOBR4K1FZNQwDMNonU7NNcuAlSKyDDgUmASeD1wRfv8c8IoO72EYhmG0SdtC3jn3APC3wH144T4N3Ajscc4thNPuB47Lul5ELhCRLSKyZX5+vt1sGIZhGA3oxFxzBPBy4CTgWOAw4NyMU13W9c65Tc65s5xzZy1fvrzdbBiGYRgN6MRc8xvAz51zu51z88DXgGcBa4L5BuBxwM4O82gYhmG0SSdC/j7gmSJyqIgI8ALgduAHwCvDOecD3+wsi4ZhGEa7dGKTvx4/wXoT8NOQ1ibgvcAficjdwFrgHwvIp2EYhtEGHcWTd879GfBnqcP3AE/vJF3DMAyjGGzFq2EYxhBjQt4wDGOIMSFvGIYxxJiQNwzDGGJMyBuGYQwxJuQNwzCGGBPyhmEYQ4wJecMwjCHGhLxhGMYQY0LeMAxjiDEhbxiGMcSYkDcMwxhiTMgbhmEMMSbkDcMwhpi+EvITE7BpU69zYRiGMTz0jZAfH4fpabjssl7nxDAMY3joGyFvGIZhFE/fCXkz2RiGYRRHXwl5M9kYhmEUS18JecMwDKNYTMgbhmEMMX0l5F2pAsDMxD52btrZ49wYhmEMPn0l5CulChtG9/B3TDB12VSvs2MYhjHw9JWQB5Axn6WZiRnT5g3DMDqk74S8mmwA0+YNwzA6ZFmvM5DFqg2rep0FwzCMoaDvNHnDMAyjOEzIG4ZhDDEm5A3DMIaY/rPJO9h3wz4qYQJ268atAKw7bx3HXnBsL3NmGIYxcPSdJu8qUJn1An501Sjg3SnN08YwDKN1+k+TBxiF8XPGOXPzmUCizRuGYRit0R9Cfn4eZmfAHVI9VJosVYX7zMQMYKYbwzCMVukPIb8wz4byFmZGT2OBFQCUpkqUpkqs2rCqxm9eBb4JecMwjOZ0JORFZA1wCfAUwAG/A9wJfAk4EbgXeLVz7tF20h9bN5Z5fGZipsaEY5q9YRhGNp1OvH4c+K5z7jTgDOAO4H3AVc65U4Crwve2KE2Vqpq7kqXZ26SsYRhGNm1r8iJyOPBc4M0AzrkSUBKRlwMbw2mfAzYD722W3uSRa5HZMVbM1h5ftWFVdQI2C5uUNQzDqE8nmvwTgN3A/xWRrSJyiYgcBqxzzk0ChP/HZF0sIheIyBYR2eIqjqkjjuD3n3QLHx2Z6CBLhmEYRkwnQn4Z8FTg0865M4H9tGCacc5tcs6d5Zw7S0akg2wYhmEY9ehEyN8P3O+cuz58vwIv9KdEZD1A+L+rsywahmEY7dK2kHfOPQjsEJFTw6EXALcD3wLOD8fOB77ZUQ4NwzCMtunUT/4dwBdEZAy4B3gLvuP4soi8FbgPeFWH96iyc9POgzxp0gulwFwqDcMwlI6EvHNuAjgr46cXdJJuPaYum2JmYqbGhTK9wYgtljIMw0jojxWvLWAulYZhGPnpuyiUhmEYRnGYkDcMwxhiTMgbhmEMMSbkDcMwhhgT8oZhGEPMwHnXKFk+85DtN6+Y/7xhGEuNgdXk1Wc+TToUsWIhiQ3DWIoMrCYPzX3mY8x/3jCMpcjAavKGYRhGc0zIG4ZhDDEm5A3DMIaYvrbJu5JjZmKGnZt2ZnrFlCZLuW3tjbxu6mHeOIZhDDp9rcnLmFCeLtf1isna6Lse9bxu6mHeOIZhDAN9rcnnYWzdWNfSnpmYKdwrx0YHhmEsJgMv5EtTJUpTpZa09DwUnR5YrHvDMBafgRfykPjL11sF2090Y3RQNDbaMIzhoa9t8q7kAD/Bmod6q2D7hVbnBXqBzUUYxnDR15p8pVQBYGx9frt7K6tgjYPp91GGYRit0ddCvl3SZpvSpLfbG80pz5QBuGbNNT3OyWDS7yM1YzgoTZ4OHJLr3L4217RL2mxTmipVhZfRmNFVo4yuGu11NgzDqMP01dPMbn8s9/lDqclDrdlGTRBmxjEMY9DZLJtxZZf7/KHU5A3DMAzPUAv5nZt2snXjVmYmZqrhEQzDMJYSQ2uuAW+b33fDvmp4hO0Xbq9OyJovuGEYS4GBEfI7N+2sTqa2opHLmAAw/rzx6jFbeWoYxlJhIIT8zMRMzYKoVhfrZMW32XfDvqqboLq9mXZvGMaw0f82+VEoT5er8Wna8UNOR6tctWGVN+FEbpW20tMwjGFkIDT5IkivhE27VdpKT8MwhpElI+TT6CpYFe5Zm4qY+cYwjEFn6Qr51CrYtBnIJmcNwxgGlqyQBxgZazwl0SwssGn6hmH0O0tayFfmKkxfO83I2Eg14mWa6Wunsy8u+9+2X7i9rXsvdiAr65AMY2mypIU8FUBjcZWjz3kI57Yb+CxP3HtXcnU7n5bosEPqFxqVhwVVy4dFyeyMQVSWOhbyIjIKbAEecM69REROAr4IHAncBLzROde3cX6rwqEE4+eMNz55kZmZmIGSCTClUqq03hkbRkEM6jxdEZr8u4A7gMPD978G/s4590UR+QzwVuDTBdynq4yuGu27KJUWPbMWK4+lTT9s79nr7TvXnbeu5Ws6WgwlIo8Dfgu4JHwX4PnAFeGUzwGv6OQeaUqTpYNWwDbDlZwFKDOMAafX23v2evvOdhdsdqrJfwy4EFgdvq8F9jjnFsL3+4Hjsi4UkQuACwAOk9Ny33Bs/Riz22YpkV/Ia4CyqcumBm6oVSRFaUK92mlrGHatMpt4a+y/eT+rz1rNGVeeASzt7T2vP/X6tjq5toW8iLwE2OWcu1FENurhjFMzo9s75zYBmwBWLzs9fwR8o21UE2omaGIhnjnZmXeuuU3b+cjYSDWwXE1yNjex5FjYs8Cj//For7PRF6iC2yqdaPLPBl4mIi8GVuBt8h8D1ojIsqDNPw7ouY3ElXwfova0duxag04cxbOZh8DWjVursYLanfx1JZcpqJtRni4jY9KyxjuIXg9GczbL5l5nYeBpW8g75y4CLgIImvx7nHOvF5GvAK/Ee9icD3yzgHx2RKVUgVEfjXL66umW7PnDgpppNK4+NPYS0GFxu5OdWzdurcbyb4XRcd+ZtDIsLU+XFy3AnHUmvSEdatzeQX664Sf/XuCLIvKXwFbgH7twj5YZXTVaHe6MrR/riU2516h2PH31dN35CW1MWeGZW0UFfCtaeTv2/nY6hnZYzM6kHYa5A4rLfKnPrbVKIULeObcZ2Bw+3wM8vYh0jcVn6rIpytNlxjZ0LuSh9Ymy2FRk5GdQfbhbwepEewzNitdYAx1bX4yAWsqUdpaq++NC4qO+GNriUvagyEM9L6l6PtzDrOEbzRkaIV+0BrrUKe0qUdpVq1G3oy2WJpNwznlMMe24SXZDw+tnwaheUmPrDjY7zkzM1HpE5Qhp0Ur59XO5GNkMjZBXTJsvjiy7fKwt5mnwpalS1fyi4Z0beer0g5vkIJg+VDBnmba6FQ5jEMrFOJihEvIjK0coT5eZK82ZkC+AWEADbWv1nXrqLAZpE4juAdzv+/9mmba6Vc62e9pgMlRCXoeo7fhnG9nUs48PW4OPF4qt2rCKfTfsozxd9qGmUyaPtObcrx1ATBGrnbN2T8tLbKprp+NMm/rMjTI/QyXk86J2S8OIiTu0a9ZcA2FxobpoQhIHSclyq+xHoZ93tXMjOrk2bapr1fSj14+fM14t734r435lyQn50fFRytPlJRuuVheCacA2aygNGPF27ZM/cjKQCMrydJnR8VE/9xMm+lXTTAv9fhL4vfRaSpuQ2hkNjIyNUJr0wn762mnbjzknS07IL3VKUyUYab7ytd3NUNKo5tsrd8yOEKqB7YAaTXhmYoax9WM1Qqs0VWL8ecmeBDZRWSyVUoXZ7X54FU8qWzk3xoT8UkQSE0TdYW8xMt7PkwRTaqfumL1GNWFdkxGPhuqFykj7rvd9x9anqHl1dNXoQSOSYZsfKpqBE/LamNoNgGVQExc0j9kma9Ku3iRclhDL2pBlkBtm1hJ7tRnHZLo2MlgdW69R82o6EurOTTvZcfGOmnK/Zs01mWsHBnGivEgGT8iHF9hIwKuJoIj4K0NJhZYmsbIm7bIm4eoJMVdyBy2Iylr01Ghir98aZlZetTNr5MmylFelxgvjYiWhnWefumwq03STtRYj9szp5zmTbjFwQj4PuklIKxuLLDVUIOXVqPNM2tVLq1KqVDuJPAui0gyaBlzPkyX+Xk/wDLPQidddxHMb0N67bWS6SR+ru2iszXv3lFFaMqcOpZDvNUXtwNSJX3Ka0mSpqwvE4lCwWzduPchG3cmCqEEx7eiIJXaxrCe004KnNFli+upppq+dLkzLjOuh5un6U6+vue9idyq9sqc3WjQ27Ay1kG9VYyyKInySobiYLNrAuynkVZhUNxpZgsQjFmiuKcaCZ+vGrczePQtlqm6anWr36QVemqfyvnJh9zD6n6EW8kV5iLRDP0VS1A080ovA0tp3pztmxdp6p4I+SwsdBC+V9DxQS7F+BBgt1gspS3PWNNXdc7HNFo3ebavvNbbz10svz737tT4VwXALeaOKzlPEi8D6WftOa6GlyVI1j/2sgWbZnSG/IE17InXLpNBRZ9QhWSMMzQO0GOU0R3ylevdWT5zpq6eHejK2P4W88w0ZqLsytTxTrrvhs5GfVRtWse68dey7YR/T106z8uSVhaXtSs6Ppkbaz1t6sdEg+Nr3g/03ntjNcpHttDPqlCLLqNX4SvGIcyksYOtPIV85+JC6RbqSq84uV0oVRseWaHyCApm6bMr7IZc5yMe4E6q+zQX1w92atBu0/UPTwbqyzA3x7/VcZOu5GC8lN8+lsLCqP4V8BlnmBqM4RleNJqOniNJkibkdc1RKlUUJvas200ZCN31OpzbVdvcPVWG7c9POtu7bLnGwLqivfTabuK+J9Z/qONKmjmb727ZT/mkvtKy5Fwsk2DkDI+SN3lCaKh202rCbQ9rYZlpvoVbae6mI/LTjyaQbw3djY++sjgySicTYdt+J9pk2XbRTDu2Wf/o9pu89ffV0w+tbia+kE7RpN9+lsO+ECXmjKbroZN1562o8E7pl2kj71Dc6B7o/xC7t9Fshjq0bqzHttLuiOo95KMsNt9uT4+16hBXRyWSxWTY3vrgF77n0BG1cls28cwbdRNXmlNgiEkZrlQOVmu+5L7fhXjU8a6ekBU83NNh+pLTLhxAeWz9W88ztzl+kzUP1UAGofyLC/pv3t3XPfkG9pOoFdGuGzs21c31cnvH2ibHAT68pGIY63v+avMr2ShDWeSfxosnZpY6aFYqgmZatWmqnnaumU09b1uF3abJUjWHSLA5OI61MbdJ5tHNNe98N+6rXtko7ZpGFPQtA7SYmi0m9ldzNVmbHvuoac1/j8LdKN0KWDPvuZ/0v5HOy/+b9PV38NDB0uYymLpuqbqrRSTvUdOoJAx1+K81WNjezG7cjfFSBGFt/cORDJcu2rp1C7OI4COSJyRNTmiwxu22267bveAORuCNvpeMeZoZGyKuWYwwXjcwTsXBpN3ha0ag5QW3t9SaJY3ptEsha+XzsBcfW9X6JaTQ62rpxK7PbZrsi4GvMj+Xa/Gl+dASbR+u//Q238/B3Hs68RzxCVPKOxPrBpj80Qt5YPBbTr3xhz0KNV0QzrTfWnMfWjVUFTNqkoK6hMiYda3qlnWHOwyXmhNgrKD1JrHkpKjZR3Xzl1GSzVj5ndVDpKJqz22Zb8qxxJVcd/ehkNrTpAhvJ+NHx1iKqZvHwdx5ORqCabmp0GOc/zyR4M7dTJWuTcyiugxh+Id/Biksjm3b9ytsl7VLZLG8zEzOUZ7zdVoV8WqCWpkpUZiswS8f23dKukq9nkUzohwnSVkxQ9eZaGtmrVTDlrQMyJtXN0VXApzuWXjI6Pspz9jyn7u/aQRfdOWeF3y6yTIZfyEPmClojm7QXTr0duLqthabv1Wrse6WeGUcbbHm6XA2RkZeq5tVgbrkT82HRI6Vuubtq7Jd2PWVafa/1SId4LupZ0+aqfTfsq0YaVdILydpZLBiH304HUCsieNrSEPJGPuLNCFoMHTGwk1xteGGphtzO6uv9N+9vGgK7yJGSbp/XjRFXp54yRRGHeM6z01kj0kI2bcLJojRVoryvDNJ5mOhuLPQzIR+It6jrlCI3+1D6YQKnHjs37aw2+NmZ9l01Y/fLPIHnmgXhKhq1I3fiHqoafnmmXONlk+4cVUvO0sL7ZX9jLYd2Nc6sVajt1nNdrDczkWyw3g6NImTKmDD+9PHMwGrpeRbdBKYdYV/0Qr8lI+RrApxlkN7woROKNmV0w2YZ74PbjvdDLGBLk6Uk7k0HLpqqQVXjFDXLw5QXuJXZCtsv3J6Zv1aFf42ACFVFTVi6KGp0fLRqW26bcrKJS5YHSFaAsXhT63YD8+nCuGYRXPOYjCqlSjX+fRFhgjut53kXmTWjXoTMZpOtaeE8t2MOoCrsoTfzDktGyFdKfpKtUQPtp40+Yrrh/qfl0e5QOxZCRUau1AafFbckyyQkY8III5Sny+y4eEdVcMZxZfI2rNi0ASRzOT1af9GNeY/SlJ8kzhLwsWCP7eyNyrDVvYIV7WhWP311oVpr3jLLYzZrhbTrLCRlPP688bbMSOmOtl2WjJDvN1rZB7YV8087w12t8K3SyPe7HZrZ9ev5PavXRlcW3GRsmpy3rLoxGdhN0iEbGpmMOibqaPJEHm1IhepeCHnrQNHrarJcZ6G1yeW0UC9qZGLOhT0irtTNSNsH6zF99TTbL9zecq+/sGehcG1V/cZbYWz9mF+yXuDIoBXUlNfIW2R0fDR3WTWL8zMzMcOBOw7U3DtG47x0YmOO75UnjbiupU1GRaPa746Ld3QWE8nRcC+ETuM2qfCtHKi09S70+mbXZgn1vG2/EW1r8iLyeOD/Ab+EH9hucs59XESOBL4EnAjcC7zaOfdoR7lskUYvtYhAXUVRtHlo68atTF893R1PiqBl66Rfo8lHNXt0G12ckuX+qIK6lUnBPGEKWqGhFjfqF8uUR305yZgcFAaiKCGr72P7hdtbnjRuJmDUYUHdC1uZPI3j0BTlThlTXavQYVWMQ3W046nUirdUN0x0nWjyC8AfO+d+GXgm8HYROR14H3CVc+4U4KrwvWuoNlBDnZfaihY2iFS9Ndr0W26YdhA42jD7IfCb7malw/44OmFpqlSt3e2OcPqBRprczk07qyYh7czi2Dgx8aRtI3T0kLczUIeF+B30MkxDPPpp1SSjsqSZxt2KNq/5GTlkpOVri6JtIe+cm3TO3RQ+7wPuAI4DXg58Lpz2OeAVnWayEXk9MZYCKojbtk03addpgdOqQOgmKsRqNPAwt6h7ePZC+OQdqrdDlrvfzMRMR6MQdYVtxUVT7z9+znhHmmgRZdXJs8cdYL26MrJypDoqypNHLc/KXPO0u0UhNnkRORE4E7geWOecmwTfEQDH1LnmAhHZIiJbqmGEjZ5QXezRonLejkBomF7QQIvsNNQMsJgrdGOKmjyrRzrmfKvPGWu+6RFArNl22knlmdwv0gWy3ffd7Fp1G4XW89zbzjwAACAASURBVKgOBYutzXfsXSMiq4CvAn/onNsrkq/BO+c2AZsAVi87faCkfCueMfXodMFUeil1HLO7m7s25aHdeY/YJNSxH3oHFD060aXvNWZFl/pfAK0uJoPatQZzpbma6yqlCpRg/Jz2XABjGplOyjPl6pqNXnXGraA7pbVCebrMXMn7zVdmK2x72zZgcfzmO9LkRWQ5XsB/wTn3tXB4SkTWh9/XA7s6y2JBlIubdG3FM6Yenc6aa1AjV3JVm7MrueqEXk/D1w6y9SyUX2W28zmHWDtWz6EqmnyBC1d1grDVkZWeH1+nbWV01WhVgVC7fz0ttFNvII2Do2n0giI9mqroQLlU8WUc3HKz2miunbNabF+deNcI8I/AHc65j0Y/fQs4H/hw+P/Ndu9ROAUKn14vnIpHANNXT7cdS2WQiM05rQiyrHjpi4F6jnTiv7+YMYFqArVFUTXToYirYYLDKES18HhUcPcf3p37Hek9Xcn1zH1WabSKuihGV9X3PlMTqK4FKWLtRyfmmmcDbwR+KiIT4dj78cL9yyLyVuA+4FWdZbFLpMvYJZpKM1o1tXQ77kyNy2LU8Io02cRhEHpFjTmnBbLipQ8KcRCwqgB0SeybohaAZXrfRKakODbM3P1zfqQTOoFYKMmYVEMu5HWIqFmNTuNVz+2iJqE8bSJeRb39wu2LXuerTgTU7iDWbj7aFvLOuWupP9h8Qbvp9oxKtjkntn2nKXLjgEb3Spt1GmqiFWCEagUtim7srbmYxEKqJeHYyujPtW8SLM+U899LgDLMbp9tKz5PU3SVb6XWRVljFDWL3dMNId0xzreJbW/bVtMW68W0ijurXo4uiggfYmENIjIX1UxFFTui3cBejZjb4TWkkZXZwaNy75kpiVbU663l2qHVSc+88eCb7RvbMZ2Y8TsM7BYL+TwByKB2MVm9c+NgaL02pXSEUB15xMpZ1QU7w9RZdNiOVtHYOp3mYzCFfBc8EwAqcxWmr/XaR1zx0wI+trXm1b6hudlGV6zGQZvSv+fdM3MQvBTq0dJCq1Q8+LRmFr+fTofdB3UmPZ5gzvLyaCVSZXoxWT16LexaJbNNOkBg+drlzD8835N8tUxB9asvhHylUmltzrALngnVdENGZExyCcqsrbuyaCXU6GK6QC7WYqYiY4c3Ku+0ZlZYtMw2Nhep3reByS8vWe8pNqUM4mreblHd1CUmvLb5h+e70jnniXvUSbqd0BdC/nHL72T9H1wBl27odVZqtKM83jPx1l1ZxD71+27YV935Xb0RYh/3mYmZ6oq6xdg7tTph245XTosuqaWpZONsoKUNFQ5yZ2uxkcaeH23TYPTYrBwyhU4L1IsFFGvrPTPLhfKIYxqlJ+iLHAE0K+t4s+2DyIgo2iiNA3ccoDJXydwSM/2Mcdyj+gkfPBpUzy81/1bzPwJUknTbjRQLfSLkO2GxltTXWwDVyNNm3Xnrapaez0zMVLVQHQHEDaCwDSny0IKQrnteucnvWZdMl1n5pJWwzgu/WNjXe5ed+v13sl1flXqjx5yCo1ssllnuwB0HsjuqUC41PvbRwh9dd1AYTZJqdSFdtc4Fc06cxvzD8zUjRldyfjQ3l2wA39IIKi6r2WQdRTxPVC//nYRGHnghX3SgrHqugum9F5V6jSwW3rFnh44USpOlqqBr1TWx6qdMh3bmvG2vwXmtRJysVmCX7LK08kk+Bni3PTEWKzJmP9LRIkDXmklP22M1Vkufr2Wvyo86pt+qcha7l0rGBjMReVYep90k68qAchRNs00GXsgXTaMdk/IugNKXHHvBNPPVbsVmqwK+2XX9urm25n90fJSx9WOcuflMNsvmrtwrXrk5CMQTx4Xt49pJ3ybUHwU1Srdb82Z9Qry/bZZCmGcDcEUF/uzMbGY97XSDkyW/aYiGBqhHOpxrnuFZ1VUvZZ/LCpalFUTzoP+nr51ueK88YRF0Kf3s9uLsP+2ax8oz5RqNsojNEBrfMPo/QAp8pVQpNOib0To1Jpw6xIHKCnMt7VI9HRwh362G2sRjIm2m6XSCKx7KwcGRHKt5qRPboi0KLLu2hU9K2HYlRogxUPTTBj4xzUw4ShyOoZ8ZHCHfQzoNVxsLtB0X78jU1GoqfLRoo98EYJanQTuot0vRK3PbZsA0/n6jrsBuVD0GvLx11FUpVfp67sGE/CLQzFc7a8eqRhM7PSPDk6STiW8Zk9x2y0GlX7W88nQSRqFGQKc7u7wLD8uJ90kNeapHfxZRLqptt/cbpdXFhPwi0cgGXbggiGfk+1yG5rXNd2NLw8WgK7b1DLNXabLUvi91QROobXf4Azz9kG67TcME9wAT8j0inojMahzx7H3aZFOeKXPgjgMNXds6nZHvJvFk90GbadSh6DhBhdElLbSZQ4Ciczrzu+b9O++lCaTAe3fqNlgUpclS0nFmLROI225YE6Cj9UbvMO1ooXRjnsKEfA7iJfnxhskd2cub2IDrbTOmw8P5h+ebemH0m0ZRJUx2Vw5UmN0+O9j+610Ypus7bkUzzt2pD4hppB0lxZVc4UKyNFVqq/Nq9g71+EHttwtNwfzk6xBr0KWpxN9cFy+lQwh3I2Z8OgBVq8Px3K5diy1jg23fkWHDrUO/bBg+8BRgGumWV0yeGFCN0IBrRi0m5DPQ+DE7Lt5RNROosNV4MzGtBB9rhXQAqqbazaBU8FZltS6Nb7X9t1MefVCGefy09fdFd0PsZhiHRulGO1VlUkS+WozHVASddmx5MCGfQaNgQ/Gq1ziejZpx0htq62InXX2aaYOr05grpQojjFCZrbDj4h0tP0chFbaIOp9Oo8cTbdPXTrPy5JWLcq+8se5j0n7add9jgaaifhklxYpNSxQlm5t1JuDba9icp+O6rPnuYudpQr4DdKGUmnGmr55m3w37vHAOo4F4C6/MAGQ5Ay6NrR9jdtvBK1cbCpE8FbYeQzKBVy/9RdsAo5ltPc+zLsK7KDoGVLtoWJG+ZsBCNtjEaxOa2cFVwJeny4w/b9wL5TbjjjciS7tpZ4KuL+jSpi/QWmTNRRma9zhK5cDRzbJqNe1emMO6gAl5aPjym7mlxQK+k1WxjciMoJjXftiPdbSbfVIrkTXbKZtWO6b+sIIY7dKF9tPSfr4FYOaaLhPvo5n/IrwgbBQBEPpTgLfCgA1AgNbzPIjPmMWg17VW0Gdt893VKF/alrPSXyRMyHdIo0VLkNpHM6+tUSuFaoHNKsWwa4t5zDtLSQjlpOEuSW0nWmxyPacbzxPXxT7o5AdPyC9iY84zy69bdZWny2x727bEHaqLdueDGJAJoLbJmOiqDnn7PGxDL8n0G++0/fSB0CqUIp+nTztAs8nXI7VtWcPQuEJV2FSHainBpMeHYSKnL2ixGK3cja7Tpx2gCfl6pHrldGjcrRu3JmEDwrnL1y6vn145O9qk0SGtTLRm0afaF9CTxTlLliEu5sEz1ywWGb2yjAmjY6OMrfN7ko6sDH2k4OPJ7Jpf1Cz2Bf0sJPPQp9pXlSEWPlU67agHnEYLIovANPkWSK8KrG4WMKSVLxf9LiQNo9/pcjx60+TTlGnY9ZWny8yV5pJzbeLPMIw+xjT5LOr0qnXDgzYidpntk/gghnEQS3k0OuSYkM9JEXazgQs/kMYEgWEMHINtrslaTdYt4m0wzePB6HeamB2NpcNgC/leKcZZGx23el0n5xhGHgZ84Nj3DEhbtb6+U6whGYbRxwy2Jm8sLQZEc+qIpfCMxqLSFU1eRH5TRO4UkbtF5H3duIdhGIbRnMKFvIiMAp8EzgVOB14nIqcXfR/DMAyjOd3Q5J8O3O2cu8c5VwK+CLy8C/cxDMMwmtANm/xxQLzr9P3AM9InicgFwAXh68y2d7/7zquLzMVSsm0upWc1DCPmhGYndEPIZy0HPcjR0Dm3CdjUhfsbhmEYgW6Ya+4HHh99fxxw8JZJhmEYRtfphpD/CXCKiJwkImPAa4FvdeE+hmEYRhMKN9c45xZE5A+A7+FjNP6Tc+62ou9jGIZhNEecs8iIhmEYw4qFNTAMwxhiTMgbhmEMMSbkDcMwhpieBigTkTX4pTwzwBH41bLbgUlC3pxze0REgN8Il/0EWA0sAA8CZ4TvPw+/jwG78f764+HYAbxb52PAHHAvcBiwH3gqsBx4ADg0pHcMsAu4EnghcBTwr8DLgENCHheAh0O628M15wI34L2JVgCvA9YA3wBOCfksAyeFtI8Oz30bfpK6HO77GLAHmHfOzYfnPxT4deCnwHOAW8PzHxfuPQncHM75CfCicGwbcDYwD1wLvBjv0voEvLvrrlBeM8CpIa0J59ykiBweyuap4fc7Qp53h/+PhPcyAnwbOBz45XDuLDANPBTKYK9zbp+IrA3Psie8ozNDOo8CJ4d0r8e//734hXTPAE4L7/Ya4LrwPNuAfeEdnxH+3xz+Pyvcfzkwga8LR+Pf+zJ8fXkkHF8dyv+w8Cx7onR/PZQTwCrgrnD+z4CvA/8crn0gvLdtzrl9ACJyBPB24Fi8K/Fa4L8BzwX+3Tm3J5x3HElbPDyU73Hh+SrOuf3hPAlpbQj33x3e40WhPM4G7gO+BpwD/G4o02Xhmbbj686BkMaz8WtYvuqc+5dwf0TkBADn3C/C98Occ/tF5Fh8nTob3ybuwdfdw/Dt4lnAjHPuByKy3Dk3H64/FtgX3v/hofz2hjQexbelM6hVOn+Orx+nhXe0N7yHu0KbWBPex358u3leeMZyuM7h68ts+L4PWBnSmwDuBF4ayvg2fD3eHcp/NuTl0HDtofi68yA+7uxCuObEcMyRtJ8jQz6fFsr5W4T6H557LryP1eH/2pDnn4YyXhXyuBb4Rcjns0J5HMDLizNDvu50zt1KE3o28SoifwG8BViHz7C+YH1BDt8I14TPy6LjEp03QvJi44VY8+G3kei47sqq6VRCurpmVAWtXqeFU4m+j4S0l4V042DDlVQ+KlFacR71+ALJLrEj0TV6H01bwrkj1JaTPo+WxSy+cxGgFH6Ld6GthLyvCP+Xh+vmo7zp76Vw/nKS91NJlZHmT8tYy8tFzybRsbgR6znLojQqURlC7fvU9x6no88zGtJZCMdL+IYZ3/cxvCDSRqqf0/lbCNdDUpZ6X303+i4kuq8+i5b3Y+F6LROJ8qB1yOEb/Wpq3/lIOK7vt4R/D8tJ6qGk/us5o/iOdW3qWTUfM3ihDLV1YA7fKR5J0ta03i4jqVtxfde6rO2T6Bni547bX9we43MWUr+l04nrmD7vIVEe4vqnZRjnM32/9DrxuF2l63K6LWp6Wk9iZTm+NpYPKmtiWQK+3MdSacf5r3CwHFhOonR93Tn3ERrQS3PNIXit6GF85deXN0+icR9BUpDaoFWAVfAvShtDGV8AB8L5y0ieTxuonluK7rcQ/cUv9jGSAnbR5wWSF7mQ+l6Ozo0bYCXcc4GkoqtQVsp4bUPzNoPXUjQ/KkBiwTcXpbMXr6no3u+xICmFc+O83hs9wwxJ57c8Kr8V0XFNt0Ki5erzE+41Q/IOR6PyKkd/+h4h6TD0OcpRnrXCHwjH5sPvD0Rl+iiJAIvLfGV0D0L56HPMhbIpkTT0B6K8qVAcC2noMX3OkVA2KlBVwKjw1vOWR+9BonP0PlrOKuAPRPfS5zg0nLeK2rr8SPhcCtdNhfyWQpmsitLSPM6Ga1VQq4AXvAa8AvilkI4qJIRnVaVG76//56jtYPU9PBzO0fb6IInSpQJ2jqQdgx8hEH6bplaw6fEyXrBp5zdLIgfi+pXWXCv49qz5Vk09rYRonYjrgqY3H33WNkoqDW3/sWzR/Knc0vpxILpelRCt+yrLtHxiWaZlfR++M2+6o0UvNfmT8OaMzXih8Vf4oeiPSbTJ+/EV+BHgzfgGcR9eE3kMP2Q9ET/MKoVrTsUP9wVvmnAkQ+wj8A3t74CX4Ifb5+Ar9j8Br8CbQZ4KXI4v0PPxAnEXvvHoMP9N4fORePPBi/BD8lvxpou7gL/Ev4ifAevxlVcb8xPwMX4OD/ebwg9Lv40fev4gPOfz8WaWM6Nne1p45ofCsZmQl1vwJqPNwK+EvJyJNxV9LZxzDn5ofBJ+yHkz8EPgXcCr8ENEHdqrsF4Z8n54+Dss5PU74Zn34zXHA3hTxCh+hKaCdSyU2TEhz0eEMjgE3zmN4gVDJTzDS0k6k6nwjh8JaT4a7n9P+O2MkBcVZPOh7E/GMxrypSaCa0LZ3wfchB8anwA8JbzLL+HrzhxwO/Aa4PMhr0eEe5dDPkt44fQi4MmhnJ6MN0PsBf4zpLsunD+Br7cvDccW8MP5teHeR+Hr2CH4ujcW8q51fR3ePDgXjk/iG/894V08Hfh/+BHyS0P5nRze583A3wAfD/dQwX4fvj28CW/CGQnXPBDyPxrydgfwFXz9+lXgeHyb+THwh+EZwJs1TwLeGt7ZchLtc2+4t3bYagI5DG/mPCk83wK+7X8G326OC2XwML4tnkgyspnCj/aPCPncha+7pwFfBZ6JbwO7QxpHAh8DXok3xV2Er7+vDuV7arjP9fj2sgovF24L5XVUOG8i5P1Y4EnAFhJTzZ34Nnp7KIM3At8NaS8L+ZkKz3kvvr5dGfKzH1+fXxbueVN43tPwdZjwjv4Y327FOddQ0PdSyL8D//An4AtHtY4SiSnkQPgbx2s1qmEv4CvKGhKzhKKaiwqYA/iXM0Ki5egwWylH31W702GaalWkvscmhXjYr8dUY4+1AdXuRqNnUC19LHXdXHQs1lLjoV7alACJlhjnOzav6O+x6WpvuN/h0T3Bl3WZxPQRa1ex2STWMlW7U00pLtMZEpODkGizI/jKvTJ8jzVHSOz3K/Cd0KnUvh/VfuJ3qBo50W9pM0fMDMlcj2pnleh//IxaBqqd6v1j7VefKx6ea13dhRcUmq95vEAewQs81bjVhPFYKJv9URqHk2ibI/h6vhCuU21vDC+w1CSaNmno/WfCuWPRvVTT19Gf1pU4Hf0et1nNj7ZlNYspcfnHbWQOX890lKUjjrgOa5lqees18bvUa7Ts50jqdtoMOBeeVxWZkdT1MXG9SJsytcyIylevV+1ezXl6j7T8SZt59Zi2ITWXaZ2bxXfy/9s59wUa0EtzzWp84cQ9vQoUHQofju8pV5A89CH4Al1LUgjLor+4IpdJBDz4TmEsnHeApGAfxld0Nau4KK20wIJEa1SNam94hlvxL+FRkqGfajNjJC9Yn2Vl+FPBqg2kRGKnS1fa+E/NG/PRZ0L+byfpHGKTh5qIVOvVSntMyKdOXh0IeVMBr8QdjZqEdGipI7DHSCYwF/BaoWrTagIilPm9UfnpkF+HtRUSTWclXsAfQdJwJvEjDC27mXDvUjj/EZLG9VC4z/7wfiAZlj8Wznk45LOMHw2oYNlHMmSPhflcVC6ahppNHgr3mQzXqsmihNcGBa/NqcKxNjzbCnwd3xXyr+9fJ+6OwncEmodHSOra5nD+3aHsR/B1fj+1Zg0VfGoeJNz33pB/NedpWYyG+0OiEVdCGUHtvJC2Zy3bz5O0tfvD5wdITIRadtqx7CJ5j5CMZGJt9ACJyUzft5aTtgFty4eE8qqEdwBJHVuGlzE696ICXxUwNXMeIBGsiprnHiUR8HF5xu1Shbs+ryqrqsRqXdfnjJUgfW/aDnUO8ZZQVsfQhF5619xDIjBUkKZ7fdUW1HYbT0zoS1VhPJ9KL+4FtbFqZ6Jaod7jUBLbqI4YtLDjyUGie+hLhuQl/3K453h0/THUatJxbx5r6ZpnzVusxejnWAPXyqOaoj4b4fuTozyrhhqPDLRhVfCCY4FkDkCFtqa/Ivym7yeep1AN+QF8g9F5gd3ht20k5oa9+OG4w4+oVoTz7sKbUI7Ev8e5UIb6XJ8GHnDOfUZE/hfeFHFMuJ96Os3hNfyf4xUDFVDfxZuotoR7H4t/x1p+j+G9jdbhG+mKUI76HKpx7g3XqTKgJhU1Y6kn1zXh2APhvg/ihfkqfKNcG/6rd9fheEFxDP693hXuuS6cd3TI34+BjSTmItW+D8GbB44Bvok3pazGdy7X4U0dx4ZyOR4vaE8Jzy14M8xjofzLIS+z+E5idUh/Fm/WGQtlqB32qSRzaNp2KuG5bsK3h/UkHVFc7gfw734aXzfODHn9Md4ENxo9XywcJZRBPMqJZcBYdK4qbNrejiZpi9qmY5mh7TieCI3boT6fjmpGSCa4R0jaPdROIsftRI/rPTSvLnXNsug67TAF/94X8B5n1+PrVUN6aa55H94udiK+whzAV/id+Iqh2s96kuH7I/hC1V5yFb4CjpEUSInaXnM/B2ujag45hEQTVcGi6cUjgkIeuUl66SFn2izTLC/xOVo54/LQCqRaro4WdOgLvqyWkzRsHQpLdF48qthP4hY6Eh1/LFw7HT6rPfwYvPBYiZ+PUDc4F449SqKpV/B14jN4V79jgEvxrm7PwAvjB/DCUDWifwZ+j1oPo8PCc95HYlMth2M6BNfhdNxRavnFIzgtW0gapjKPt3urDXwEP5E5i6/XqgmuDP9jT5+VJNqxdi5zJPVd3fROIpmwVA8ZNXPpSETnJ67E26Mr4VwVBrFycYBklCmh/NdQq9ikTZPxM6vpSBUqNfHoyELrwhTJpO4K/PzBU8OznEQijNVufzjJaBoSxSY2Helz6/313lBrFow7gnh0HJvgtK7HskOVTVXAYs8otUAoWp/mSEylRNfHI/gVIX/a4eloeHmU1vKQllou9kRlp3XrZ/j4YDjn/pwG9EyTd859WER+BPwffOZX4R/sw8Df4jWRi4E/IbFHPhLOuwP/YvTFaa/9FLzmthqvRezGF8bxJJOmv4rX2PbiNZod+EmNFfjKqL7SOmSL3eDapVF6sfA9gG+ox5FMuqkW3cy09hiJQJvEl8GheE33a/gJxHn8xOKb8UP6Z+C1xcvDsSvw5fpfgUvwmuMZJOaseXxj1Yo2Ho6vJ5kQexQ/kXchvrJ+PjzPLfj3+xy8r/88/n1dDvxOSPfb4VkvCuV1A14j/E/gtc65j4jInfh1AAfC8z2Cn+y9zTn3JyIyh/dN/za+U3gxfrLwQ/gJsmPxncO7gP/AC/15fH24EV9vzgCuwkdQfSA83168AvIgviGeiZ80PRovsMr40em/4LXib+CF7BZ8x3MtiflgOpT3pfh1GILvHG7C18HnA28I6b4Z+EDI42fwmu4j4f5PAr4AnIWfAH9buPbreKFyUSjrPfi5r3Pwk5Er8FtzHhry9xy81n8ofsL+q/hJwCeQaOWE+20Nz/pCfB3YHcpLOwg1c/0snP99fL3chp+MXRPe62q8Y8JFoTyuJRl1EPK3Jzz30/Cd9DEkZp/V+Dq1AV9XPoKvc6vDexwBnhjK5TZ83Ts+pH0/viM5DS8L1MHgXnz7WUNiLloVPv8glMkKfB3QTnMXyYT8D/H1eG1IH5KR16XAb4bfN5PUmf2hzI4Lz/v4kPZ38GsqKvjtVN9Esh7nSPx720IOLECZYRjGENPLiVfDMAyjy5iQNwzDGGJMyC9BRMSJyMXR9/eIyAfC51Ui8i0R+X6IOdIsrc0iclYL975URF7ZVsbz3+PNIvKJbt6jHxCRE0WkaeyS1DV1330Lacy0cr7RW0zIL03mgN8WkaMyfnsD8A/4icl3LmqueoSI9DRQ3yLT6N0bQ4gJ+aXJArAJeHfGb+o+ll7FC4CIrBSRL4rILSLyJRLfYkTkhSJynYjcJCJfCRH16iIi96qwEZGzRGRz+Hy0iFwZ0vkHEflFdN43RORGEblNRC6I0nqLiGwTkavxLpd6/AQRuSrk9yoROT4cv1REPioiPwD+WkQOE5F/EpGfiMhWEXl5OO/JInKDiEyENE7JeI7M5w7P98Fw/KciclrGtaMi8rfh91vCSnBE5E9DXm4VkU0hAiUi8jQRuVlErsN7EWk6J4rINeFeN4nIs+oUe91336CsTgrP95MQWFDPFxH5m5DHn4rIa+rc0+glzjn7W2J/eLfHw/EuY+PAe4APhN/WAP+Gdxl7XMa1f4Tftxe8O+oC3oXvKLwL2WHht/cCf5px/aXAK8Pne4GjwuezgM3h8yeAi8Ln38S7nOp5R4b/K/ErjNfiXRzvw7szjgE/Aj4Rzvs2cH74/DvAN6J8fAcYDd8/BLwhKoNtePe3/wO8PhwfA1amnqfuc4fne0f4/Dbgkozy+B94l8Vlqec7Mjrnn4GXhs+3AM8Ln/8GuDV8PhRYET6fAmxp493XK6tvAW8Kn9+ODycM3sXvSpJYRfcB63tdv+2v9s80+SWKc24vPpjVO1PH9zjnznXO/bpz7v6MS5+L933HOXcLXuiA9wk/HfiRiEzgA7ud0Gb2zgG+GO7xXZIwBADvFJGb8f7ij8cLtGfgO4jdzrkSfi2AcjZwWfj8zyFt5SvOOV0I9kLgfSHvm/H+0Mfj/cffLyLvBU5wzsVL2/M899fC/xvx6wjS/AbwGefcQnhejTD56yJyvYj8FO/7/mQRGQfWOOeujp5HWQ58Npz/lZCnTOq9e+qX1bPx6xnS9zwHuNw5V3bOTQFXA79W775Gb1hKtkjjYD6GX+jyf1u8LmtxhQBXOude10I6ujQdkjATmtbBNxDZiBeKZzvnDgTzThyeIg/xefujzwL8N+fcnanz7xCR64HfAr4nIr/rnPt+6rpGz63xbeIAajEHrWYWkRXAp4CznHM7wsToiqxzI95NEpVTV2U2Is+7T6/czMq70eeYJr+ECVrjl/ErEfPyQ+D1ACLyFLzJBrxm/WwReWL47VAReVKTtO7Fr2YEP/RXrsWHfkVEXohfUQjevPBoEPCn4bVo8DE8NorIWhFZjg+ZrPwnfuUqId/X1snL94B3RLbvM8P/JwD3OOf+Hm+2+NXUde08d8y/A7+vk78iciRJx/VQsO+/EvwoC5gWEdWwXx+lMw5MOh92Chu2KgAAAVtJREFU9o0cHI6hhjrvvl5Z/Sh1XPkh8Jowr3A0fpR3Q9MnNhYVE/LGxXi7cl4+DawSkVvwy8hvAHDO7cYvwb88/PZj/LLxNMtItNsPAh8XkWuo3anng8ALReQmfEiCSfzy8+8Cy0L6fxHugXNuEr/0/zp8qIKborTeCbwlXPNGvNdQFn+BN3ncIt4tUScYXwPcGkwxp+HNHFVaeO56XIK3Zd8SzFDnBWH+WXxIgm/gwzgobwE+GSZeY9PRp4DzReTH+HAC8SilHul3X6+s3gW8XUR+QhKIDXz4hFvwMXu+D1zonHsQo6+wsAbGoiEiI3iB9Sbn3G0NzjsEKDvnFkTkbODTzrkNi5VPwxgmzCZvLAriF1b9B/CDRgI+cDzw5dAplPABvgzDaAPT5A3DMIYYs8kbhmEMMSbkDcMwhhgT8oZhGEOMCXnDMIwhxoS8YRjGEGNC3jAMY4j5/6U3XBs3lU70AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotDedogramas(linkageMatrixs_dict,metodos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:08.826757Z",
     "start_time": "2020-10-13T02:30:07.703932Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotDedogramas(linkageMatrixs_dict,metodos, truncate_mode='level', p= 3 )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Dendogramas de 4 clusters**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:09.519354Z",
     "start_time": "2020-10-13T02:30:08.829457Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plotDedogramas(linkageMatrixs_dict,metodos,  truncate_mode='lastp', p= 3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Los dendogramas representados mas arriba, permiten una visualizacion explicativa del modo en que el modelo del clustering jerarquico procede para alcanzar los 3 clusters deseados.\n",
    "En la primera parte se ven dendogramas concretos donde puede apreciarse que en una primera instancia cada jugador -o casi- constituye un cluster, y a medida que estos se van agrupando entre si (tomando como referencia distintas medidas de distancia) van conformandose nuevos \"niveles\".\n",
    "Asi, el modelo jerarquico representa una multiplicidad de organizaciones por clusters posible, y uno es el que define arbitrariamente el \"corte\" que responde mejor a su objetivo. En los graficos ultimos se observa con mayor precision el punto donde se realiza el \"corte\" y que nos permite obtener los 3 clusters deseados (cada \"rama\" del arbol corresponde a un cluster).\n",
    "La representacion visual tambien nos permite ver que existe una distancia considerable y proporcional entre los clusters/ramas."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4- Análisis de los clusters encontrados."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 4.1 Análisis de los cluster de kmeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:09.527748Z",
     "start_time": "2020-10-13T02:30:09.522109Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Kmeans encontró:  3 clusters\n"
     ]
    }
   ],
   "source": [
    "df_clusters=df_over.copy()\n",
    "df_clusters['kmeans'] = km.labels_ #clusters\n",
    "print('Kmeans encontró: ', max(km.labels_)+1, 'clusters')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:09.559400Z",
     "start_time": "2020-10-13T02:30:09.529490Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pace</th>\n",
       "      <th>shooting</th>\n",
       "      <th>passing</th>\n",
       "      <th>dribbling</th>\n",
       "      <th>defending</th>\n",
       "      <th>physic</th>\n",
       "      <th>attacking_crossing</th>\n",
       "      <th>attacking_finishing</th>\n",
       "      <th>attacking_heading_accuracy</th>\n",
       "      <th>attacking_short_passing</th>\n",
       "      <th>attacking_volleys</th>\n",
       "      <th>skill_dribbling</th>\n",
       "      <th>skill_curve</th>\n",
       "      <th>skill_fk_accuracy</th>\n",
       "      <th>skill_long_passing</th>\n",
       "      <th>skill_ball_control</th>\n",
       "      <th>movement_acceleration</th>\n",
       "      <th>movement_sprint_speed</th>\n",
       "      <th>movement_agility</th>\n",
       "      <th>movement_reactions</th>\n",
       "      <th>movement_balance</th>\n",
       "      <th>power_shot_power</th>\n",
       "      <th>power_jumping</th>\n",
       "      <th>power_stamina</th>\n",
       "      <th>power_strength</th>\n",
       "      <th>power_long_shots</th>\n",
       "      <th>mentality_aggression</th>\n",
       "      <th>mentality_interceptions</th>\n",
       "      <th>mentality_positioning</th>\n",
       "      <th>mentality_vision</th>\n",
       "      <th>mentality_penalties</th>\n",
       "      <th>mentality_composure</th>\n",
       "      <th>defending_marking</th>\n",
       "      <th>defending_standing_tackle</th>\n",
       "      <th>defending_sliding_tackle</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kmeans</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "      <td>260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "      <td>133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        pace  shooting  passing  dribbling  defending  physic  \\\n",
       "kmeans                                                          \n",
       "0        260       260      260        260        260     260   \n",
       "1        133       133      133        133        133     133   \n",
       "2        272       272      272        272        272     272   \n",
       "\n",
       "        attacking_crossing  attacking_finishing  attacking_heading_accuracy  \\\n",
       "kmeans                                                                        \n",
       "0                      260                  260                         260   \n",
       "1                      133                  133                         133   \n",
       "2                      272                  272                         272   \n",
       "\n",
       "        attacking_short_passing  attacking_volleys  skill_dribbling  \\\n",
       "kmeans                                                                \n",
       "0                           260                260              260   \n",
       "1                           133                133              133   \n",
       "2                           272                272              272   \n",
       "\n",
       "        skill_curve  skill_fk_accuracy  skill_long_passing  \\\n",
       "kmeans                                                       \n",
       "0               260                260                 260   \n",
       "1               133                133                 133   \n",
       "2               272                272                 272   \n",
       "\n",
       "        skill_ball_control  movement_acceleration  movement_sprint_speed  \\\n",
       "kmeans                                                                     \n",
       "0                      260                    260                    260   \n",
       "1                      133                    133                    133   \n",
       "2                      272                    272                    272   \n",
       "\n",
       "        movement_agility  movement_reactions  movement_balance  \\\n",
       "kmeans                                                           \n",
       "0                    260                 260               260   \n",
       "1                    133                 133               133   \n",
       "2                    272                 272               272   \n",
       "\n",
       "        power_shot_power  power_jumping  power_stamina  power_strength  \\\n",
       "kmeans                                                                   \n",
       "0                    260            260            260             260   \n",
       "1                    133            133            133             133   \n",
       "2                    272            272            272             272   \n",
       "\n",
       "        power_long_shots  mentality_aggression  mentality_interceptions  \\\n",
       "kmeans                                                                    \n",
       "0                    260                   260                      260   \n",
       "1                    133                   133                      133   \n",
       "2                    272                   272                      272   \n",
       "\n",
       "        mentality_positioning  mentality_vision  mentality_penalties  \\\n",
       "kmeans                                                                 \n",
       "0                         260               260                  260   \n",
       "1                         133               133                  133   \n",
       "2                         272               272                  272   \n",
       "\n",
       "        mentality_composure  defending_marking  defending_standing_tackle  \\\n",
       "kmeans                                                                      \n",
       "0                       260                260                        260   \n",
       "1                       133                133                        133   \n",
       "2                       272                272                        272   \n",
       "\n",
       "        defending_sliding_tackle  \n",
       "kmeans                            \n",
       "0                            260  \n",
       "1                            133  \n",
       "2                            272  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clusters.groupby('kmeans').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:09.733609Z",
     "start_time": "2020-10-13T02:30:09.561193Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pace</th>\n",
       "      <th>shooting</th>\n",
       "      <th>passing</th>\n",
       "      <th>dribbling</th>\n",
       "      <th>defending</th>\n",
       "      <th>physic</th>\n",
       "      <th>attacking_crossing</th>\n",
       "      <th>attacking_finishing</th>\n",
       "      <th>attacking_heading_accuracy</th>\n",
       "      <th>attacking_short_passing</th>\n",
       "      <th>attacking_volleys</th>\n",
       "      <th>skill_dribbling</th>\n",
       "      <th>skill_curve</th>\n",
       "      <th>skill_fk_accuracy</th>\n",
       "      <th>skill_long_passing</th>\n",
       "      <th>skill_ball_control</th>\n",
       "      <th>movement_acceleration</th>\n",
       "      <th>movement_sprint_speed</th>\n",
       "      <th>movement_agility</th>\n",
       "      <th>movement_reactions</th>\n",
       "      <th>movement_balance</th>\n",
       "      <th>power_shot_power</th>\n",
       "      <th>power_jumping</th>\n",
       "      <th>power_stamina</th>\n",
       "      <th>power_strength</th>\n",
       "      <th>power_long_shots</th>\n",
       "      <th>mentality_aggression</th>\n",
       "      <th>mentality_interceptions</th>\n",
       "      <th>mentality_positioning</th>\n",
       "      <th>mentality_vision</th>\n",
       "      <th>mentality_penalties</th>\n",
       "      <th>mentality_composure</th>\n",
       "      <th>defending_marking</th>\n",
       "      <th>defending_standing_tackle</th>\n",
       "      <th>defending_sliding_tackle</th>\n",
       "      <th>kmeans</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.000000</td>\n",
       "      <td>260.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>70.726923</td>\n",
       "      <td>67.692308</td>\n",
       "      <td>77.280769</td>\n",
       "      <td>78.269231</td>\n",
       "      <td>74.761538</td>\n",
       "      <td>74.734615</td>\n",
       "      <td>74.576923</td>\n",
       "      <td>63.061538</td>\n",
       "      <td>65.661538</td>\n",
       "      <td>81.484615</td>\n",
       "      <td>62.765385</td>\n",
       "      <td>78.130769</td>\n",
       "      <td>72.246154</td>\n",
       "      <td>64.696154</td>\n",
       "      <td>77.661538</td>\n",
       "      <td>80.950000</td>\n",
       "      <td>71.061538</td>\n",
       "      <td>70.411538</td>\n",
       "      <td>72.757692</td>\n",
       "      <td>79.903846</td>\n",
       "      <td>72.611538</td>\n",
       "      <td>76.115385</td>\n",
       "      <td>69.553846</td>\n",
       "      <td>81.430769</td>\n",
       "      <td>71.330769</td>\n",
       "      <td>70.673077</td>\n",
       "      <td>76.173077</td>\n",
       "      <td>76.950000</td>\n",
       "      <td>72.046154</td>\n",
       "      <td>76.588462</td>\n",
       "      <td>63.342308</td>\n",
       "      <td>79.192308</td>\n",
       "      <td>74.492308</td>\n",
       "      <td>76.807692</td>\n",
       "      <td>73.626923</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>10.360232</td>\n",
       "      <td>8.054205</td>\n",
       "      <td>4.400993</td>\n",
       "      <td>4.460532</td>\n",
       "      <td>6.482294</td>\n",
       "      <td>6.357645</td>\n",
       "      <td>8.203837</td>\n",
       "      <td>10.314180</td>\n",
       "      <td>10.767859</td>\n",
       "      <td>3.910652</td>\n",
       "      <td>11.546563</td>\n",
       "      <td>5.465778</td>\n",
       "      <td>9.803523</td>\n",
       "      <td>13.329069</td>\n",
       "      <td>5.832347</td>\n",
       "      <td>3.984696</td>\n",
       "      <td>9.949877</td>\n",
       "      <td>11.410380</td>\n",
       "      <td>8.364693</td>\n",
       "      <td>3.808442</td>\n",
       "      <td>9.664201</td>\n",
       "      <td>7.788849</td>\n",
       "      <td>11.425476</td>\n",
       "      <td>8.009105</td>\n",
       "      <td>8.893092</td>\n",
       "      <td>9.912983</td>\n",
       "      <td>8.771930</td>\n",
       "      <td>6.728132</td>\n",
       "      <td>7.533566</td>\n",
       "      <td>6.877574</td>\n",
       "      <td>11.138395</td>\n",
       "      <td>5.404269</td>\n",
       "      <td>7.415674</td>\n",
       "      <td>6.898711</td>\n",
       "      <td>8.497288</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>41.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>65.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>74.750000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>77.750000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>65.750000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>75.750000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>71.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>67.500000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>79.500000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>77.250000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>79.250000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>88.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>82.250000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>82.250000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>92.000000</td>\n",
       "      <td>86.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>87.000000</td>\n",
       "      <td>89.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>85.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>87.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>91.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>97.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>91.000000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>91.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             pace    shooting     passing   dribbling   defending      physic  \\\n",
       "count  260.000000  260.000000  260.000000  260.000000  260.000000  260.000000   \n",
       "mean    70.726923   67.692308   77.280769   78.269231   74.761538   74.734615   \n",
       "std     10.360232    8.054205    4.400993    4.460532    6.482294    6.357645   \n",
       "min     41.000000   43.000000   63.000000   62.000000   56.000000   53.000000   \n",
       "25%     65.000000   63.000000   74.000000   75.000000   71.000000   70.000000   \n",
       "50%     71.000000   68.000000   77.000000   78.000000   76.000000   75.000000   \n",
       "75%     77.250000   73.000000   80.000000   81.000000   79.000000   79.000000   \n",
       "max     92.000000   86.000000   92.000000   90.000000   87.000000   89.000000   \n",
       "\n",
       "       attacking_crossing  attacking_finishing  attacking_heading_accuracy  \\\n",
       "count          260.000000           260.000000                  260.000000   \n",
       "mean            74.576923            63.061538                   65.661538   \n",
       "std              8.203837            10.314180                   10.767859   \n",
       "min             50.000000            27.000000                   32.000000   \n",
       "25%             68.000000            56.000000                   59.000000   \n",
       "50%             75.000000            64.000000                   67.500000   \n",
       "75%             81.000000            71.000000                   74.000000   \n",
       "max             93.000000            85.000000                   92.000000   \n",
       "\n",
       "       attacking_short_passing  attacking_volleys  skill_dribbling  \\\n",
       "count               260.000000         260.000000       260.000000   \n",
       "mean                 81.484615          62.765385        78.130769   \n",
       "std                   3.910652          11.546563         5.465778   \n",
       "min                  70.000000          31.000000        58.000000   \n",
       "25%                  78.000000          55.000000        75.000000   \n",
       "50%                  82.000000          64.000000        78.000000   \n",
       "75%                  84.000000          72.000000        82.000000   \n",
       "max                  92.000000          87.000000        90.000000   \n",
       "\n",
       "       skill_curve  skill_fk_accuracy  skill_long_passing  skill_ball_control  \\\n",
       "count   260.000000         260.000000          260.000000          260.000000   \n",
       "mean     72.246154          64.696154           77.661538           80.950000   \n",
       "std       9.803523          13.329069            5.832347            3.984696   \n",
       "min      31.000000          25.000000           56.000000           62.000000   \n",
       "25%      66.000000          56.000000           74.750000           78.000000   \n",
       "50%      74.000000          67.000000           79.000000           81.000000   \n",
       "75%      79.250000          75.000000           81.000000           84.000000   \n",
       "max      91.000000          92.000000           92.000000           92.000000   \n",
       "\n",
       "       movement_acceleration  movement_sprint_speed  movement_agility  \\\n",
       "count             260.000000             260.000000        260.000000   \n",
       "mean               71.061538              70.411538         72.757692   \n",
       "std                 9.949877              11.410380          8.364693   \n",
       "min                37.000000              34.000000         36.000000   \n",
       "25%                66.000000              64.000000         67.000000   \n",
       "50%                71.000000              72.000000         73.000000   \n",
       "75%                78.000000              78.000000         78.000000   \n",
       "max                94.000000              94.000000         92.000000   \n",
       "\n",
       "       movement_reactions  movement_balance  power_shot_power  power_jumping  \\\n",
       "count          260.000000        260.000000        260.000000     260.000000   \n",
       "mean            79.903846         72.611538         76.115385      69.553846   \n",
       "std              3.808442          9.664201          7.788849      11.425476   \n",
       "min             70.000000         34.000000         48.000000      30.000000   \n",
       "25%             77.750000         66.000000         72.000000      63.000000   \n",
       "50%             80.000000         73.000000         77.000000      71.000000   \n",
       "75%             82.000000         79.000000         82.000000      77.000000   \n",
       "max             93.000000         94.000000         95.000000      93.000000   \n",
       "\n",
       "       power_stamina  power_strength  power_long_shots  mentality_aggression  \\\n",
       "count     260.000000      260.000000        260.000000            260.000000   \n",
       "mean       81.430769       71.330769         70.673077             76.173077   \n",
       "std         8.009105        8.893092          9.912983              8.771930   \n",
       "min        54.000000       33.000000         36.000000             44.000000   \n",
       "25%        77.000000       66.000000         65.750000             71.000000   \n",
       "50%        82.000000       71.000000         72.000000             77.000000   \n",
       "75%        88.000000       77.000000         78.000000             82.250000   \n",
       "max        97.000000       92.000000         90.000000             93.000000   \n",
       "\n",
       "       mentality_interceptions  mentality_positioning  mentality_vision  \\\n",
       "count               260.000000             260.000000        260.000000   \n",
       "mean                 76.950000              72.046154         76.588462   \n",
       "std                   6.728132               7.533566          6.877574   \n",
       "min                  50.000000              50.000000         54.000000   \n",
       "25%                  74.000000              68.000000         73.000000   \n",
       "50%                  78.000000              73.000000         78.000000   \n",
       "75%                  81.000000              77.000000         82.000000   \n",
       "max                  92.000000              90.000000         94.000000   \n",
       "\n",
       "       mentality_penalties  mentality_composure  defending_marking  \\\n",
       "count           260.000000           260.000000         260.000000   \n",
       "mean             63.342308            79.192308          74.492308   \n",
       "std              11.138395             5.404269           7.415674   \n",
       "min              38.000000            54.000000          50.000000   \n",
       "25%              55.000000            75.750000          70.000000   \n",
       "50%              63.000000            79.500000          76.000000   \n",
       "75%              72.000000            82.250000          79.000000   \n",
       "max              91.000000            95.000000          90.000000   \n",
       "\n",
       "       defending_standing_tackle  defending_sliding_tackle  kmeans  \n",
       "count                 260.000000                260.000000   260.0  \n",
       "mean                   76.807692                 73.626923     0.0  \n",
       "std                     6.898711                  8.497288     0.0  \n",
       "min                    51.000000                 48.000000     0.0  \n",
       "25%                    74.000000                 68.000000     0.0  \n",
       "50%                    78.000000                 76.000000     0.0  \n",
       "75%                    82.000000                 80.000000     0.0  \n",
       "max                    91.000000                 90.000000     0.0  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clusters[df_clusters['kmeans']==0].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:10.212592Z",
     "start_time": "2020-10-13T02:30:09.735300Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">pace</th>\n",
       "      <th colspan=\"8\" halign=\"left\">shooting</th>\n",
       "      <th colspan=\"8\" halign=\"left\">passing</th>\n",
       "      <th colspan=\"8\" halign=\"left\">dribbling</th>\n",
       "      <th colspan=\"8\" halign=\"left\">defending</th>\n",
       "      <th colspan=\"8\" halign=\"left\">physic</th>\n",
       "      <th colspan=\"2\" halign=\"left\">attacking_crossing</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"2\" halign=\"left\">mentality_positioning</th>\n",
       "      <th colspan=\"8\" halign=\"left\">mentality_vision</th>\n",
       "      <th colspan=\"8\" halign=\"left\">mentality_penalties</th>\n",
       "      <th colspan=\"8\" halign=\"left\">mentality_composure</th>\n",
       "      <th colspan=\"8\" halign=\"left\">defending_marking</th>\n",
       "      <th colspan=\"8\" halign=\"left\">defending_standing_tackle</th>\n",
       "      <th colspan=\"8\" halign=\"left\">defending_sliding_tackle</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>...</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kmeans</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>260.0</td>\n",
       "      <td>70.726923</td>\n",
       "      <td>10.360232</td>\n",
       "      <td>41.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>77.25</td>\n",
       "      <td>92.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>67.692308</td>\n",
       "      <td>8.054205</td>\n",
       "      <td>43.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>77.280769</td>\n",
       "      <td>4.400993</td>\n",
       "      <td>63.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>78.269231</td>\n",
       "      <td>4.460532</td>\n",
       "      <td>62.0</td>\n",
       "      <td>75.00</td>\n",
       "      <td>78.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>74.761538</td>\n",
       "      <td>6.482294</td>\n",
       "      <td>56.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>79.00</td>\n",
       "      <td>87.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>74.734615</td>\n",
       "      <td>6.357645</td>\n",
       "      <td>53.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>74.576923</td>\n",
       "      <td>...</td>\n",
       "      <td>77.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>76.588462</td>\n",
       "      <td>6.877574</td>\n",
       "      <td>54.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>63.342308</td>\n",
       "      <td>11.138395</td>\n",
       "      <td>38.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>91.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>79.192308</td>\n",
       "      <td>5.404269</td>\n",
       "      <td>54.0</td>\n",
       "      <td>75.75</td>\n",
       "      <td>79.5</td>\n",
       "      <td>82.25</td>\n",
       "      <td>95.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>74.492308</td>\n",
       "      <td>7.415674</td>\n",
       "      <td>50.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>76.807692</td>\n",
       "      <td>6.898711</td>\n",
       "      <td>51.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>82.00</td>\n",
       "      <td>91.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>73.626923</td>\n",
       "      <td>8.497288</td>\n",
       "      <td>48.0</td>\n",
       "      <td>68.00</td>\n",
       "      <td>76.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>90.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>133.0</td>\n",
       "      <td>64.345865</td>\n",
       "      <td>10.644422</td>\n",
       "      <td>33.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>72.00</td>\n",
       "      <td>85.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>46.323308</td>\n",
       "      <td>8.777165</td>\n",
       "      <td>25.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>62.255639</td>\n",
       "      <td>6.968168</td>\n",
       "      <td>42.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>63.353383</td>\n",
       "      <td>6.117778</td>\n",
       "      <td>48.0</td>\n",
       "      <td>60.00</td>\n",
       "      <td>64.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>81.819549</td>\n",
       "      <td>3.059596</td>\n",
       "      <td>76.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>83.00</td>\n",
       "      <td>90.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>78.691729</td>\n",
       "      <td>3.756168</td>\n",
       "      <td>69.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>52.661654</td>\n",
       "      <td>...</td>\n",
       "      <td>53.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>56.293233</td>\n",
       "      <td>11.693550</td>\n",
       "      <td>22.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>47.984962</td>\n",
       "      <td>10.665709</td>\n",
       "      <td>24.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>76.308271</td>\n",
       "      <td>5.650396</td>\n",
       "      <td>60.0</td>\n",
       "      <td>72.00</td>\n",
       "      <td>76.0</td>\n",
       "      <td>80.00</td>\n",
       "      <td>89.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>81.646617</td>\n",
       "      <td>4.450392</td>\n",
       "      <td>72.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>83.097744</td>\n",
       "      <td>3.057194</td>\n",
       "      <td>77.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>85.00</td>\n",
       "      <td>92.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>80.977444</td>\n",
       "      <td>3.542953</td>\n",
       "      <td>67.0</td>\n",
       "      <td>79.00</td>\n",
       "      <td>81.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>272.0</td>\n",
       "      <td>79.077206</td>\n",
       "      <td>9.671234</td>\n",
       "      <td>39.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>87.00</td>\n",
       "      <td>96.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>78.459559</td>\n",
       "      <td>4.515474</td>\n",
       "      <td>62.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>74.216912</td>\n",
       "      <td>7.346009</td>\n",
       "      <td>53.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>75.5</td>\n",
       "      <td>79.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>81.617647</td>\n",
       "      <td>5.187352</td>\n",
       "      <td>65.0</td>\n",
       "      <td>78.75</td>\n",
       "      <td>82.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>41.588235</td>\n",
       "      <td>8.843845</td>\n",
       "      <td>23.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>47.25</td>\n",
       "      <td>62.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>68.338235</td>\n",
       "      <td>9.193870</td>\n",
       "      <td>44.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>71.856618</td>\n",
       "      <td>...</td>\n",
       "      <td>84.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>76.382353</td>\n",
       "      <td>7.531051</td>\n",
       "      <td>52.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>72.919118</td>\n",
       "      <td>8.418969</td>\n",
       "      <td>37.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>79.308824</td>\n",
       "      <td>5.276159</td>\n",
       "      <td>65.0</td>\n",
       "      <td>76.00</td>\n",
       "      <td>79.0</td>\n",
       "      <td>82.00</td>\n",
       "      <td>96.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>42.176471</td>\n",
       "      <td>12.094573</td>\n",
       "      <td>10.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>37.937500</td>\n",
       "      <td>12.243221</td>\n",
       "      <td>12.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>46.25</td>\n",
       "      <td>64.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>32.345588</td>\n",
       "      <td>11.043609</td>\n",
       "      <td>11.0</td>\n",
       "      <td>23.75</td>\n",
       "      <td>31.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>63.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 280 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         pace                                                      shooting  \\\n",
       "        count       mean        std   min   25%   50%    75%   max    count   \n",
       "kmeans                                                                        \n",
       "0       260.0  70.726923  10.360232  41.0  65.0  71.0  77.25  92.0    260.0   \n",
       "1       133.0  64.345865  10.644422  33.0  56.0  65.0  72.00  85.0    133.0   \n",
       "2       272.0  79.077206   9.671234  39.0  74.0  80.0  87.00  96.0    272.0   \n",
       "\n",
       "                                                          passing             \\\n",
       "             mean       std   min   25%   50%   75%   max   count       mean   \n",
       "kmeans                                                                         \n",
       "0       67.692308  8.054205  43.0  63.0  68.0  73.0  86.0   260.0  77.280769   \n",
       "1       46.323308  8.777165  25.0  41.0  47.0  53.0  65.0   133.0  62.255639   \n",
       "2       78.459559  4.515474  62.0  76.0  79.0  81.0  93.0   272.0  74.216912   \n",
       "\n",
       "                                               dribbling                       \\\n",
       "             std   min   25%   50%   75%   max     count       mean       std   \n",
       "kmeans                                                                          \n",
       "0       4.400993  63.0  74.0  77.0  80.0  92.0     260.0  78.269231  4.460532   \n",
       "1       6.968168  42.0  58.0  63.0  68.0  76.0     133.0  63.353383  6.117778   \n",
       "2       7.346009  53.0  70.0  75.5  79.0  92.0     272.0  81.617647  5.187352   \n",
       "\n",
       "                                      defending                             \\\n",
       "         min    25%   50%   75%   max     count       mean       std   min   \n",
       "kmeans                                                                       \n",
       "0       62.0  75.00  78.0  81.0  90.0     260.0  74.761538  6.482294  56.0   \n",
       "1       48.0  60.00  64.0  68.0  76.0     133.0  81.819549  3.059596  76.0   \n",
       "2       65.0  78.75  82.0  85.0  96.0     272.0  41.588235  8.843845  23.0   \n",
       "\n",
       "                                physic                                         \\\n",
       "         25%   50%    75%   max  count       mean       std   min   25%   50%   \n",
       "kmeans                                                                          \n",
       "0       71.0  76.0  79.00  87.0  260.0  74.734615  6.357645  53.0  70.0  75.0   \n",
       "1       80.0  81.0  83.00  90.0  133.0  78.691729  3.756168  69.0  76.0  79.0   \n",
       "2       35.0  41.0  47.25  62.0  272.0  68.338235  9.193870  44.0  62.0  69.0   \n",
       "\n",
       "                   attacking_crossing             ... mentality_positioning  \\\n",
       "         75%   max              count       mean  ...                   75%   \n",
       "kmeans                                            ...                         \n",
       "0       79.0  89.0              260.0  74.576923  ...                  77.0   \n",
       "1       82.0  87.0              133.0  52.661654  ...                  53.0   \n",
       "2       75.0  90.0              272.0  71.856618  ...                  84.0   \n",
       "\n",
       "             mentality_vision                                                \\\n",
       "         max            count       mean        std   min   25%   50%   75%   \n",
       "kmeans                                                                        \n",
       "0       90.0            260.0  76.588462   6.877574  54.0  73.0  78.0  82.0   \n",
       "1       70.0            133.0  56.293233  11.693550  22.0  50.0  57.0  65.0   \n",
       "2       95.0            272.0  76.382353   7.531051  52.0  73.0  78.0  81.0   \n",
       "\n",
       "             mentality_penalties                                          \\\n",
       "         max               count       mean        std   min   25%   50%   \n",
       "kmeans                                                                     \n",
       "0       94.0               260.0  63.342308  11.138395  38.0  55.0  63.0   \n",
       "1       79.0               133.0  47.984962  10.665709  24.0  41.0  46.0   \n",
       "2       94.0               272.0  72.919118   8.418969  37.0  68.0  74.0   \n",
       "\n",
       "                   mentality_composure                                    \\\n",
       "         75%   max               count       mean       std   min    25%   \n",
       "kmeans                                                                     \n",
       "0       72.0  91.0               260.0  79.192308  5.404269  54.0  75.75   \n",
       "1       56.0  72.0               133.0  76.308271  5.650396  60.0  72.00   \n",
       "2       78.0  92.0               272.0  79.308824  5.276159  65.0  76.00   \n",
       "\n",
       "                          defending_marking                                    \\\n",
       "         50%    75%   max             count       mean        std   min   25%   \n",
       "kmeans                                                                          \n",
       "0       79.5  82.25  95.0             260.0  74.492308   7.415674  50.0  70.0   \n",
       "1       76.0  80.00  89.0             133.0  81.646617   4.450392  72.0  79.0   \n",
       "2       79.0  82.00  96.0             272.0  42.176471  12.094573  10.0  32.0   \n",
       "\n",
       "                         defending_standing_tackle                        \\\n",
       "         50%   75%   max                     count       mean        std   \n",
       "kmeans                                                                     \n",
       "0       76.0  79.0  90.0                     260.0  76.807692   6.898711   \n",
       "1       81.0  85.0  94.0                     133.0  83.097744   3.057194   \n",
       "2       41.0  52.0  73.0                     272.0  37.937500  12.243221   \n",
       "\n",
       "                                      defending_sliding_tackle             \\\n",
       "         min   25%   50%    75%   max                    count       mean   \n",
       "kmeans                                                                      \n",
       "0       51.0  74.0  78.0  82.00  91.0                    260.0  73.626923   \n",
       "1       77.0  81.0  83.0  85.00  92.0                    133.0  80.977444   \n",
       "2       12.0  29.0  37.0  46.25  64.0                    272.0  32.345588   \n",
       "\n",
       "                                                  \n",
       "              std   min    25%   50%   75%   max  \n",
       "kmeans                                            \n",
       "0        8.497288  48.0  68.00  76.0  80.0  90.0  \n",
       "1        3.542953  67.0  79.00  81.0  83.0  89.0  \n",
       "2       11.043609  11.0  23.75  31.0  40.0  63.0  \n",
       "\n",
       "[3 rows x 280 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clusters.groupby('kmeans').describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:10.221589Z",
     "start_time": "2020-10-13T02:30:10.215279Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "kmeans\n",
       "0    260\n",
       "1    133\n",
       "2    272\n",
       "Name: pace, dtype: int64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clusters.groupby('kmeans')['pace'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:10.269305Z",
     "start_time": "2020-10-13T02:30:10.223562Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pace</th>\n",
       "      <th>shooting</th>\n",
       "      <th>passing</th>\n",
       "      <th>dribbling</th>\n",
       "      <th>defending</th>\n",
       "      <th>physic</th>\n",
       "      <th>attacking_crossing</th>\n",
       "      <th>attacking_finishing</th>\n",
       "      <th>attacking_heading_accuracy</th>\n",
       "      <th>attacking_short_passing</th>\n",
       "      <th>attacking_volleys</th>\n",
       "      <th>skill_dribbling</th>\n",
       "      <th>skill_curve</th>\n",
       "      <th>skill_fk_accuracy</th>\n",
       "      <th>skill_long_passing</th>\n",
       "      <th>skill_ball_control</th>\n",
       "      <th>movement_acceleration</th>\n",
       "      <th>movement_sprint_speed</th>\n",
       "      <th>movement_agility</th>\n",
       "      <th>movement_reactions</th>\n",
       "      <th>movement_balance</th>\n",
       "      <th>power_shot_power</th>\n",
       "      <th>power_jumping</th>\n",
       "      <th>power_stamina</th>\n",
       "      <th>power_strength</th>\n",
       "      <th>power_long_shots</th>\n",
       "      <th>mentality_aggression</th>\n",
       "      <th>mentality_interceptions</th>\n",
       "      <th>mentality_positioning</th>\n",
       "      <th>mentality_vision</th>\n",
       "      <th>mentality_penalties</th>\n",
       "      <th>mentality_composure</th>\n",
       "      <th>defending_marking</th>\n",
       "      <th>defending_standing_tackle</th>\n",
       "      <th>defending_sliding_tackle</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kmeans</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>70.726923</td>\n",
       "      <td>67.692308</td>\n",
       "      <td>77.280769</td>\n",
       "      <td>78.269231</td>\n",
       "      <td>74.761538</td>\n",
       "      <td>74.734615</td>\n",
       "      <td>74.576923</td>\n",
       "      <td>63.061538</td>\n",
       "      <td>65.661538</td>\n",
       "      <td>81.484615</td>\n",
       "      <td>62.765385</td>\n",
       "      <td>78.130769</td>\n",
       "      <td>72.246154</td>\n",
       "      <td>64.696154</td>\n",
       "      <td>77.661538</td>\n",
       "      <td>80.950000</td>\n",
       "      <td>71.061538</td>\n",
       "      <td>70.411538</td>\n",
       "      <td>72.757692</td>\n",
       "      <td>79.903846</td>\n",
       "      <td>72.611538</td>\n",
       "      <td>76.115385</td>\n",
       "      <td>69.553846</td>\n",
       "      <td>81.430769</td>\n",
       "      <td>71.330769</td>\n",
       "      <td>70.673077</td>\n",
       "      <td>76.173077</td>\n",
       "      <td>76.950000</td>\n",
       "      <td>72.046154</td>\n",
       "      <td>76.588462</td>\n",
       "      <td>63.342308</td>\n",
       "      <td>79.192308</td>\n",
       "      <td>74.492308</td>\n",
       "      <td>76.807692</td>\n",
       "      <td>73.626923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>64.345865</td>\n",
       "      <td>46.323308</td>\n",
       "      <td>62.255639</td>\n",
       "      <td>63.353383</td>\n",
       "      <td>81.819549</td>\n",
       "      <td>78.691729</td>\n",
       "      <td>52.661654</td>\n",
       "      <td>40.526316</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>73.015038</td>\n",
       "      <td>40.699248</td>\n",
       "      <td>60.330827</td>\n",
       "      <td>47.135338</td>\n",
       "      <td>41.992481</td>\n",
       "      <td>69.187970</td>\n",
       "      <td>69.135338</td>\n",
       "      <td>61.796992</td>\n",
       "      <td>66.398496</td>\n",
       "      <td>57.804511</td>\n",
       "      <td>78.315789</td>\n",
       "      <td>54.947368</td>\n",
       "      <td>62.368421</td>\n",
       "      <td>77.676692</td>\n",
       "      <td>70.203008</td>\n",
       "      <td>82.067669</td>\n",
       "      <td>45.022556</td>\n",
       "      <td>81.248120</td>\n",
       "      <td>81.383459</td>\n",
       "      <td>44.353383</td>\n",
       "      <td>56.293233</td>\n",
       "      <td>47.984962</td>\n",
       "      <td>76.308271</td>\n",
       "      <td>81.646617</td>\n",
       "      <td>83.097744</td>\n",
       "      <td>80.977444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>79.077206</td>\n",
       "      <td>78.459559</td>\n",
       "      <td>74.216912</td>\n",
       "      <td>81.617647</td>\n",
       "      <td>41.588235</td>\n",
       "      <td>68.338235</td>\n",
       "      <td>71.856618</td>\n",
       "      <td>79.194853</td>\n",
       "      <td>64.352941</td>\n",
       "      <td>77.948529</td>\n",
       "      <td>75.716912</td>\n",
       "      <td>82.121324</td>\n",
       "      <td>75.643382</td>\n",
       "      <td>67.375000</td>\n",
       "      <td>67.323529</td>\n",
       "      <td>82.702206</td>\n",
       "      <td>79.613971</td>\n",
       "      <td>78.636029</td>\n",
       "      <td>79.577206</td>\n",
       "      <td>80.518382</td>\n",
       "      <td>75.040441</td>\n",
       "      <td>80.205882</td>\n",
       "      <td>67.628676</td>\n",
       "      <td>74.647059</td>\n",
       "      <td>67.606618</td>\n",
       "      <td>76.209559</td>\n",
       "      <td>62.349265</td>\n",
       "      <td>39.264706</td>\n",
       "      <td>81.713235</td>\n",
       "      <td>76.382353</td>\n",
       "      <td>72.919118</td>\n",
       "      <td>79.308824</td>\n",
       "      <td>42.176471</td>\n",
       "      <td>37.937500</td>\n",
       "      <td>32.345588</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             pace   shooting    passing  dribbling  defending     physic  \\\n",
       "kmeans                                                                     \n",
       "0       70.726923  67.692308  77.280769  78.269231  74.761538  74.734615   \n",
       "1       64.345865  46.323308  62.255639  63.353383  81.819549  78.691729   \n",
       "2       79.077206  78.459559  74.216912  81.617647  41.588235  68.338235   \n",
       "\n",
       "        attacking_crossing  attacking_finishing  attacking_heading_accuracy  \\\n",
       "kmeans                                                                        \n",
       "0                74.576923            63.061538                   65.661538   \n",
       "1                52.661654            40.526316                   80.000000   \n",
       "2                71.856618            79.194853                   64.352941   \n",
       "\n",
       "        attacking_short_passing  attacking_volleys  skill_dribbling  \\\n",
       "kmeans                                                                \n",
       "0                     81.484615          62.765385        78.130769   \n",
       "1                     73.015038          40.699248        60.330827   \n",
       "2                     77.948529          75.716912        82.121324   \n",
       "\n",
       "        skill_curve  skill_fk_accuracy  skill_long_passing  \\\n",
       "kmeans                                                       \n",
       "0         72.246154          64.696154           77.661538   \n",
       "1         47.135338          41.992481           69.187970   \n",
       "2         75.643382          67.375000           67.323529   \n",
       "\n",
       "        skill_ball_control  movement_acceleration  movement_sprint_speed  \\\n",
       "kmeans                                                                     \n",
       "0                80.950000              71.061538              70.411538   \n",
       "1                69.135338              61.796992              66.398496   \n",
       "2                82.702206              79.613971              78.636029   \n",
       "\n",
       "        movement_agility  movement_reactions  movement_balance  \\\n",
       "kmeans                                                           \n",
       "0              72.757692           79.903846         72.611538   \n",
       "1              57.804511           78.315789         54.947368   \n",
       "2              79.577206           80.518382         75.040441   \n",
       "\n",
       "        power_shot_power  power_jumping  power_stamina  power_strength  \\\n",
       "kmeans                                                                   \n",
       "0              76.115385      69.553846      81.430769       71.330769   \n",
       "1              62.368421      77.676692      70.203008       82.067669   \n",
       "2              80.205882      67.628676      74.647059       67.606618   \n",
       "\n",
       "        power_long_shots  mentality_aggression  mentality_interceptions  \\\n",
       "kmeans                                                                    \n",
       "0              70.673077             76.173077                76.950000   \n",
       "1              45.022556             81.248120                81.383459   \n",
       "2              76.209559             62.349265                39.264706   \n",
       "\n",
       "        mentality_positioning  mentality_vision  mentality_penalties  \\\n",
       "kmeans                                                                 \n",
       "0                   72.046154         76.588462            63.342308   \n",
       "1                   44.353383         56.293233            47.984962   \n",
       "2                   81.713235         76.382353            72.919118   \n",
       "\n",
       "        mentality_composure  defending_marking  defending_standing_tackle  \\\n",
       "kmeans                                                                      \n",
       "0                 79.192308          74.492308                  76.807692   \n",
       "1                 76.308271          81.646617                  83.097744   \n",
       "2                 79.308824          42.176471                  37.937500   \n",
       "\n",
       "        defending_sliding_tackle  \n",
       "kmeans                            \n",
       "0                      73.626923  \n",
       "1                      80.977444  \n",
       "2                      32.345588  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cluster_mean = df_clusters.groupby('kmeans')[numeric_features].mean()\n",
    "df_cluster_mean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:14.997696Z",
     "start_time": "2020-10-13T02:30:10.271080Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1656x7200 with 35 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure(figsize=(23,100))\n",
    "columns = 3 \n",
    "rows = 30\n",
    "i = 1\n",
    "for skill in numeric_features:\n",
    "    fig.add_subplot(rows, columns, i)\n",
    "    sns.barplot(x=df_cluster_mean.index, y=df_cluster_mean[skill].values, color='steelblue').set_title(skill+' promedio por kmean')\n",
    "    i = i + 1\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5- Embeddings y técnicas de clustering"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### 5.1 Otras técnicas: Gaussian Mixture y DBscan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:15.088473Z",
     "start_time": "2020-10-13T02:30:14.999409Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.mixture import GaussianMixture\n",
    "\n",
    "clf = GaussianMixture(n_components=3, covariance_type='full')\n",
    "clf.fit(df_over)\n",
    "clf_pred = clf.predict(df_over)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:30:15.170116Z",
     "start_time": "2020-10-13T02:30:15.090359Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": false
       },
       "data": [
        {
         "marker": {
          "color": [
           0,
           0,
           0,
           0,
           0,
           2,
           1,
           0,
           0,
           2,
           0,
           1,
           2,
           0,
           2,
           0,
           0,
           1,
           0,
           0,
           1,
           0,
           0,
           2,
           0,
           0,
           2,
           1,
           0,
           0,
           0,
           2,
           0,
           1,
           0,
           1,
           2,
           0,
           2,
           0,
           2,
           2,
           1,
           1,
           0,
           0,
           2,
           2,
           1,
           2,
           1,
           0,
           0,
           1,
           1,
           0,
           2,
           0,
           1,
           0,
           0,
           0,
           2,
           1,
           2,
           2,
           1,
           1,
           1,
           1,
           1,
           2,
           2,
           1,
           0,
           2,
           1,
           0,
           2,
           0,
           0,
           0,
           0,
           1,
           0,
           1,
           1,
           1,
           0,
           1,
           0,
           1,
           0,
           0,
           0,
           1,
           1,
           2,
           1,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           1,
           2,
           0,
           2,
           1,
           1,
           2,
           2,
           0,
           2,
           0,
           1,
           0,
           0,
           1,
           2,
           1,
           0,
           1,
           1,
           1,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           2,
           1,
           2,
           1,
           1,
           0,
           0,
           0,
           0,
           2,
           1,
           0,
           0,
           2,
           0,
           2,
           1,
           1,
           0,
           0,
           2,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           2,
           0,
           2,
           0,
           2,
           0,
           0,
           0,
           1,
           2,
           2,
           0,
           0,
           2,
           0,
           2,
           1,
           1,
           0,
           1,
           2,
           0,
           1,
           0,
           1,
           1,
           1,
           2,
           1,
           1,
           1,
           0,
           1,
           0,
           2,
           1,
           0,
           0,
           2,
           0,
           0,
           0,
           0,
           1,
           0,
           1,
           1,
           1,
           2,
           0,
           1,
           2,
           0,
           0,
           0,
           0,
           1,
           1,
           2,
           0,
           2,
           2,
           1,
           1,
           0,
           0,
           1,
           0,
           1,
           1,
           0,
           2,
           2,
           1,
           2,
           0,
           0,
           0,
           0,
           0,
           1,
           0,
           1,
           1,
           1,
           1,
           0,
           0,
           2,
           0,
           2,
           0,
           0,
           0,
           2,
           0,
           0,
           0,
           0,
           1,
           0,
           0,
           0,
           1,
           0,
           1,
           2,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           2,
           1,
           2,
           0,
           0,
           1,
           1,
           2,
           1,
           2,
           1,
           1,
           1,
           1,
           0,
           1,
           1,
           0,
           1,
           0,
           1,
           0,
           1,
           1,
           2,
           0,
           0,
           0,
           2,
           1,
           0,
           1,
           2,
           1,
           0,
           0,
           1,
           0,
           0,
           0,
           1,
           1,
           0,
           0,
           1,
           0,
           2,
           2,
           1,
           2,
           1,
           1,
           0,
           0,
           1,
           2,
           1,
           1,
           1,
           0,
           0,
           2,
           2,
           1,
           1,
           0,
           1,
           1,
           0,
           0,
           0,
           1,
           0,
           0,
           2,
           0,
           0,
           0,
           0,
           1,
           2,
           2,
           1,
           2,
           0,
           2,
           1,
           0,
           0,
           1,
           1,
           1,
           2,
           1,
           1,
           0,
           0,
           0,
           0,
           1,
           1,
           1,
           0,
           1,
           2,
           1,
           2,
           2,
           1,
           0,
           2,
           0,
           2,
           0,
           1,
           1,
           1,
           2,
           0,
           1,
           2,
           0,
           0,
           0,
           2,
           0,
           0,
           0,
           2,
           1,
           2,
           2,
           1,
           0,
           2,
           1,
           1,
           2,
           2,
           1,
           1,
           1,
           0,
           1,
           1,
           0,
           0,
           0,
           2,
           0,
           0,
           2,
           0,
           2,
           1,
           0,
           1,
           2,
           1,
           0,
           0,
           1,
           0,
           2,
           2,
           1,
           1,
           2,
           1,
           2,
           0,
           0,
           0,
           1,
           2,
           1,
           0,
           0,
           2,
           1,
           0,
           1,
           2,
           2,
           0,
           2,
           0,
           0,
           0,
           2,
           0,
           0,
           2,
           0,
           0,
           0,
           1,
           1,
           2,
           0,
           1,
           0,
           0,
           0,
           2,
           1,
           0,
           0,
           0,
           1,
           1,
           1,
           1,
           0,
           1,
           0,
           1,
           2,
           1,
           1,
           1,
           0,
           0,
           1,
           0,
           0,
           2,
           0,
           1,
           1,
           1,
           1,
           2,
           0,
           0,
           1,
           1,
           2,
           2,
           1,
           2,
           2,
           0,
           1,
           0,
           1,
           1,
           1,
           0,
           0,
           2,
           0,
           1,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           2,
           0,
           1,
           1,
           1,
           1,
           1,
           2,
           0,
           2,
           2,
           2,
           0,
           1,
           1,
           1,
           0,
           0,
           0,
           1,
           2,
           2,
           2,
           1,
           2,
           1,
           1,
           0,
           2,
           0,
           1,
           2,
           0,
           0,
           2,
           2,
           1,
           1,
           1,
           2,
           1,
           1,
           0,
           2,
           1,
           0,
           0,
           0,
           0,
           2,
           1,
           0,
           1,
           2,
           2,
           0,
           2,
           1,
           1,
           2,
           1,
           1,
           1,
           0,
           1,
           0,
           1,
           1,
           1,
           0,
           0,
           2,
           1,
           2,
           0,
           0,
           1,
           0,
           1,
           0,
           0,
           1,
           1,
           0,
           0,
           2,
           0,
           0,
           0,
           1,
           1,
           2,
           0,
           0,
           0,
           1,
           1,
           1,
           2,
           0,
           1,
           0,
           1,
           1,
           1,
           0,
           0,
           0,
           1,
           1,
           1,
           0,
           0,
           2,
           2,
           1,
           0,
           0,
           1,
           1,
           2,
           1,
           0,
           2,
           1,
           0
          ],
          "colorscale": [
           [
            0,
            "rgb(12,51,131)"
           ],
           [
            0.25,
            "rgb(10,136,186)"
           ],
           [
            0.5,
            "rgb(242,211,56)"
           ],
           [
            0.75,
            "rgb(242,143,56)"
           ],
           [
            1,
            "rgb(217,30,30)"
           ]
          ],
          "showscale": false,
          "size": 5
         },
         "mode": "markers",
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette",
          "M. de Ligt",
          "F. de Jong",
          "R. Varane",
          "N. Süle",
          "S. Milinković-Savić",
          "Rodri",
          "Saúl",
          "Fabinho",
          "A. Robertson",
          "J. Giménez",
          "C. Lenglet",
          "Bruno Fernandes",
          "R. Lukaku",
          "K. Manolas",
          "D. Alaba",
          "M. Icardi",
          "Carvajal",
          "H. Ziyech",
          "Z. Ibrahimović",
          "A. Gómez",
          "G. Higuaín",
          "B. Matuidi",
          "G. Bale",
          "Marcelo",
          "A. Witsel",
          "Alex Sandro",
          "Iago Aspas",
          "Koke",
          "J. Rodríguez",
          "Allan",
          "J. Sancho",
          "K. Havertz",
          "O. Dembélé",
          "João Cancelo",
          "D. Alli",
          "L. Hernández",
          "Arthur",
          "M. Depay",
          "L. Goretzka",
          "J. Brandt",
          "K. Coman",
          "S. Gnabry",
          "N. Fekir",
          "Luis Alberto",
          "Alex Telles",
          "S. de Vrij",
          "Felipe Anderson",
          "Pepe",
          "João Moutinho",
          "M. Hamšík",
          "Sokratis",
          "Lucas Leiva",
          "M. Özil",
          "Javi Martínez",
          "E. Džeko",
          "G. Wijnaldum",
          "I. Perišić",
          "M. Mandžukić",
          "A. Vidal",
          "J. Boateng",
          "Azpilicueta",
          "José Callejón",
          "I. Gündoğan",
          "Paulinho",
          "K. Walker",
          "Canales",
          "Douglas Costa",
          "Pizzi",
          "D. Tadić",
          "J. Iličić",
          "R. Mahrez",
          "E. Višća",
          "Felipe",
          "Fabián",
          "A. Romagnoli",
          "G. Lo Celso",
          "T. Alexander-Arnold",
          "L. Jović",
          "A. Milik",
          "A. Martial",
          "Anderson Talisca",
          "J. Tah",
          "C. Tolisso",
          "Gonçalo Guedes",
          "N. Pépé",
          "M. Akanji",
          "M. Rashford",
          "J. Stones",
          "A. Rabiot",
          "Grimaldo",
          "T. Werner",
          "T. Lemar",
          "D. Sánchez",
          "Marco Asensio",
          "L. Digne",
          "J. Draxler",
          "Y. Carrasco",
          "Borja Iglesias",
          "W. Zaha",
          "Paco Alcácer",
          "Morata",
          "S. Haller",
          "William Carvalho",
          "F. Bernardeschi",
          "D. Djené",
          "Oscar",
          "Bartra",
          "Pablo Sarabia",
          "Lucas Moura",
          "F. Thauvin",
          "Jorginho",
          "V. Kompany",
          "Raúl Albiol",
          "F. Quagliarella",
          "Falcao",
          "Miranda",
          "C. Vela",
          "E. Garay",
          "R. Nainggolan",
          "E. Banega",
          "Diego Costa",
          "S. Khedira",
          "David Luiz",
          "M. Kruse",
          "J. Henderson",
          "G. Sigurðsson",
          "A. Ramsey",
          "Illarramendi",
          "D. Blind",
          "N. Otamendi",
          "J. Cuadrado",
          "I. Gueye",
          "K. Kampl",
          "Rodrigo",
          "C. Aránguiz",
          "W. Ben Yedder",
          "F. Acerbi",
          "Danilo Pereira",
          "A. Kramarić",
          "Louri Beretta",
          "Josué Chiamulera",
          "Ronaldo Cabrais",
          "Oyarzabal",
          "L. Bailey",
          "Gabriel Jesus",
          "M. Kovačić",
          "A. Belotti",
          "N. Keïta",
          "L. Torreira",
          "Rúben Neves",
          "P. Kimpembe",
          "S. Bergwijn",
          "Nélson Semedo",
          "D. Rugani",
          "A. Correa",
          "Iñaki Williams",
          "H. Lozano",
          "Gelson Martins",
          "T. Partey",
          "K. Demirbay",
          "J. Matip",
          "Suso",
          "S. Savić",
          "A. Rüdiger",
          "Ricardo Pereira",
          "N. Tagliafico",
          "Muniain",
          "M. Götze",
          "T. Delaney",
          "Willian José",
          "Sergi Roberto",
          "N. Schulz",
          "K. Volland",
          "Nacho Fernández",
          "Gabriel Paulista",
          "J. Roussillon",
          "H. Maguire",
          "T. Hazard",
          "E. Forsberg",
          "F. Kostić",
          "M. Politano",
          "Rafa",
          "D. De Rossi",
          "Aduriz",
          "Jesús Navas",
          "Santi Cazorla",
          "H. Herrera",
          "L. Biglia",
          "Juan Mata",
          "O. Giroud",
          "S. Kjær",
          "Willian",
          "V. Ćorluka",
          "M. Arnautović",
          "A. Sánchez",
          "Giuliano",
          "A. Kolarov",
          "M. Balotelli",
          "Marlos",
          "Taison",
          "B. Dost",
          "G. Bonaventura",
          "Pedro",
          "L. de Jong",
          "S. El Shaarawy",
          "Ander Herrera",
          "X. Shaqiri",
          "Mário Fernandes",
          "S. Coates",
          "C. Bakambu",
          "T. Meunier",
          "K. Bellarabi",
          "J. Lingard",
          "Q. Promes",
          "J. Vardy",
          "D. Zapata",
          "Morales",
          "Juiano Mestres",
          "Rosberto Dourado",
          "E. Schetino",
          "J. Sildero",
          "L. Martínez",
          "H. Aouar",
          "T. Ndombele",
          "Éder Militão",
          "D. van de Beek",
          "V. Lindelöf",
          "Dani Ceballos",
          "Pablo Fornals",
          "E. Can",
          "Gayà",
          "David Neres",
          "P. Zieliński",
          "G. Xhaka",
          "Rafinha",
          "G. Kondogbia",
          "M. Sabitzer",
          "L. Shaw",
          "J. Martínez",
          "A. Doucouré",
          "W. Ndidi",
          "W. Orban",
          "A. Plea",
          "Y. Poulsen",
          "R. Fraser",
          "M. Ginter",
          "R. Guerreiro",
          "João Mário",
          "Thiago Mendes",
          "A. Izzo",
          "M. Brozović",
          "A. Ljajić",
          "J. Corona",
          "L. Milivojević",
          "Gerard Moreno",
          "W. Weghorst",
          "Quaresma",
          "J. Mathieu",
          "J. Milner",
          "L. López",
          "B. Gomis",
          "M. Dembélé",
          "Cesc Fàbregas",
          "L. Koscielny",
          "Jardel",
          "Renato Augusto",
          "José Fonte",
          "A. Guardado",
          "L. Piszczek",
          "K. Gameiro",
          "D. Payet",
          "Beñat",
          "B. Höwedes",
          "M. Sissoko",
          "M. Parolo",
          "Fernando",
          "N. Gaitán",
          "S. Giovinco",
          "Luiz Gustavo",
          "N. Nkoulou",
          "N. Matić",
          "Marcos Alonso",
          "H. Mkhitaryan",
          "André Almeida",
          "A. Florenzi",
          "E. Zahavi",
          "F. Vázquez",
          "Lucas Vázquez",
          "Dani García",
          "M. Acuña",
          "Laure Santeiro",
          "J. Frendado",
          "S. Ardero",
          "L. Dálves",
          "S. Mandíquez",
          "João Félix",
          "N. Barella",
          "J. Gomez",
          "A. Christensen",
          "Y. Tielemans",
          "Mario Hermoso",
          "Carlos Soler",
          "M. Caldara",
          "H. Winks",
          "K. Piątek",
          "Diogo Jota",
          "Marcos Llorente",
          "F. Mendy",
          "Melendo",
          "Rúben Dias",
          "Héctor Bellerín",
          "B. Mendy",
          "M. Dembélé",
          "Santi Mina",
          "Rony Lopes",
          "J. Correa",
          "T. Bakayoko",
          "M. Eggestein",
          "Odriozola",
          "M. Gómez",
          "Sergi Darder",
          "K. Zouma",
          "L. Paredes",
          "N. Aké",
          "E. Hysaj",
          "André Gomes",
          "K. Baldé",
          "J. Weigl",
          "V. Rongier",
          "Yeray",
          "Loren",
          "R. Rodríguez",
          "A. Oxlade-Chamberlain",
          "Campaña",
          "A. Mandi",
          "Deulofeu",
          "Bernat",
          "M. Keane",
          "J. Quintero",
          "Samu Castillejo",
          "A. Rebić",
          "E. Bailly",
          "M. Almirón",
          "M. Lazzari",
          "M. Lanzini",
          "Sergi Gómez",
          "H. Vanaken",
          "M. Hinteregger",
          "M. Nastasić",
          "Gabriel",
          "C. Wilson",
          "J. Guilavogui",
          "D. Klaassen",
          "P. Kadeřábek",
          "C. Kramer",
          "Iñigo Martínez",
          "Portu",
          "Manu Trigueros",
          "H. Çalhanoğlu",
          "M. Dabbur",
          "M. Halstenberg",
          "M. Vecino",
          "Joaquín",
          "W. Rooney",
          "Nani",
          "J. Mascherano",
          "A. Gignac",
          "Jorge Molina",
          "L. Perrin",
          "Charles",
          "S. Radu",
          "D. Rose",
          "E. Lamela",
          "Raúl García",
          "Naldo",
          "D. Wass",
          "Pedro León",
          "I. Piatti",
          "M. Díaz",
          "M. Valbuena",
          "L. Bender",
          "S. Bender",
          "E. Capoue",
          "Antunes",
          "F. Fazio",
          "M. Hasebe",
          "Sidnei",
          "D. Perotti",
          "L. Pratto",
          "S. Feghouli",
          "K. Trippier",
          "M. Musacchio",
          "Y. M'Vila",
          "L. Stindl",
          "F. Smolov",
          "S. Nzonzi",
          "F. Coquelin",
          "Hulk",
          "K. Strootman",
          "C. Smalling",
          "K. Glik",
          "E. Salvio",
          "K. Vogt",
          "R. Pereyra",
          "Y. Belhanda",
          "Sergi Enrich",
          "D. Lovren",
          "S. Verdi",
          "L. Muriel",
          "D. Vida",
          "Ibai Gómez",
          "S. Berghuis",
          "Cristian Tello",
          "Ismaily",
          "F. Ghoulam",
          "S. Sané",
          "S. Zaza",
          "S. Vrsaljko",
          "Pozuelo",
          "R. Jiménez",
          "Bernard",
          "T. Stepanenko",
          "I. Marcone",
          "Jony",
          "Mata",
          "M. Marega",
          "Everton Andrão",
          "Welington Dano",
          "M. Baldona",
          "M. Nérez",
          "Vinícius Jr.",
          "R. Bentancur",
          "Lucas Paquetá",
          "A. Wan-Bissaka",
          "I. Konaté",
          "Merino",
          "S. Berge",
          "L. Pellegrini",
          "F. Chiesa",
          "Dani Olmo",
          "R. Zobnin",
          "A. Saint-Maximin",
          "C. Pavón",
          "T. Kehrer",
          "C. Pulisic",
          "F. Kessié",
          "A. Hakimi",
          "D. Samassékou",
          "Marc Roca",
          "D. Zagadou",
          "V. Tsygankov",
          "De Tomás",
          "R. Loftus-Cheek",
          "S. Lobotka",
          "J. Denayer",
          "L. Klostermann",
          "A. Golovin",
          "A. Diallo",
          "B. Pavard",
          "M. Rashica",
          "B. Chilwell",
          "Wesley",
          "T. Souček",
          "Junior Firpo",
          "J. Ward-Prowse",
          "A. Januzaj",
          "Otávio",
          "N. Stark",
          "A. Iwobi",
          "J. Gbamin",
          "Munir",
          "Angeliño",
          "J. Maddison",
          "André Silva",
          "Richarlison",
          "S. Nakajima",
          "Raphinha",
          "E. Dier",
          "L. Trossard",
          "Jonny",
          "M. Sanson",
          "J. Lerma",
          "L. Dubois",
          "F. Grillitsch",
          "L. Cabrera",
          "R. Barkley",
          "J. Murillo",
          "J. Tarkowski",
          "J. Brooks",
          "M. Batshuayi",
          "M. Arnold",
          "S. Kolašinac",
          "F. Schär",
          "Ricardo Horta",
          "L. Alario",
          "Mariano",
          "R. Aguilar",
          "F. Balbuena",
          "S. Mustafi",
          "G. Pezzella",
          "D. da Costa",
          "W. Boly",
          "B. Davies",
          "Fred",
          "M. Samatta",
          "Diego Carlos",
          "K. Toko-Ekambi",
          "R. Malinovskyi",
          "M. Sakho",
          "J. King",
          "H. Seferović",
          "Laguardia",
          "P. Jones",
          "S. Aurier",
          "L. Spinazzola",
          "K. Lala",
          "S. Arias",
          "D. Baselli",
          "T. Savanier",
          "Leo Baptistao",
          "J. Veltman",
          "D. Zappacosta",
          "Wu Lei",
          "David Villa",
          "B. Yılmaz",
          "S. Kalou",
          "Dante",
          "M. Debuchy",
          "E. Lavezzi",
          "Borja Valero",
          "M. Škrtel",
          "J. Evans",
          "D. Valeri",
          "N. Moisander",
          "D. Criscito",
          "A. Candreva",
          "Marcano",
          "K. Boateng",
          "A. Fernández",
          "Nacho Monreal",
          "Ángel",
          "Granero",
          "Éder",
          "R. Vormer",
          "S. Coleman",
          "A. Lallana",
          "A. Modeste",
          "M. Gradel",
          "Yuri Berchiche",
          "Mariano",
          "O. Toprak",
          "N. Kalinić",
          "C. Stuani",
          "K. Asamoah",
          "Alex Teixeira",
          "S. Lulić",
          "S. Rondón",
          "S. Kagawa",
          "J. Wilshere",
          "Cote",
          "Iago Falqué",
          "J. Pastore",
          "Maicon",
          "F. Orellana",
          "Elkeson",
          "Kike García",
          "Escudero",
          "Mario Gaspar",
          "Víctor Ruiz",
          "I. Belfodil",
          "A. Yarmolenko",
          "W. Khazri",
          "E. Pérez",
          "D. Caligiuri",
          "Danilo",
          "N. Pallois",
          "Vitolo",
          "M. Badelj",
          "Zé Luís",
          "D. Suárez",
          "Roque Mesa",
          "Mário Rui",
          "T. Inui",
          "D. Cheryshev",
          "C. Bacca",
          "A. Samaris",
          "J. Hector",
          "Rubén Peña",
          "A. Hamdallah",
          "D. Benedetto",
          "L. Sigali",
          "Raúl",
          "Petros",
          "Dyego Sousa",
          "Soares",
          "Rubén Alcaraz",
          "Maikel Catarino",
          "Antônio Chiamuloira",
          "Melvin Parrela",
          "Luimo Boas Santos",
          "D. Lenzado",
          "E. Riquero",
          "E. Aguerro"
         ],
         "type": "scatter",
         "x": [
          95,
          94,
          87,
          84,
          82,
          52,
          72,
          90,
          89,
          22,
          94,
          65,
          33,
          93,
          63,
          91,
          88,
          67,
          89,
          80,
          75,
          83,
          77,
          65,
          72,
          88,
          42,
          75,
          87,
          89,
          87,
          45,
          78,
          64,
          86,
          69,
          40,
          84,
          56,
          86,
          55,
          45,
          73,
          69,
          77,
          81,
          33,
          42,
          60,
          51,
          66,
          79,
          85,
          78,
          56,
          76,
          48,
          77,
          80,
          87,
          87,
          87,
          50,
          64,
          40,
          22,
          80,
          64,
          78,
          66,
          57,
          37,
          39,
          77,
          84,
          25,
          63,
          89,
          41,
          73,
          86,
          79,
          88,
          60,
          84,
          73,
          71,
          55,
          88,
          72,
          83,
          74,
          78,
          81,
          79,
          58,
          82,
          53,
          69,
          78,
          76,
          79,
          76,
          81,
          82,
          77,
          65,
          25,
          74,
          46,
          73,
          74,
          44,
          62,
          73,
          43,
          88,
          70,
          79,
          85,
          75,
          34,
          46,
          78,
          71,
          81,
          51,
          80,
          64,
          76,
          83,
          81,
          77,
          80,
          39,
          79,
          30,
          80,
          56,
          86,
          88,
          82,
          80,
          20,
          75,
          77,
          82,
          36,
          81,
          29,
          69,
          50,
          86,
          75,
          40,
          78,
          60,
          76,
          80,
          86,
          78,
          86,
          81,
          85,
          52,
          68,
          29,
          76,
          55,
          78,
          82,
          80,
          57,
          45,
          27,
          89,
          86,
          43,
          85,
          51,
          75,
          68,
          85,
          68,
          55,
          84,
          67,
          78,
          75,
          72,
          62,
          54,
          64,
          50,
          63,
          80,
          66,
          88,
          37,
          60,
          86,
          85,
          38,
          74,
          86,
          75,
          84,
          61,
          88,
          74,
          61,
          64,
          31,
          74,
          50,
          33,
          82,
          83,
          76,
          70,
          68,
          74,
          36,
          70,
          34,
          32,
          62,
          58,
          76,
          78,
          72,
          84,
          63,
          48,
          84,
          32,
          42,
          63,
          48,
          76,
          70,
          74,
          76,
          73,
          50,
          83,
          66,
          70,
          72,
          50,
          74,
          83,
          55,
          77,
          44,
          78,
          76,
          77,
          60,
          83,
          79,
          76,
          86,
          70,
          78,
          82,
          80,
          71,
          71,
          56,
          42,
          84,
          72,
          73,
          77,
          80,
          85,
          87,
          83,
          56,
          53,
          38,
          74,
          82,
          74,
          59,
          48,
          77,
          42,
          68,
          77,
          60,
          61,
          76,
          68,
          53,
          73,
          69,
          79,
          44,
          84,
          73,
          50,
          40,
          82,
          80,
          75,
          55,
          73,
          64,
          63,
          19,
          69,
          70,
          72,
          55,
          80,
          84,
          67,
          52,
          62,
          86,
          84,
          64,
          71,
          37,
          38,
          65,
          40,
          64,
          64,
          80,
          76,
          65,
          51,
          65,
          70,
          54,
          71,
          78,
          48,
          33,
          59,
          68,
          74,
          58,
          70,
          86,
          77,
          72,
          69,
          66,
          72,
          56,
          72,
          82,
          83,
          79,
          63,
          26,
          36,
          73,
          42,
          74,
          36,
          55,
          86,
          77,
          39,
          63,
          74,
          29,
          52,
          33,
          81,
          82,
          77,
          77,
          37,
          62,
          45,
          84,
          61,
          47,
          55,
          48,
          47,
          67,
          78,
          41,
          71,
          41,
          81,
          59,
          69,
          73,
          41,
          74,
          60,
          50,
          74,
          75,
          79,
          33,
          73,
          67,
          70,
          35,
          75,
          48,
          30,
          67,
          83,
          49,
          77,
          28,
          46,
          42,
          81,
          69,
          65,
          83,
          59,
          61,
          80,
          80,
          68,
          42,
          83,
          85,
          55,
          81,
          55,
          57,
          74,
          82,
          53,
          75,
          76,
          81,
          55,
          74,
          59,
          39,
          69,
          56,
          41,
          45,
          51,
          66,
          78,
          68,
          48,
          40,
          56,
          79,
          82,
          50,
          62,
          81,
          68,
          54,
          27,
          74,
          50,
          74,
          74,
          82,
          33,
          67,
          78,
          41,
          79,
          75,
          76,
          60,
          54,
          37,
          79,
          44,
          71,
          80,
          69,
          53,
          48,
          70,
          84,
          80,
          58,
          51,
          58,
          51,
          68,
          52,
          75,
          44,
          21,
          74,
          34,
          60,
          70,
          75,
          65,
          69,
          72,
          37,
          68,
          64,
          59,
          42,
          59,
          26,
          75,
          81,
          66,
          64,
          42,
          59,
          69,
          38,
          37,
          78,
          43,
          74,
          67,
          66,
          69,
          79,
          67,
          50,
          66,
          40,
          78,
          57,
          69,
          80,
          81,
          72,
          70,
          52,
          80,
          48,
          73,
          56,
          53,
          58,
          23,
          68,
          37,
          40,
          39,
          81,
          77,
          57,
          60,
          76,
          84,
          79,
          49,
          31,
          58,
          48,
          39,
          32,
          58,
          72,
          83,
          26,
          81,
          70,
          23,
          81,
          78,
          49,
          44,
          54,
          60,
          46,
          51,
          67,
          66,
          74,
          50,
          59,
          78,
          83,
          82,
          83,
          47,
          63,
          80,
          67,
          35,
          28,
          78,
          39,
          56,
          73,
          43,
          77,
          69,
          55,
          80,
          73,
          78,
          72,
          61,
          70,
          80,
          80,
          56,
          54,
          28,
          82,
          80,
          55,
          77,
          66,
          78,
          75,
          63,
          46,
          75,
          70,
          40,
          78,
          75,
          78,
          56,
          68,
          37,
          80,
          77,
          79,
          68,
          72,
          61,
          44,
          76,
          54,
          74,
          59,
          65,
          27,
          72,
          78,
          80,
          59,
          55,
          71,
          84,
          81,
          45,
          50,
          65,
          83,
          77,
          66,
          48,
          51,
          68,
          79,
          51,
          53,
          79
         ],
         "y": [
          26,
          24,
          29,
          22,
          51,
          85,
          71,
          41,
          32,
          87,
          38,
          85,
          89,
          24,
          90,
          38,
          19,
          80,
          49,
          40,
          65,
          47,
          22,
          87,
          29,
          39,
          87,
          62,
          45,
          36,
          38,
          88,
          40,
          86,
          33,
          80,
          85,
          18,
          88,
          40,
          86,
          86,
          84,
          71,
          22,
          35,
          87,
          83,
          83,
          85,
          79,
          51,
          42,
          72,
          70,
          52,
          80,
          47,
          65,
          46,
          32,
          30,
          80,
          77,
          85,
          87,
          72,
          78,
          77,
          85,
          80,
          86,
          81,
          57,
          30,
          89,
          80,
          20,
          85,
          40,
          24,
          34,
          18,
          86,
          52,
          82,
          83,
          84,
          18,
          64,
          44,
          86,
          34,
          38,
          33,
          80,
          63,
          86,
          70,
          20,
          73,
          29,
          21,
          45,
          25,
          41,
          79,
          84,
          46,
          82,
          67,
          62,
          86,
          81,
          19,
          85,
          16,
          69,
          54,
          60,
          88,
          86,
          86,
          32,
          67,
          75,
          83,
          43,
          34,
          52,
          26,
          26,
          22,
          40,
          80,
          75,
          82,
          62,
          79,
          16,
          32,
          36,
          42,
          84,
          71,
          30,
          25,
          80,
          33,
          82,
          75,
          79,
          19,
          63,
          86,
          39,
          84,
          44,
          26,
          18,
          28,
          22,
          20,
          55,
          72,
          50,
          82,
          47,
          82,
          49,
          44,
          31,
          70,
          81,
          85,
          15,
          19,
          83,
          14,
          83,
          90,
          78,
          30,
          74,
          81,
          29,
          76,
          55,
          68,
          80,
          79,
          83,
          74,
          83,
          59,
          40,
          72,
          26,
          85,
          71,
          26,
          24,
          82,
          33,
          30,
          18,
          19,
          63,
          32,
          62,
          77,
          69,
          81,
          26,
          80,
          82,
          44,
          31,
          29,
          36,
          81,
          54,
          79,
          18,
          83,
          82,
          78,
          79,
          38,
          57,
          88,
          30,
          78,
          78,
          33,
          84,
          82,
          80,
          79,
          46,
          17,
          68,
          29,
          39,
          80,
          49,
          69,
          58,
          67,
          74,
          21,
          20,
          79,
          51,
          82,
          39,
          35,
          38,
          81,
          20,
          42,
          40,
          26,
          68,
          31,
          37,
          25,
          79,
          48,
          84,
          85,
          21,
          79,
          33,
          49,
          36,
          53,
          22,
          45,
          84,
          80,
          76,
          33,
          25,
          63,
          69,
          80,
          67,
          79,
          74,
          73,
          80,
          82,
          32,
          71,
          69,
          66,
          81,
          53,
          79,
          15,
          76,
          83,
          80,
          30,
          33,
          42,
          77,
          64,
          62,
          76,
          82,
          77,
          35,
          54,
          73,
          41,
          25,
          11,
          83,
          79,
          34,
          35,
          70,
          58,
          83,
          75,
          64,
          80,
          74,
          78,
          39,
          39,
          65,
          81,
          81,
          82,
          81,
          43,
          28,
          82,
          78,
          75,
          78,
          55,
          80,
          78,
          34,
          48,
          58,
          77,
          75,
          23,
          82,
          23,
          24,
          13,
          35,
          76,
          78,
          82,
          68,
          80,
          56,
          80,
          67,
          24,
          44,
          72,
          77,
          53,
          77,
          80,
          80,
          16,
          49,
          27,
          26,
          82,
          65,
          79,
          23,
          69,
          78,
          75,
          81,
          80,
          67,
          28,
          73,
          71,
          85,
          16,
          78,
          66,
          68,
          82,
          22,
          78,
          82,
          22,
          25,
          25,
          81,
          49,
          46,
          25,
          79,
          53,
          81,
          84,
          73,
          25,
          82,
          65,
          77,
          74,
          84,
          59,
          62,
          56,
          27,
          76,
          73,
          39,
          40,
          20,
          80,
          23,
          19,
          82,
          27,
          84,
          83,
          44,
          63,
          78,
          75,
          36,
          22,
          70,
          34,
          82,
          81,
          77,
          82,
          77,
          80,
          77,
          22,
          55,
          31,
          79,
          80,
          72,
          50,
          24,
          74,
          79,
          28,
          74,
          79,
          77,
          56,
          78,
          70,
          55,
          31,
          84,
          60,
          22,
          83,
          55,
          30,
          42,
          75,
          80,
          77,
          50,
          77,
          36,
          28,
          25,
          77,
          73,
          46,
          29,
          28,
          77,
          81,
          77,
          81,
          18,
          64,
          56,
          86,
          79,
          65,
          67,
          72,
          34,
          44,
          76,
          22,
          33,
          83,
          47,
          74,
          71,
          79,
          74,
          80,
          37,
          20,
          61,
          68,
          81,
          79,
          64,
          81,
          81,
          34,
          81,
          15,
          78,
          76,
          60,
          22,
          27,
          77,
          23,
          71,
          25,
          73,
          34,
          35,
          36,
          36,
          38,
          82,
          18,
          80,
          70,
          79,
          82,
          51,
          82,
          51,
          81,
          79,
          76,
          22,
          66,
          78,
          76,
          35,
          20,
          34,
          79,
          75,
          80,
          78,
          77,
          78,
          80,
          71,
          23,
          75,
          18,
          48,
          78,
          27,
          40,
          76,
          80,
          81,
          78,
          74,
          78,
          63,
          68,
          19,
          78,
          79,
          31,
          38,
          26,
          27,
          80,
          78,
          37,
          62,
          77,
          79,
          30,
          75,
          81,
          53,
          78,
          68,
          64,
          81,
          20,
          62,
          26,
          70,
          80,
          62,
          19,
          35,
          78,
          81,
          81,
          28,
          42,
          80,
          43,
          76,
          18,
          49,
          65,
          82,
          32,
          51,
          76,
          25,
          35,
          21,
          80,
          82,
          82,
          15,
          30,
          30,
          74,
          68,
          79,
          77,
          23,
          76,
          24,
          81,
          76,
          76,
          31,
          55,
          14,
          75,
          77,
          79,
          20,
          25,
          79,
          76,
          78,
          27,
          35,
          76,
          76,
          81,
          77,
          19,
          81,
          77,
          19
         ]
        },
        {
         "mode": "text",
         "name": "Top players",
         "opacity": 0.9,
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette"
         ],
         "textfont": {
          "color": "black",
          "family": "sans serif",
          "size": 10
         },
         "type": "scatter",
         "x": [
          95,
          94,
          87,
          84,
          82,
          52,
          72,
          90,
          89,
          22,
          94,
          65,
          33,
          93,
          63,
          91,
          88,
          67,
          89,
          80,
          75,
          83,
          77,
          65,
          72,
          88,
          42,
          75,
          87,
          89,
          87,
          45,
          78,
          64,
          86,
          69,
          40,
          84,
          56,
          86,
          55,
          45,
          73,
          69,
          77,
          81,
          33,
          42,
          60,
          51,
          66,
          79,
          85,
          78,
          56,
          76,
          48,
          77,
          80,
          87,
          87,
          87
         ],
         "y": [
          26,
          24,
          29,
          22,
          51,
          85,
          71,
          41,
          32,
          87,
          38,
          85,
          89,
          24,
          90,
          38,
          19,
          80,
          49,
          40,
          65,
          47,
          22,
          87,
          29,
          39,
          87,
          62,
          45,
          36,
          38,
          88,
          40,
          86,
          33,
          80,
          85,
          18,
          88,
          40,
          86,
          86,
          84,
          71,
          22,
          35,
          87,
          83,
          83,
          85,
          79,
          51,
          42,
          72,
          70,
          52,
          80,
          47,
          65,
          46,
          32,
          30
         ]
        }
       ],
       "layout": {
        "autosize": false,
        "height": 1000,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 20
         },
         "text": "Gaussian Mixture"
        },
        "width": 1000,
        "xaxis": {
         "title": {
          "text": "attacking_finishing"
         }
        },
        "yaxis": {
         "title": {
          "text": "defending_sliding_tackle"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"89ceefef-fca9-48fa-ae4f-c63e882ca23b\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"89ceefef-fca9-48fa-ae4f-c63e882ca23b\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        '89ceefef-fca9-48fa-ae4f-c63e882ca23b',\n",
       "                        [{\"marker\": {\"color\": [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 0.0, 2.0, 0.0, 1.0, 2.0, 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 1.0, 0.0, 1.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 2.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 0.0, 2.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 2.0, 1.0, 1.0, 2.0, 2.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0, 2.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 0.0, 2.0, 0.0, 2.0, 1.0, 1.0, 0.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 0.0, 0.0, 2.0, 0.0, 2.0, 1.0, 1.0, 0.0, 1.0, 2.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 0.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 2.0, 2.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 2.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 1.0, 2.0, 0.0, 2.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0, 1.0, 1.0, 2.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 1.0, 2.0, 2.0, 1.0, 0.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 2.0, 1.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 2.0, 1.0, 0.0, 1.0, 2.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 2.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.0, 0.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 2.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.0, 2.0, 2.0, 2.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 2.0, 0.0, 1.0, 2.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 1.0, 2.0, 2.0, 0.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 2.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.0, 1.0, 0.0, 2.0, 1.0, 0.0], \"colorscale\": [[0.0, \"rgb(12,51,131)\"], [0.25, \"rgb(10,136,186)\"], [0.5, \"rgb(242,211,56)\"], [0.75, \"rgb(242,143,56)\"], [1.0, \"rgb(217,30,30)\"]], \"showscale\": false, \"size\": 5}, \"mode\": \"markers\", \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\", \"M. de Ligt\", \"F. de Jong\", \"R. Varane\", \"N. S\\u00fcle\", \"S. Milinkovi\\u0107-Savi\\u0107\", \"Rodri\", \"Sa\\u00fal\", \"Fabinho\", \"A. Robertson\", \"J. Gim\\u00e9nez\", \"C. Lenglet\", \"Bruno Fernandes\", \"R. Lukaku\", \"K. Manolas\", \"D. Alaba\", \"M. Icardi\", \"Carvajal\", \"H. Ziyech\", \"Z. Ibrahimovi\\u0107\", \"A. G\\u00f3mez\", \"G. Higua\\u00edn\", \"B. Matuidi\", \"G. Bale\", \"Marcelo\", \"A. Witsel\", \"Alex Sandro\", \"Iago Aspas\", \"Koke\", \"J. Rodr\\u00edguez\", \"Allan\", \"J. Sancho\", \"K. Havertz\", \"O. Demb\\u00e9l\\u00e9\", \"Jo\\u00e3o Cancelo\", \"D. Alli\", \"L. Hern\\u00e1ndez\", \"Arthur\", \"M. Depay\", \"L. Goretzka\", \"J. Brandt\", \"K. Coman\", \"S. Gnabry\", \"N. Fekir\", \"Luis Alberto\", \"Alex Telles\", \"S. de Vrij\", \"Felipe Anderson\", \"Pepe\", \"Jo\\u00e3o Moutinho\", \"M. Ham\\u0161\\u00edk\", \"Sokratis\", \"Lucas Leiva\", \"M. \\u00d6zil\", \"Javi Mart\\u00ednez\", \"E. D\\u017eeko\", \"G. Wijnaldum\", \"I. Peri\\u0161i\\u0107\", \"M. Mand\\u017euki\\u0107\", \"A. Vidal\", \"J. Boateng\", \"Azpilicueta\", \"Jos\\u00e9 Callej\\u00f3n\", \"I. G\\u00fcndo\\u011fan\", \"Paulinho\", \"K. Walker\", \"Canales\", \"Douglas Costa\", \"Pizzi\", \"D. Tadi\\u0107\", \"J. Ili\\u010di\\u0107\", \"R. Mahrez\", \"E. Vi\\u0161\\u0107a\", \"Felipe\", \"Fabi\\u00e1n\", \"A. Romagnoli\", \"G. Lo Celso\", \"T. Alexander-Arnold\", \"L. Jovi\\u0107\", \"A. Milik\", \"A. Martial\", \"Anderson Talisca\", \"J. Tah\", \"C. Tolisso\", \"Gon\\u00e7alo Guedes\", \"N. P\\u00e9p\\u00e9\", \"M. Akanji\", \"M. Rashford\", \"J. Stones\", \"A. Rabiot\", \"Grimaldo\", \"T. Werner\", \"T. Lemar\", \"D. S\\u00e1nchez\", \"Marco Asensio\", \"L. Digne\", \"J. Draxler\", \"Y. Carrasco\", \"Borja Iglesias\", \"W. Zaha\", \"Paco Alc\\u00e1cer\", \"Morata\", \"S. Haller\", \"William Carvalho\", \"F. Bernardeschi\", \"D. Djen\\u00e9\", \"Oscar\", \"Bartra\", \"Pablo Sarabia\", \"Lucas Moura\", \"F. Thauvin\", \"Jorginho\", \"V. Kompany\", \"Ra\\u00fal Albiol\", \"F. Quagliarella\", \"Falcao\", \"Miranda\", \"C. Vela\", \"E. Garay\", \"R. Nainggolan\", \"E. Banega\", \"Diego Costa\", \"S. Khedira\", \"David Luiz\", \"M. Kruse\", \"J. Henderson\", \"G. Sigur\\u00f0sson\", \"A. Ramsey\", \"Illarramendi\", \"D. Blind\", \"N. Otamendi\", \"J. Cuadrado\", \"I. Gueye\", \"K. Kampl\", \"Rodrigo\", \"C. Ar\\u00e1nguiz\", \"W. Ben Yedder\", \"F. Acerbi\", \"Danilo Pereira\", \"A. Kramari\\u0107\", \"Louri Beretta\", \"Josu\\u00e9 Chiamulera\", \"Ronaldo Cabrais\", \"Oyarzabal\", \"L. Bailey\", \"Gabriel Jesus\", \"M. Kova\\u010di\\u0107\", \"A. Belotti\", \"N. Ke\\u00efta\", \"L. Torreira\", \"R\\u00faben Neves\", \"P. Kimpembe\", \"S. Bergwijn\", \"N\\u00e9lson Semedo\", \"D. Rugani\", \"A. Correa\", \"I\\u00f1aki Williams\", \"H. Lozano\", \"Gelson Martins\", \"T. Partey\", \"K. Demirbay\", \"J. Matip\", \"Suso\", \"S. Savi\\u0107\", \"A. R\\u00fcdiger\", \"Ricardo Pereira\", \"N. Tagliafico\", \"Muniain\", \"M. G\\u00f6tze\", \"T. Delaney\", \"Willian Jos\\u00e9\", \"Sergi Roberto\", \"N. Schulz\", \"K. Volland\", \"Nacho Fern\\u00e1ndez\", \"Gabriel Paulista\", \"J. Roussillon\", \"H. Maguire\", \"T. Hazard\", \"E. Forsberg\", \"F. Kosti\\u0107\", \"M. Politano\", \"Rafa\", \"D. De Rossi\", \"Aduriz\", \"Jes\\u00fas Navas\", \"Santi Cazorla\", \"H. Herrera\", \"L. Biglia\", \"Juan Mata\", \"O. Giroud\", \"S. Kj\\u00e6r\", \"Willian\", \"V. \\u0106orluka\", \"M. Arnautovi\\u0107\", \"A. S\\u00e1nchez\", \"Giuliano\", \"A. Kolarov\", \"M. Balotelli\", \"Marlos\", \"Taison\", \"B. Dost\", \"G. Bonaventura\", \"Pedro\", \"L. de Jong\", \"S. El Shaarawy\", \"Ander Herrera\", \"X. Shaqiri\", \"M\\u00e1rio Fernandes\", \"S. Coates\", \"C. Bakambu\", \"T. Meunier\", \"K. Bellarabi\", \"J. Lingard\", \"Q. Promes\", \"J. Vardy\", \"D. Zapata\", \"Morales\", \"Juiano Mestres\", \"Rosberto Dourado\", \"E. Schetino\", \"J. Sildero\", \"L. Mart\\u00ednez\", \"H. Aouar\", \"T. Ndombele\", \"\\u00c9der Milit\\u00e3o\", \"D. van de Beek\", \"V. Lindel\\u00f6f\", \"Dani Ceballos\", \"Pablo Fornals\", \"E. Can\", \"Gay\\u00e0\", \"David Neres\", \"P. Zieli\\u0144ski\", \"G. Xhaka\", \"Rafinha\", \"G. Kondogbia\", \"M. Sabitzer\", \"L. Shaw\", \"J. Mart\\u00ednez\", \"A. Doucour\\u00e9\", \"W. Ndidi\", \"W. Orban\", \"A. Plea\", \"Y. Poulsen\", \"R. Fraser\", \"M. Ginter\", \"R. Guerreiro\", \"Jo\\u00e3o M\\u00e1rio\", \"Thiago Mendes\", \"A. Izzo\", \"M. Brozovi\\u0107\", \"A. Ljaji\\u0107\", \"J. Corona\", \"L. Milivojevi\\u0107\", \"Gerard Moreno\", \"W. Weghorst\", \"Quaresma\", \"J. Mathieu\", \"J. Milner\", \"L. L\\u00f3pez\", \"B. Gomis\", \"M. Demb\\u00e9l\\u00e9\", \"Cesc F\\u00e0bregas\", \"L. Koscielny\", \"Jardel\", \"Renato Augusto\", \"Jos\\u00e9 Fonte\", \"A. Guardado\", \"L. Piszczek\", \"K. Gameiro\", \"D. Payet\", \"Be\\u00f1at\", \"B. H\\u00f6wedes\", \"M. Sissoko\", \"M. Parolo\", \"Fernando\", \"N. Gait\\u00e1n\", \"S. Giovinco\", \"Luiz Gustavo\", \"N. Nkoulou\", \"N. Mati\\u0107\", \"Marcos Alonso\", \"H. Mkhitaryan\", \"Andr\\u00e9 Almeida\", \"A. Florenzi\", \"E. Zahavi\", \"F. V\\u00e1zquez\", \"Lucas V\\u00e1zquez\", \"Dani Garc\\u00eda\", \"M. Acu\\u00f1a\", \"Laure Santeiro\", \"J. Frendado\", \"S. Ardero\", \"L. D\\u00e1lves\", \"S. Mand\\u00edquez\", \"Jo\\u00e3o F\\u00e9lix\", \"N. Barella\", \"J. Gomez\", \"A. Christensen\", \"Y. Tielemans\", \"Mario Hermoso\", \"Carlos Soler\", \"M. Caldara\", \"H. Winks\", \"K. Pi\\u0105tek\", \"Diogo Jota\", \"Marcos Llorente\", \"F. Mendy\", \"Melendo\", \"R\\u00faben Dias\", \"H\\u00e9ctor Beller\\u00edn\", \"B. Mendy\", \"M. Demb\\u00e9l\\u00e9\", \"Santi Mina\", \"Rony Lopes\", \"J. Correa\", \"T. Bakayoko\", \"M. Eggestein\", \"Odriozola\", \"M. G\\u00f3mez\", \"Sergi Darder\", \"K. Zouma\", \"L. Paredes\", \"N. Ak\\u00e9\", \"E. Hysaj\", \"Andr\\u00e9 Gomes\", \"K. Bald\\u00e9\", \"J. Weigl\", \"V. Rongier\", \"Yeray\", \"Loren\", \"R. Rodr\\u00edguez\", \"A. Oxlade-Chamberlain\", \"Campa\\u00f1a\", \"A. Mandi\", \"Deulofeu\", \"Bernat\", \"M. Keane\", \"J. Quintero\", \"Samu Castillejo\", \"A. Rebi\\u0107\", \"E. Bailly\", \"M. Almir\\u00f3n\", \"M. Lazzari\", \"M. Lanzini\", \"Sergi G\\u00f3mez\", \"H. Vanaken\", \"M. Hinteregger\", \"M. Nastasi\\u0107\", \"Gabriel\", \"C. Wilson\", \"J. Guilavogui\", \"D. Klaassen\", \"P. Kade\\u0159\\u00e1bek\", \"C. Kramer\", \"I\\u00f1igo Mart\\u00ednez\", \"Portu\", \"Manu Trigueros\", \"H. \\u00c7alhano\\u011flu\", \"M. Dabbur\", \"M. Halstenberg\", \"M. Vecino\", \"Joaqu\\u00edn\", \"W. Rooney\", \"Nani\", \"J. Mascherano\", \"A. Gignac\", \"Jorge Molina\", \"L. Perrin\", \"Charles\", \"S. Radu\", \"D. Rose\", \"E. Lamela\", \"Ra\\u00fal Garc\\u00eda\", \"Naldo\", \"D. Wass\", \"Pedro Le\\u00f3n\", \"I. Piatti\", \"M. D\\u00edaz\", \"M. Valbuena\", \"L. Bender\", \"S. Bender\", \"E. Capoue\", \"Antunes\", \"F. Fazio\", \"M. Hasebe\", \"Sidnei\", \"D. Perotti\", \"L. Pratto\", \"S. Feghouli\", \"K. Trippier\", \"M. Musacchio\", \"Y. M'Vila\", \"L. Stindl\", \"F. Smolov\", \"S. Nzonzi\", \"F. Coquelin\", \"Hulk\", \"K. Strootman\", \"C. Smalling\", \"K. Glik\", \"E. Salvio\", \"K. Vogt\", \"R. Pereyra\", \"Y. Belhanda\", \"Sergi Enrich\", \"D. Lovren\", \"S. Verdi\", \"L. Muriel\", \"D. Vida\", \"Ibai G\\u00f3mez\", \"S. Berghuis\", \"Cristian Tello\", \"Ismaily\", \"F. Ghoulam\", \"S. San\\u00e9\", \"S. Zaza\", \"S. Vrsaljko\", \"Pozuelo\", \"R. Jim\\u00e9nez\", \"Bernard\", \"T. Stepanenko\", \"I. Marcone\", \"Jony\", \"Mata\", \"M. Marega\", \"Everton Andr\\u00e3o\", \"Welington Dano\", \"M. Baldona\", \"M. N\\u00e9rez\", \"Vin\\u00edcius Jr.\", \"R. Bentancur\", \"Lucas Paquet\\u00e1\", \"A. Wan-Bissaka\", \"I. Konat\\u00e9\", \"Merino\", \"S. Berge\", \"L. Pellegrini\", \"F. Chiesa\", \"Dani Olmo\", \"R. Zobnin\", \"A. Saint-Maximin\", \"C. Pav\\u00f3n\", \"T. Kehrer\", \"C. Pulisic\", \"F. Kessi\\u00e9\", \"A. Hakimi\", \"D. Samass\\u00e9kou\", \"Marc Roca\", \"D. Zagadou\", \"V. Tsygankov\", \"De Tom\\u00e1s\", \"R. Loftus-Cheek\", \"S. Lobotka\", \"J. Denayer\", \"L. Klostermann\", \"A. Golovin\", \"A. Diallo\", \"B. Pavard\", \"M. Rashica\", \"B. Chilwell\", \"Wesley\", \"T. Sou\\u010dek\", \"Junior Firpo\", \"J. Ward-Prowse\", \"A. Januzaj\", \"Ot\\u00e1vio\", \"N. Stark\", \"A. Iwobi\", \"J. Gbamin\", \"Munir\", \"Angeli\\u00f1o\", \"J. Maddison\", \"Andr\\u00e9 Silva\", \"Richarlison\", \"S. Nakajima\", \"Raphinha\", \"E. Dier\", \"L. Trossard\", \"Jonny\", \"M. Sanson\", \"J. Lerma\", \"L. Dubois\", \"F. Grillitsch\", \"L. Cabrera\", \"R. Barkley\", \"J. Murillo\", \"J. Tarkowski\", \"J. Brooks\", \"M. Batshuayi\", \"M. Arnold\", \"S. Kola\\u0161inac\", \"F. Sch\\u00e4r\", \"Ricardo Horta\", \"L. Alario\", \"Mariano\", \"R. Aguilar\", \"F. Balbuena\", \"S. Mustafi\", \"G. Pezzella\", \"D. da Costa\", \"W. Boly\", \"B. Davies\", \"Fred\", \"M. Samatta\", \"Diego Carlos\", \"K. Toko-Ekambi\", \"R. Malinovskyi\", \"M. Sakho\", \"J. King\", \"H. Seferovi\\u0107\", \"Laguardia\", \"P. Jones\", \"S. Aurier\", \"L. Spinazzola\", \"K. Lala\", \"S. Arias\", \"D. Baselli\", \"T. Savanier\", \"Leo Baptistao\", \"J. Veltman\", \"D. Zappacosta\", \"Wu Lei\", \"David Villa\", \"B. Y\\u0131lmaz\", \"S. Kalou\", \"Dante\", \"M. Debuchy\", \"E. Lavezzi\", \"Borja Valero\", \"M. \\u0160krtel\", \"J. Evans\", \"D. Valeri\", \"N. Moisander\", \"D. Criscito\", \"A. Candreva\", \"Marcano\", \"K. Boateng\", \"A. Fern\\u00e1ndez\", \"Nacho Monreal\", \"\\u00c1ngel\", \"Granero\", \"\\u00c9der\", \"R. Vormer\", \"S. Coleman\", \"A. Lallana\", \"A. Modeste\", \"M. Gradel\", \"Yuri Berchiche\", \"Mariano\", \"O. Toprak\", \"N. Kalini\\u0107\", \"C. Stuani\", \"K. Asamoah\", \"Alex Teixeira\", \"S. Luli\\u0107\", \"S. Rond\\u00f3n\", \"S. Kagawa\", \"J. Wilshere\", \"Cote\", \"Iago Falqu\\u00e9\", \"J. Pastore\", \"Maicon\", \"F. Orellana\", \"Elkeson\", \"Kike Garc\\u00eda\", \"Escudero\", \"Mario Gaspar\", \"V\\u00edctor Ruiz\", \"I. Belfodil\", \"A. Yarmolenko\", \"W. Khazri\", \"E. P\\u00e9rez\", \"D. Caligiuri\", \"Danilo\", \"N. Pallois\", \"Vitolo\", \"M. Badelj\", \"Z\\u00e9 Lu\\u00eds\", \"D. Su\\u00e1rez\", \"Roque Mesa\", \"M\\u00e1rio Rui\", \"T. Inui\", \"D. Cheryshev\", \"C. Bacca\", \"A. Samaris\", \"J. Hector\", \"Rub\\u00e9n Pe\\u00f1a\", \"A. Hamdallah\", \"D. Benedetto\", \"L. Sigali\", \"Ra\\u00fal\", \"Petros\", \"Dyego Sousa\", \"Soares\", \"Rub\\u00e9n Alcaraz\", \"Maikel Catarino\", \"Ant\\u00f4nio Chiamuloira\", \"Melvin Parrela\", \"Luimo Boas Santos\", \"D. Lenzado\", \"E. Riquero\", \"E. Aguerro\"], \"type\": \"scatter\", \"x\": [95, 94, 87, 84, 82, 52, 72, 90, 89, 22, 94, 65, 33, 93, 63, 91, 88, 67, 89, 80, 75, 83, 77, 65, 72, 88, 42, 75, 87, 89, 87, 45, 78, 64, 86, 69, 40, 84, 56, 86, 55, 45, 73, 69, 77, 81, 33, 42, 60, 51, 66, 79, 85, 78, 56, 76, 48, 77, 80, 87, 87, 87, 50, 64, 40, 22, 80, 64, 78, 66, 57, 37, 39, 77, 84, 25, 63, 89, 41, 73, 86, 79, 88, 60, 84, 73, 71, 55, 88, 72, 83, 74, 78, 81, 79, 58, 82, 53, 69, 78, 76, 79, 76, 81, 82, 77, 65, 25, 74, 46, 73, 74, 44, 62, 73, 43, 88, 70, 79, 85, 75, 34, 46, 78, 71, 81, 51, 80, 64, 76, 83, 81, 77, 80, 39, 79, 30, 80, 56, 86, 88, 82, 80, 20, 75, 77, 82, 36, 81, 29, 69, 50, 86, 75, 40, 78, 60, 76, 80, 86, 78, 86, 81, 85, 52, 68, 29, 76, 55, 78, 82, 80, 57, 45, 27, 89, 86, 43, 85, 51, 75, 68, 85, 68, 55, 84, 67, 78, 75, 72, 62, 54, 64, 50, 63, 80, 66, 88, 37, 60, 86, 85, 38, 74, 86, 75, 84, 61, 88, 74, 61, 64, 31, 74, 50, 33, 82, 83, 76, 70, 68, 74, 36, 70, 34, 32, 62, 58, 76, 78, 72, 84, 63, 48, 84, 32, 42, 63, 48, 76, 70, 74, 76, 73, 50, 83, 66, 70, 72, 50, 74, 83, 55, 77, 44, 78, 76, 77, 60, 83, 79, 76, 86, 70, 78, 82, 80, 71, 71, 56, 42, 84, 72, 73, 77, 80, 85, 87, 83, 56, 53, 38, 74, 82, 74, 59, 48, 77, 42, 68, 77, 60, 61, 76, 68, 53, 73, 69, 79, 44, 84, 73, 50, 40, 82, 80, 75, 55, 73, 64, 63, 19, 69, 70, 72, 55, 80, 84, 67, 52, 62, 86, 84, 64, 71, 37, 38, 65, 40, 64, 64, 80, 76, 65, 51, 65, 70, 54, 71, 78, 48, 33, 59, 68, 74, 58, 70, 86, 77, 72, 69, 66, 72, 56, 72, 82, 83, 79, 63, 26, 36, 73, 42, 74, 36, 55, 86, 77, 39, 63, 74, 29, 52, 33, 81, 82, 77, 77, 37, 62, 45, 84, 61, 47, 55, 48, 47, 67, 78, 41, 71, 41, 81, 59, 69, 73, 41, 74, 60, 50, 74, 75, 79, 33, 73, 67, 70, 35, 75, 48, 30, 67, 83, 49, 77, 28, 46, 42, 81, 69, 65, 83, 59, 61, 80, 80, 68, 42, 83, 85, 55, 81, 55, 57, 74, 82, 53, 75, 76, 81, 55, 74, 59, 39, 69, 56, 41, 45, 51, 66, 78, 68, 48, 40, 56, 79, 82, 50, 62, 81, 68, 54, 27, 74, 50, 74, 74, 82, 33, 67, 78, 41, 79, 75, 76, 60, 54, 37, 79, 44, 71, 80, 69, 53, 48, 70, 84, 80, 58, 51, 58, 51, 68, 52, 75, 44, 21, 74, 34, 60, 70, 75, 65, 69, 72, 37, 68, 64, 59, 42, 59, 26, 75, 81, 66, 64, 42, 59, 69, 38, 37, 78, 43, 74, 67, 66, 69, 79, 67, 50, 66, 40, 78, 57, 69, 80, 81, 72, 70, 52, 80, 48, 73, 56, 53, 58, 23, 68, 37, 40, 39, 81, 77, 57, 60, 76, 84, 79, 49, 31, 58, 48, 39, 32, 58, 72, 83, 26, 81, 70, 23, 81, 78, 49, 44, 54, 60, 46, 51, 67, 66, 74, 50, 59, 78, 83, 82, 83, 47, 63, 80, 67, 35, 28, 78, 39, 56, 73, 43, 77, 69, 55, 80, 73, 78, 72, 61, 70, 80, 80, 56, 54, 28, 82, 80, 55, 77, 66, 78, 75, 63, 46, 75, 70, 40, 78, 75, 78, 56, 68, 37, 80, 77, 79, 68, 72, 61, 44, 76, 54, 74, 59, 65, 27, 72, 78, 80, 59, 55, 71, 84, 81, 45, 50, 65, 83, 77, 66, 48, 51, 68, 79, 51, 53, 79], \"y\": [26, 24, 29, 22, 51, 85, 71, 41, 32, 87, 38, 85, 89, 24, 90, 38, 19, 80, 49, 40, 65, 47, 22, 87, 29, 39, 87, 62, 45, 36, 38, 88, 40, 86, 33, 80, 85, 18, 88, 40, 86, 86, 84, 71, 22, 35, 87, 83, 83, 85, 79, 51, 42, 72, 70, 52, 80, 47, 65, 46, 32, 30, 80, 77, 85, 87, 72, 78, 77, 85, 80, 86, 81, 57, 30, 89, 80, 20, 85, 40, 24, 34, 18, 86, 52, 82, 83, 84, 18, 64, 44, 86, 34, 38, 33, 80, 63, 86, 70, 20, 73, 29, 21, 45, 25, 41, 79, 84, 46, 82, 67, 62, 86, 81, 19, 85, 16, 69, 54, 60, 88, 86, 86, 32, 67, 75, 83, 43, 34, 52, 26, 26, 22, 40, 80, 75, 82, 62, 79, 16, 32, 36, 42, 84, 71, 30, 25, 80, 33, 82, 75, 79, 19, 63, 86, 39, 84, 44, 26, 18, 28, 22, 20, 55, 72, 50, 82, 47, 82, 49, 44, 31, 70, 81, 85, 15, 19, 83, 14, 83, 90, 78, 30, 74, 81, 29, 76, 55, 68, 80, 79, 83, 74, 83, 59, 40, 72, 26, 85, 71, 26, 24, 82, 33, 30, 18, 19, 63, 32, 62, 77, 69, 81, 26, 80, 82, 44, 31, 29, 36, 81, 54, 79, 18, 83, 82, 78, 79, 38, 57, 88, 30, 78, 78, 33, 84, 82, 80, 79, 46, 17, 68, 29, 39, 80, 49, 69, 58, 67, 74, 21, 20, 79, 51, 82, 39, 35, 38, 81, 20, 42, 40, 26, 68, 31, 37, 25, 79, 48, 84, 85, 21, 79, 33, 49, 36, 53, 22, 45, 84, 80, 76, 33, 25, 63, 69, 80, 67, 79, 74, 73, 80, 82, 32, 71, 69, 66, 81, 53, 79, 15, 76, 83, 80, 30, 33, 42, 77, 64, 62, 76, 82, 77, 35, 54, 73, 41, 25, 11, 83, 79, 34, 35, 70, 58, 83, 75, 64, 80, 74, 78, 39, 39, 65, 81, 81, 82, 81, 43, 28, 82, 78, 75, 78, 55, 80, 78, 34, 48, 58, 77, 75, 23, 82, 23, 24, 13, 35, 76, 78, 82, 68, 80, 56, 80, 67, 24, 44, 72, 77, 53, 77, 80, 80, 16, 49, 27, 26, 82, 65, 79, 23, 69, 78, 75, 81, 80, 67, 28, 73, 71, 85, 16, 78, 66, 68, 82, 22, 78, 82, 22, 25, 25, 81, 49, 46, 25, 79, 53, 81, 84, 73, 25, 82, 65, 77, 74, 84, 59, 62, 56, 27, 76, 73, 39, 40, 20, 80, 23, 19, 82, 27, 84, 83, 44, 63, 78, 75, 36, 22, 70, 34, 82, 81, 77, 82, 77, 80, 77, 22, 55, 31, 79, 80, 72, 50, 24, 74, 79, 28, 74, 79, 77, 56, 78, 70, 55, 31, 84, 60, 22, 83, 55, 30, 42, 75, 80, 77, 50, 77, 36, 28, 25, 77, 73, 46, 29, 28, 77, 81, 77, 81, 18, 64, 56, 86, 79, 65, 67, 72, 34, 44, 76, 22, 33, 83, 47, 74, 71, 79, 74, 80, 37, 20, 61, 68, 81, 79, 64, 81, 81, 34, 81, 15, 78, 76, 60, 22, 27, 77, 23, 71, 25, 73, 34, 35, 36, 36, 38, 82, 18, 80, 70, 79, 82, 51, 82, 51, 81, 79, 76, 22, 66, 78, 76, 35, 20, 34, 79, 75, 80, 78, 77, 78, 80, 71, 23, 75, 18, 48, 78, 27, 40, 76, 80, 81, 78, 74, 78, 63, 68, 19, 78, 79, 31, 38, 26, 27, 80, 78, 37, 62, 77, 79, 30, 75, 81, 53, 78, 68, 64, 81, 20, 62, 26, 70, 80, 62, 19, 35, 78, 81, 81, 28, 42, 80, 43, 76, 18, 49, 65, 82, 32, 51, 76, 25, 35, 21, 80, 82, 82, 15, 30, 30, 74, 68, 79, 77, 23, 76, 24, 81, 76, 76, 31, 55, 14, 75, 77, 79, 20, 25, 79, 76, 78, 27, 35, 76, 76, 81, 77, 19, 81, 77, 19]}, {\"mode\": \"text\", \"name\": \"Top players\", \"opacity\": 0.9, \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\"], \"textfont\": {\"color\": \"black\", \"family\": \"sans serif\", \"size\": 10}, \"type\": \"scatter\", \"x\": [95, 94, 87, 84, 82, 52, 72, 90, 89, 22, 94, 65, 33, 93, 63, 91, 88, 67, 89, 80, 75, 83, 77, 65, 72, 88, 42, 75, 87, 89, 87, 45, 78, 64, 86, 69, 40, 84, 56, 86, 55, 45, 73, 69, 77, 81, 33, 42, 60, 51, 66, 79, 85, 78, 56, 76, 48, 77, 80, 87, 87, 87], \"y\": [26, 24, 29, 22, 51, 85, 71, 41, 32, 87, 38, 85, 89, 24, 90, 38, 19, 80, 49, 40, 65, 47, 22, 87, 29, 39, 87, 62, 45, 36, 38, 88, 40, 86, 33, 80, 85, 18, 88, 40, 86, 86, 84, 71, 22, 35, 87, 83, 83, 85, 79, 51, 42, 72, 70, 52, 80, 47, 65, 46, 32, 30]}],\n",
       "                        {\"autosize\": false, \"height\": 1000, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"size\": 20}, \"text\": \"Gaussian Mixture\"}, \"width\": 1000, \"xaxis\": {\"title\": {\"text\": \"attacking_finishing\"}}, \"yaxis\": {\"title\": {\"text\": \"defending_sliding_tackle\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('89ceefef-fca9-48fa-ae4f-c63e882ca23b');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data=[]\n",
    "bool_crack=df_filter[\"overall\"] > 85\n",
    "bool_no_crack=df_filter[\"overall\"]<86\n",
    "\n",
    "\n",
    "#Eligo dos números entre 0 y  de n_skills-1\n",
    "skill_1 = numeric_features[7]\n",
    "skill_2 = numeric_features[34]\n",
    "\n",
    "\n",
    "gaussian = go.Scatter(x=df_over[skill_1], y=df_over[skill_2],\n",
    "                           mode='markers',\n",
    "                        text=df_filter.loc[:,'short_name'],\n",
    "                           marker=dict(\n",
    "                                size=5,\n",
    "                                color = clf_pred.astype(np.float), #set color equal to a variable\n",
    "                                colorscale='Portland',\n",
    "                                showscale=False)\n",
    "                           )\n",
    "\n",
    "crack =go.Scatter(x=df_over.loc[bool_crack,skill_1], y=df_over.loc[bool_crack,skill_2],name='Top players',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=10,color='black'),\n",
    "                      opacity=0.9,mode='text')\n",
    "\n",
    "data=[gaussian,crack]\n",
    "\n",
    "layout = go.Layout(title=\"Gaussian Mixture\",titlefont=dict(size=20),\n",
    "                xaxis=dict(title=skill_1),\n",
    "                yaxis=dict(title=skill_2),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A traves de las gausianas tambien podemos encontrar el numero de clusters propuesto como objetivo.\n",
    "Si bien la estructura general se asemeja a los modelos Kmeans y jerarquico, nos encontramos con un poco mas de ruido en la region de los defensores (color rojo), y tambien hay una parte de la region de los mediocampistas (color azuk) que ha sido cedida a los delanteros (color amarillo)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:41:01.387926Z",
     "start_time": "2020-10-13T02:41:01.366993Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estimated number of clusters: 1\n"
     ]
    }
   ],
   "source": [
    "from sklearn.cluster import DBSCAN\n",
    "\n",
    "db = DBSCAN(eps=0.02, min_samples=100)\n",
    "db.fit(df_over)\n",
    "db_labels = db.labels_\n",
    "\n",
    "labels_unique_db = np.unique(db_labels)\n",
    "n_clusters_db = len(labels_unique_db)\n",
    "\n",
    "print('Estimated number of clusters: {}'.format(n_clusters_db))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A traves del metodo DBSCAN no pudimos alcanzar el numero de clusters deseado"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### PCA Para reducción de dimensión"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "DESCOMPOSICIÓN PCA\n",
    "\n",
    "- En la descomposición podemos elegir n_components para quedarnos con una cantidad chica de componentes la idea es que sean \"bastante\" menos que la dimensión de lo datos pero que describan un buen porcentaje de la dispersión de los datos.\n",
    "- Para esta parte del trabajo volveremos a utilizar la base de datos normalizada mas arriba."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:41:09.968878Z",
     "start_time": "2020-10-13T02:41:09.955409Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "proporción de varianza por componente:  [0.46895562 0.15744782 0.09506537 0.06462619 0.03943992 0.02601212\n",
      " 0.01640051 0.01534512 0.01274094 0.01217086 0.00950537 0.00825346\n",
      " 0.007205   0.00605563 0.00588766 0.00535092]\n",
      "proporción de varianza por componente acumulada:  [0.46895562 0.62640344 0.72146881 0.78609501 0.82553493 0.85154705\n",
      " 0.86794756 0.88329268 0.89603361 0.90820447 0.91770984 0.9259633\n",
      " 0.9331683  0.93922393 0.94511159 0.9504625 ]\n",
      "tamaño de los datos:  (665, 16)\n"
     ]
    }
   ],
   "source": [
    "from sklearn import decomposition\n",
    "\n",
    "pca=decomposition.PCA(n_components=0.95) #elegimos 2, 3 o 4 pero pueden ser más, \n",
    "\n",
    "pca.fit(X_norm) #input data is centered but not scaled for each feature before applying the SVD\n",
    "\n",
    "# proporción de varianza\n",
    "print('proporción de varianza por componente: ', pca.explained_variance_ratio_)\n",
    "# proporción de varianza acumulada\n",
    "print ('proporción de varianza por componente acumulada: ', pca.explained_variance_ratio_.cumsum())\n",
    "\n",
    "df_over_projected=pca.transform(X_norm) #numpy array\n",
    "print ('tamaño de los datos: ', df_over_projected.shape)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Graficamos a los jugadores usando las dos primeras componentes de PCA, proyectamos los datos (de dim 35) en ese espacio de dimensión 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:41:11.387409Z",
     "start_time": "2020-10-13T02:41:11.307636Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": false
       },
       "data": [
        {
         "marker": {
          "color": "red",
          "size": 3
         },
         "mode": "markers",
         "name": "Average player",
         "opacity": 0.6,
         "text": [
          "M. de Ligt",
          "F. de Jong",
          "R. Varane",
          "N. Süle",
          "S. Milinković-Savić",
          "Rodri",
          "Saúl",
          "Fabinho",
          "A. Robertson",
          "J. Giménez",
          "C. Lenglet",
          "Bruno Fernandes",
          "R. Lukaku",
          "K. Manolas",
          "D. Alaba",
          "M. Icardi",
          "Carvajal",
          "H. Ziyech",
          "Z. Ibrahimović",
          "A. Gómez",
          "G. Higuaín",
          "B. Matuidi",
          "G. Bale",
          "Marcelo",
          "A. Witsel",
          "Alex Sandro",
          "Iago Aspas",
          "Koke",
          "J. Rodríguez",
          "Allan",
          "J. Sancho",
          "K. Havertz",
          "O. Dembélé",
          "João Cancelo",
          "D. Alli",
          "L. Hernández",
          "Arthur",
          "M. Depay",
          "L. Goretzka",
          "J. Brandt",
          "K. Coman",
          "S. Gnabry",
          "N. Fekir",
          "Luis Alberto",
          "Alex Telles",
          "S. de Vrij",
          "Felipe Anderson",
          "Pepe",
          "João Moutinho",
          "M. Hamšík",
          "Sokratis",
          "Lucas Leiva",
          "M. Özil",
          "Javi Martínez",
          "E. Džeko",
          "G. Wijnaldum",
          "I. Perišić",
          "M. Mandžukić",
          "A. Vidal",
          "J. Boateng",
          "Azpilicueta",
          "José Callejón",
          "I. Gündoğan",
          "Paulinho",
          "K. Walker",
          "Canales",
          "Douglas Costa",
          "Pizzi",
          "D. Tadić",
          "J. Iličić",
          "R. Mahrez",
          "E. Višća",
          "Felipe",
          "Fabián",
          "A. Romagnoli",
          "G. Lo Celso",
          "T. Alexander-Arnold",
          "L. Jović",
          "A. Milik",
          "A. Martial",
          "Anderson Talisca",
          "J. Tah",
          "C. Tolisso",
          "Gonçalo Guedes",
          "N. Pépé",
          "M. Akanji",
          "M. Rashford",
          "J. Stones",
          "A. Rabiot",
          "Grimaldo",
          "T. Werner",
          "T. Lemar",
          "D. Sánchez",
          "Marco Asensio",
          "L. Digne",
          "J. Draxler",
          "Y. Carrasco",
          "Borja Iglesias",
          "W. Zaha",
          "Paco Alcácer",
          "Morata",
          "S. Haller",
          "William Carvalho",
          "F. Bernardeschi",
          "D. Djené",
          "Oscar",
          "Bartra",
          "Pablo Sarabia",
          "Lucas Moura",
          "F. Thauvin",
          "Jorginho",
          "V. Kompany",
          "Raúl Albiol",
          "F. Quagliarella",
          "Falcao",
          "Miranda",
          "C. Vela",
          "E. Garay",
          "R. Nainggolan",
          "E. Banega",
          "Diego Costa",
          "S. Khedira",
          "David Luiz",
          "M. Kruse",
          "J. Henderson",
          "G. Sigurðsson",
          "A. Ramsey",
          "Illarramendi",
          "D. Blind",
          "N. Otamendi",
          "J. Cuadrado",
          "I. Gueye",
          "K. Kampl",
          "Rodrigo",
          "C. Aránguiz",
          "W. Ben Yedder",
          "F. Acerbi",
          "Danilo Pereira",
          "A. Kramarić",
          "Louri Beretta",
          "Josué Chiamulera",
          "Ronaldo Cabrais",
          "Oyarzabal",
          "L. Bailey",
          "Gabriel Jesus",
          "M. Kovačić",
          "A. Belotti",
          "N. Keïta",
          "L. Torreira",
          "Rúben Neves",
          "P. Kimpembe",
          "S. Bergwijn",
          "Nélson Semedo",
          "D. Rugani",
          "A. Correa",
          "Iñaki Williams",
          "H. Lozano",
          "Gelson Martins",
          "T. Partey",
          "K. Demirbay",
          "J. Matip",
          "Suso",
          "S. Savić",
          "A. Rüdiger",
          "Ricardo Pereira",
          "N. Tagliafico",
          "Muniain",
          "M. Götze",
          "T. Delaney",
          "Willian José",
          "Sergi Roberto",
          "N. Schulz",
          "K. Volland",
          "Nacho Fernández",
          "Gabriel Paulista",
          "J. Roussillon",
          "H. Maguire",
          "T. Hazard",
          "E. Forsberg",
          "F. Kostić",
          "M. Politano",
          "Rafa",
          "D. De Rossi",
          "Aduriz",
          "Jesús Navas",
          "Santi Cazorla",
          "H. Herrera",
          "L. Biglia",
          "Juan Mata",
          "O. Giroud",
          "S. Kjær",
          "Willian",
          "V. Ćorluka",
          "M. Arnautović",
          "A. Sánchez",
          "Giuliano",
          "A. Kolarov",
          "M. Balotelli",
          "Marlos",
          "Taison",
          "B. Dost",
          "G. Bonaventura",
          "Pedro",
          "L. de Jong",
          "S. El Shaarawy",
          "Ander Herrera",
          "X. Shaqiri",
          "Mário Fernandes",
          "S. Coates",
          "C. Bakambu",
          "T. Meunier",
          "K. Bellarabi",
          "J. Lingard",
          "Q. Promes",
          "J. Vardy",
          "D. Zapata",
          "Morales",
          "Juiano Mestres",
          "Rosberto Dourado",
          "E. Schetino",
          "J. Sildero",
          "L. Martínez",
          "H. Aouar",
          "T. Ndombele",
          "Éder Militão",
          "D. van de Beek",
          "V. Lindelöf",
          "Dani Ceballos",
          "Pablo Fornals",
          "E. Can",
          "Gayà",
          "David Neres",
          "P. Zieliński",
          "G. Xhaka",
          "Rafinha",
          "G. Kondogbia",
          "M. Sabitzer",
          "L. Shaw",
          "J. Martínez",
          "A. Doucouré",
          "W. Ndidi",
          "W. Orban",
          "A. Plea",
          "Y. Poulsen",
          "R. Fraser",
          "M. Ginter",
          "R. Guerreiro",
          "João Mário",
          "Thiago Mendes",
          "A. Izzo",
          "M. Brozović",
          "A. Ljajić",
          "J. Corona",
          "L. Milivojević",
          "Gerard Moreno",
          "W. Weghorst",
          "Quaresma",
          "J. Mathieu",
          "J. Milner",
          "L. López",
          "B. Gomis",
          "M. Dembélé",
          "Cesc Fàbregas",
          "L. Koscielny",
          "Jardel",
          "Renato Augusto",
          "José Fonte",
          "A. Guardado",
          "L. Piszczek",
          "K. Gameiro",
          "D. Payet",
          "Beñat",
          "B. Höwedes",
          "M. Sissoko",
          "M. Parolo",
          "Fernando",
          "N. Gaitán",
          "S. Giovinco",
          "Luiz Gustavo",
          "N. Nkoulou",
          "N. Matić",
          "Marcos Alonso",
          "H. Mkhitaryan",
          "André Almeida",
          "A. Florenzi",
          "E. Zahavi",
          "F. Vázquez",
          "Lucas Vázquez",
          "Dani García",
          "M. Acuña",
          "Laure Santeiro",
          "J. Frendado",
          "S. Ardero",
          "L. Dálves",
          "S. Mandíquez",
          "João Félix",
          "N. Barella",
          "J. Gomez",
          "A. Christensen",
          "Y. Tielemans",
          "Mario Hermoso",
          "Carlos Soler",
          "M. Caldara",
          "H. Winks",
          "K. Piątek",
          "Diogo Jota",
          "Marcos Llorente",
          "F. Mendy",
          "Melendo",
          "Rúben Dias",
          "Héctor Bellerín",
          "B. Mendy",
          "M. Dembélé",
          "Santi Mina",
          "Rony Lopes",
          "J. Correa",
          "T. Bakayoko",
          "M. Eggestein",
          "Odriozola",
          "M. Gómez",
          "Sergi Darder",
          "K. Zouma",
          "L. Paredes",
          "N. Aké",
          "E. Hysaj",
          "André Gomes",
          "K. Baldé",
          "J. Weigl",
          "V. Rongier",
          "Yeray",
          "Loren",
          "R. Rodríguez",
          "A. Oxlade-Chamberlain",
          "Campaña",
          "A. Mandi",
          "Deulofeu",
          "Bernat",
          "M. Keane",
          "J. Quintero",
          "Samu Castillejo",
          "A. Rebić",
          "E. Bailly",
          "M. Almirón",
          "M. Lazzari",
          "M. Lanzini",
          "Sergi Gómez",
          "H. Vanaken",
          "M. Hinteregger",
          "M. Nastasić",
          "Gabriel",
          "C. Wilson",
          "J. Guilavogui",
          "D. Klaassen",
          "P. Kadeřábek",
          "C. Kramer",
          "Iñigo Martínez",
          "Portu",
          "Manu Trigueros",
          "H. Çalhanoğlu",
          "M. Dabbur",
          "M. Halstenberg",
          "M. Vecino",
          "Joaquín",
          "W. Rooney",
          "Nani",
          "J. Mascherano",
          "A. Gignac",
          "Jorge Molina",
          "L. Perrin",
          "Charles",
          "S. Radu",
          "D. Rose",
          "E. Lamela",
          "Raúl García",
          "Naldo",
          "D. Wass",
          "Pedro León",
          "I. Piatti",
          "M. Díaz",
          "M. Valbuena",
          "L. Bender",
          "S. Bender",
          "E. Capoue",
          "Antunes",
          "F. Fazio",
          "M. Hasebe",
          "Sidnei",
          "D. Perotti",
          "L. Pratto",
          "S. Feghouli",
          "K. Trippier",
          "M. Musacchio",
          "Y. M'Vila",
          "L. Stindl",
          "F. Smolov",
          "S. Nzonzi",
          "F. Coquelin",
          "Hulk",
          "K. Strootman",
          "C. Smalling",
          "K. Glik",
          "E. Salvio",
          "K. Vogt",
          "R. Pereyra",
          "Y. Belhanda",
          "Sergi Enrich",
          "D. Lovren",
          "S. Verdi",
          "L. Muriel",
          "D. Vida",
          "Ibai Gómez",
          "S. Berghuis",
          "Cristian Tello",
          "Ismaily",
          "F. Ghoulam",
          "S. Sané",
          "S. Zaza",
          "S. Vrsaljko",
          "Pozuelo",
          "R. Jiménez",
          "Bernard",
          "T. Stepanenko",
          "I. Marcone",
          "Jony",
          "Mata",
          "M. Marega",
          "Everton Andrão",
          "Welington Dano",
          "M. Baldona",
          "M. Nérez",
          "Vinícius Jr.",
          "R. Bentancur",
          "Lucas Paquetá",
          "A. Wan-Bissaka",
          "I. Konaté",
          "Merino",
          "S. Berge",
          "L. Pellegrini",
          "F. Chiesa",
          "Dani Olmo",
          "R. Zobnin",
          "A. Saint-Maximin",
          "C. Pavón",
          "T. Kehrer",
          "C. Pulisic",
          "F. Kessié",
          "A. Hakimi",
          "D. Samassékou",
          "Marc Roca",
          "D. Zagadou",
          "V. Tsygankov",
          "De Tomás",
          "R. Loftus-Cheek",
          "S. Lobotka",
          "J. Denayer",
          "L. Klostermann",
          "A. Golovin",
          "A. Diallo",
          "B. Pavard",
          "M. Rashica",
          "B. Chilwell",
          "Wesley",
          "T. Souček",
          "Junior Firpo",
          "J. Ward-Prowse",
          "A. Januzaj",
          "Otávio",
          "N. Stark",
          "A. Iwobi",
          "J. Gbamin",
          "Munir",
          "Angeliño",
          "J. Maddison",
          "André Silva",
          "Richarlison",
          "S. Nakajima",
          "Raphinha",
          "E. Dier",
          "L. Trossard",
          "Jonny",
          "M. Sanson",
          "J. Lerma",
          "L. Dubois",
          "F. Grillitsch",
          "L. Cabrera",
          "R. Barkley",
          "J. Murillo",
          "J. Tarkowski",
          "J. Brooks",
          "M. Batshuayi",
          "M. Arnold",
          "S. Kolašinac",
          "F. Schär",
          "Ricardo Horta",
          "L. Alario",
          "Mariano",
          "R. Aguilar",
          "F. Balbuena",
          "S. Mustafi",
          "G. Pezzella",
          "D. da Costa",
          "W. Boly",
          "B. Davies",
          "Fred",
          "M. Samatta",
          "Diego Carlos",
          "K. Toko-Ekambi",
          "R. Malinovskyi",
          "M. Sakho",
          "J. King",
          "H. Seferović",
          "Laguardia",
          "P. Jones",
          "S. Aurier",
          "L. Spinazzola",
          "K. Lala",
          "S. Arias",
          "D. Baselli",
          "T. Savanier",
          "Leo Baptistao",
          "J. Veltman",
          "D. Zappacosta",
          "Wu Lei",
          "David Villa",
          "B. Yılmaz",
          "S. Kalou",
          "Dante",
          "M. Debuchy",
          "E. Lavezzi",
          "Borja Valero",
          "M. Škrtel",
          "J. Evans",
          "D. Valeri",
          "N. Moisander",
          "D. Criscito",
          "A. Candreva",
          "Marcano",
          "K. Boateng",
          "A. Fernández",
          "Nacho Monreal",
          "Ángel",
          "Granero",
          "Éder",
          "R. Vormer",
          "S. Coleman",
          "A. Lallana",
          "A. Modeste",
          "M. Gradel",
          "Yuri Berchiche",
          "Mariano",
          "O. Toprak",
          "N. Kalinić",
          "C. Stuani",
          "K. Asamoah",
          "Alex Teixeira",
          "S. Lulić",
          "S. Rondón",
          "S. Kagawa",
          "J. Wilshere",
          "Cote",
          "Iago Falqué",
          "J. Pastore",
          "Maicon",
          "F. Orellana",
          "Elkeson",
          "Kike García",
          "Escudero",
          "Mario Gaspar",
          "Víctor Ruiz",
          "I. Belfodil",
          "A. Yarmolenko",
          "W. Khazri",
          "E. Pérez",
          "D. Caligiuri",
          "Danilo",
          "N. Pallois",
          "Vitolo",
          "M. Badelj",
          "Zé Luís",
          "D. Suárez",
          "Roque Mesa",
          "Mário Rui",
          "T. Inui",
          "D. Cheryshev",
          "C. Bacca",
          "A. Samaris",
          "J. Hector",
          "Rubén Peña",
          "A. Hamdallah",
          "D. Benedetto",
          "L. Sigali",
          "Raúl",
          "Petros",
          "Dyego Sousa",
          "Soares",
          "Rubén Alcaraz",
          "Maikel Catarino",
          "Antônio Chiamuloira",
          "Melvin Parrela",
          "Luimo Boas Santos",
          "D. Lenzado",
          "E. Riquero",
          "E. Aguerro"
         ],
         "type": "scatter",
         "x": [
          1.093529249461258,
          -0.015142992894534173,
          1.2726469097387774,
          1.8625805082496447,
          0.14430381343330845,
          0.48134525304271863,
          0.09383916387606614,
          0.5027562488397577,
          0.27934266209035696,
          1.7229593078506604,
          1.1575819794767146,
          -0.6543651644714024,
          -0.4901674537030536,
          1.9617331646236986,
          -0.005926362460696614,
          -0.7352456743161876,
          0.545507241185545,
          -0.8511170119353709,
          -0.6774218511830395,
          -1.2609133621248039,
          -0.8728357732852086,
          0.4089174674722236,
          -0.6583522690278406,
          -0.13172687838812108,
          0.24684081431574117,
          0.2913970929087435,
          -1.1821736163099015,
          -0.12316892306126583,
          -0.9056197834869149,
          0.2859799142378293,
          -1.1345525996877233,
          -0.8224583451644719,
          -1.2631044638731816,
          -0.01780090017490749,
          -0.12964558465518938,
          0.8305379677487733,
          -0.14702203167859662,
          -1.1149143280454987,
          -0.013288492747890197,
          -0.9183252386171624,
          -1.3323345779667468,
          -0.9738362919577653,
          -1.1639965938928243,
          -0.8351026272816162,
          -0.037739199297682366,
          1.401517142392075,
          -0.8195459049188397,
          1.4420926767497237,
          -0.24773976595693373,
          -0.24921146102732897,
          1.4677151245184734,
          0.44721015143942977,
          -1.2640068529513437,
          1.3290022304290816,
          -0.36958225401690775,
          -0.10354751601695807,
          -0.39709194572084644,
          0.13147154074400225,
          0.24522157212699966,
          1.210534075215784,
          0.6499744512659811,
          -0.918301985477884,
          -0.2196070880964404,
          0.13718459141582762,
          0.32548264795818244,
          -0.7877787210119258,
          -1.1626009756341185,
          -0.5488221371120807,
          -0.9892013279647349,
          -0.9577320217508231,
          -1.2417135797188417,
          -0.9897623984030656,
          1.6299542589598748,
          -0.049347860501572784,
          1.5795476141242863,
          -0.4396128767230349,
          0.1396878088653918,
          -0.9150112469892419,
          -0.6080610668733534,
          -0.9087013505079276,
          -0.5797999446424876,
          1.8668416496383622,
          0.12875787458245314,
          -0.9897606253094461,
          -1.214317517118539,
          1.110454672811558,
          -0.8527969561956225,
          1.2243902837613034,
          0.15281761495854448,
          -0.0802615846382569,
          -0.9699209872953733,
          -0.6878492876660327,
          1.4155685001514349,
          -0.9765137817233976,
          0.15006707845546172,
          -0.660689095823061,
          -1.0895067743817552,
          -0.44804315877771456,
          -1.0314201754040204,
          -1.0809244439816252,
          -0.77740714036711,
          -0.13095837455800924,
          0.8581795912311934,
          -0.6479896558299076,
          1.3230615250068618,
          -0.7514999703996268,
          0.664738440666871,
          -0.7149327213501069,
          -0.9770339177803259,
          -0.9829015912341995,
          0.005519232281078351,
          1.2655898185524945,
          1.5836531243844947,
          -1.1577371373284018,
          -0.6472330056327308,
          1.2573154866300065,
          -1.1862497115458877,
          1.2300022728340079,
          0.11220123297920455,
          -0.04468266467958917,
          -0.22615246054248886,
          0.48858714211492216,
          0.6945669948346964,
          -0.8847149689740524,
          0.2188616325624397,
          -0.48060002458544454,
          -0.1632541707417269,
          0.2803907883361974,
          0.41889367185612886,
          1.2555879050077667,
          -0.3998173535071752,
          0.6560181766797779,
          -0.4431342641354577,
          -0.81552672538089,
          -0.11256466033565132,
          -1.1660959318255977,
          1.4274459825155112,
          0.7572048163554432,
          -1.165602292999863,
          -0.5586977411401371,
          1.2208747602300565,
          -1.0722326631177117,
          -0.976163144539493,
          -1.15165360718189,
          -1.0045137135174431,
          -0.2825392059247318,
          -0.47377410187280056,
          -0.3870533293884648,
          0.10146000593275478,
          -0.06033313200964133,
          1.210767786210475,
          -0.9078372608537373,
          0.3566037891923346,
          1.5675493264446796,
          -0.7965988846890584,
          -0.6769391469162986,
          -0.9349209517655289,
          -0.926876957665701,
          0.4399836643345381,
          -0.36179376605290925,
          1.265511823652482,
          -1.367005042309995,
          1.8105347352780587,
          1.3374068124114016,
          0.14567760244303207,
          0.5083610649718011,
          -0.8008526334659892,
          -0.7108903261671804,
          0.4157573375052958,
          -0.34952120973063894,
          0.17072923813319119,
          0.338121607197659,
          -0.7479213953446732,
          1.2296893135238172,
          1.065128250360813,
          0.20693339769934319,
          1.2898568527624361,
          -0.9627251541553578,
          -0.9983048679162175,
          -0.239320232635391,
          -1.1075847570779214,
          -0.8818469270116963,
          0.692934388905102,
          -0.19157400261717575,
          -0.39192138227013523,
          -0.45793469355011973,
          0.2546141892621039,
          0.18035069507585735,
          -1.1607931264180642,
          -0.2331498556487378,
          1.274141157047157,
          -0.8920702407156282,
          1.2208559322915264,
          -0.5191344800129479,
          -0.8740221180823334,
          -0.7718996538810242,
          0.25283619334084523,
          -0.8894455255833763,
          -0.8553012522560153,
          -0.8867525124062569,
          0.07157695314617585,
          -0.2402386818949843,
          -0.931275087828212,
          -0.1316098886699307,
          -1.011815565393393,
          0.19284221902335125,
          -0.8992820419949509,
          0.5240902198294859,
          1.7314208643028521,
          -0.8792597354914803,
          0.3041747972003403,
          -0.8786711127248028,
          -0.6079921697788693,
          -0.9629325206617596,
          -0.35123389867847477,
          -0.3375176633780099,
          -0.7352084596364049,
          0.9660070666914622,
          0.41071676985896405,
          1.1588302570801599,
          -0.9238580043144451,
          -0.5715177890578796,
          -0.3155918657899994,
          -0.03891553563909665,
          0.8896292844065015,
          -0.045898048440508016,
          0.8483138259160578,
          -0.10992127545693899,
          -0.12808992465849792,
          0.40341536821089163,
          0.05878878934296154,
          -1.0132021118676624,
          -0.29781650839718277,
          0.3394733377322612,
          -0.31966324228084597,
          0.4272265625455252,
          -0.42602188514021855,
          0.43917226380986424,
          -1.0320655234468243,
          0.4449101435560226,
          0.6951131281361403,
          1.802687519898914,
          -0.7763018789461639,
          -0.08501594747416193,
          -0.9692434764911273,
          1.0221100115382546,
          -0.5612280280028489,
          -0.23998231226124792,
          0.12491134970381743,
          1.6212893305526754,
          0.09044858787812933,
          -1.0028155116145463,
          -0.6264175204609866,
          0.5627712476334236,
          -0.5110209007931021,
          -0.09468777752272997,
          -1.3199035873157006,
          0.8013758956879241,
          0.10051181951621495,
          -0.6370593089200988,
          -0.5476632930592039,
          0.20171301349681825,
          -0.35906254068803384,
          1.3586870861707177,
          1.8134588470319088,
          -0.04097012168241941,
          1.7393527160131073,
          -0.1433990986751227,
          0.45802203476088715,
          -0.7939332456404855,
          -0.8883679982836535,
          -0.0594838606195758,
          1.2551142959505843,
          0.3702792414804345,
          0.3421395152774433,
          0.7848217752184967,
          -0.8837295076842785,
          -1.4919707944338625,
          0.878551552956964,
          1.0461718744689679,
          0.6737044044436561,
          0.2633118750150637,
          -0.5872278547695321,
          0.6381588697337002,
          -0.16888207282698617,
          -0.793648858962981,
          -0.17528971576376554,
          -0.47616586175739384,
          0.551783073693705,
          -0.1528201375479127,
          -1.267535496641098,
          0.9508910599073885,
          -1.2621523852274275,
          -0.48084544567597115,
          -0.45241231315728664,
          -0.8580331444905398,
          -0.009469815191282871,
          1.2534647282275693,
          1.463921999112927,
          -0.26619090881642915,
          0.754852947708467,
          -0.32967952589153066,
          1.6930016018362055,
          0.0717704915937177,
          -0.46060003189380766,
          -0.5569197872181216,
          0.7448221474693401,
          0.2549343493070891,
          -0.5051240847348489,
          1.6466992493400046,
          0.34951830294699254,
          0.5513662835940923,
          -0.6661507131580198,
          -0.35568727464523986,
          -1.143482350178569,
          -0.8166640331447172,
          1.0447222499456095,
          0.16957463837811157,
          0.34632928678334224,
          -0.47251165331022527,
          0.015387597806095756,
          1.3047339247355252,
          0.03542652046907927,
          0.748239186404297,
          0.7438915673521367,
          0.19527503646383984,
          -0.9501493731374474,
          0.6286797163208482,
          -0.11803022410279865,
          1.1654440689261432,
          -0.6723265202589421,
          0.16591701673909015,
          -0.2801214376960569,
          0.019570177153234235,
          0.8725275960372325,
          -1.2555039389855238,
          -0.06179537710372034,
          1.2829770695521108,
          -1.1913481922927094,
          -0.8676264320992775,
          -0.6511323101546269,
          1.258416491204627,
          -0.7610121819054259,
          -0.4834285058441462,
          -1.1489089142754045,
          1.2858701193147855,
          -0.07533702544846098,
          0.9763153792986404,
          1.4190125726126963,
          0.2854374275994673,
          -0.6340024886813783,
          1.067646070436934,
          0.04171288563110579,
          0.6602233374632811,
          0.8301108411642998,
          1.0391736258692623,
          -0.3312640693284341,
          0.009410082631397842,
          -0.6213452076972116,
          -0.742127510153029,
          0.5464444804629068,
          0.30264672504680734,
          -0.8158116955565247,
          -0.4019971544172351,
          -1.0378905172296442,
          0.7216724597633307,
          -0.3557962802116049,
          -0.1810847853374007,
          0.9384484558029854,
          -0.6205083048993675,
          0.8264206153681324,
          0.3608817055254504,
          -0.5614012084811468,
          0.21076356939446356,
          1.0512799887724251,
          -0.0038750620879938005,
          -0.8085712290803256,
          -0.6535524905737584,
          0.07972828093509023,
          -1.1701408468182728,
          0.732278896758715,
          1.2583556923955774,
          0.608675628331114,
          0.14799856355603497,
          1.9227499072660128,
          0.7029874434443941,
          1.1769388061334851,
          -0.8767433857959528,
          -0.007488322706468554,
          -0.8670469319113737,
          0.1933901903604244,
          1.056742132224221,
          0.4340015556281379,
          -0.3894663069595212,
          -0.8331459820807247,
          1.0973696369063797,
          0.39251833518897633,
          -0.5716281299973063,
          0.35279921333887587,
          1.4159462016012647,
          2.080022481085424,
          -0.5121658990623803,
          0.9182338424368122,
          -0.31554742384247875,
          -0.43366822064558197,
          -0.3335421803460602,
          1.639480233571107,
          -0.9618973549410277,
          -1.0697120754914964,
          1.3495539917416717,
          -0.534284529585301,
          -0.9705677410994165,
          -0.7762551505392317,
          0.11755783533902693,
          0.3054598224875862,
          1.337449634331132,
          -0.2070462265641193,
          0.5530914899456415,
          -0.6689312307621649,
          -0.36297667399763067,
          -1.150240326542727,
          0.6760427446312381,
          0.6374657897667346,
          -0.5843478518703666,
          -0.45780753981599603,
          -0.21328006253245024,
          0.45263022893783367,
          0.27972666642497857,
          0.45263022893783367,
          0.30722716101818776,
          -1.1223675128147896,
          0.19516200429566716,
          -0.3029410847080335,
          0.6217021180742193,
          1.5777543154524245,
          0.1262272287685287,
          0.7958275244994931,
          0.07450624439344573,
          -0.7797080080163346,
          -0.7581777054008579,
          0.2982533781533029,
          -1.1761121194192747,
          -0.7214680686457238,
          1.0507283924755246,
          -0.8723575039242715,
          0.35073432606349797,
          0.19771206592432541,
          0.7176496464744113,
          0.4168606594047357,
          1.8458053458424337,
          -0.7962334591614332,
          -0.6463925454133728,
          0.12573205850783697,
          0.10245185218970025,
          1.1907784205771217,
          0.9920890650895047,
          -0.2654053178855047,
          0.943931353601556,
          0.8599801231904542,
          -0.8718165874808218,
          0.5536202557772418,
          -0.243553881630382,
          0.5657190225982887,
          0.4410782164669458,
          -0.3216270886787293,
          -0.9979097214316859,
          -0.7604108793092614,
          0.9811475926125433,
          -0.755634268849079,
          0.6214850629016011,
          -1.0169694901036326,
          -0.025207307264164886,
          -0.9412939035392702,
          -0.39189599589266977,
          -0.5850570431435002,
          -1.1297033410264175,
          -0.7220696233867049,
          1.0200616197428334,
          -1.2127288744841316,
          0.5219205343604387,
          -0.024420169785090786,
          0.47808655074146805,
          0.3330897972942009,
          0.21293513858268995,
          1.6288950498201702,
          -0.16913658128678985,
          1.2409763491266912,
          1.2512486709000041,
          1.430545814593453,
          -0.6409652170911148,
          -0.10303922533030857,
          0.701510992442207,
          0.6676468565955911,
          -0.9309377010538616,
          -0.5131085528451768,
          -0.3915368727630513,
          0.4749652004662409,
          1.807511296188057,
          1.0258517947114036,
          1.6052709102933989,
          0.7195679835073407,
          1.5472882374662633,
          0.5286895789207942,
          -0.08916200033224717,
          -0.6812314309206358,
          1.1120319808204517,
          -0.8678598041168412,
          -0.15388715795301805,
          1.6510630580288828,
          -0.7053788317076696,
          -0.16990338620388273,
          1.6638371238764973,
          1.3068388773970108,
          0.5125289970226451,
          0.2896330996612303,
          0.33719639168789567,
          0.588417186823272,
          -0.23339564887681372,
          -0.24432921746162203,
          -0.8427281239672055,
          1.0609301892138558,
          0.2946368259960211,
          -0.7985578320703659,
          -0.8626074813482504,
          -0.5176591545751096,
          -0.8223269381387986,
          1.2514882176566124,
          0.372364144682632,
          -0.9273474934519735,
          -0.16168172135327963,
          1.8351412323196075,
          1.6780434987706092,
          -0.756884358546864,
          1.0047896287002824,
          0.46422760504943017,
          -0.4349548140776577,
          1.3927214462366053,
          -0.04050420687886913,
          0.09302379189665337,
          0.5406163448331016,
          -0.7229639715574538,
          0.06466860900358765,
          -1.1709330691438904,
          0.20008339441506767,
          0.3468640236701085,
          -0.22623567658001756,
          -0.43448722902504927,
          -0.7885797115538222,
          0.48782591882383997,
          0.13448931511612194,
          1.278777909092132,
          -0.32286007118337856,
          -0.24647201100610822,
          0.10524253315789876,
          -0.7910463282188948,
          0.13438522879661396,
          -0.2636026353688034,
          -0.6149417766102595,
          -0.1936095166720878,
          0.5871402316170584,
          -1.0332104779645321,
          -0.38245465605172746,
          1.3475128479654213,
          -0.9588419259058202,
          -0.5162331127775573,
          -0.32887960731873844,
          0.4333407718408982,
          0.4569877301133533,
          1.3779041168653652,
          -0.45699594446435576,
          -0.6382785326874156,
          -0.7508478744609893,
          0.2718071294938753,
          -0.03256689161223365,
          0.31772426577603347,
          1.5252552892122606,
          -0.6445401349618216,
          0.4883500902178734,
          -0.46198580257616656,
          0.3506356166091338,
          0.3573857716898045,
          0.21246976771155715,
          -0.90858284629784,
          -0.3987469972867594,
          -0.6901677135956169,
          0.761601927813514,
          0.46588722821898265,
          -0.008875753840154333,
          -0.7585777353967925,
          -0.6134610410201569,
          1.5583053773537383,
          1.3811318351740165,
          0.405517082903486,
          -0.11405651992250206,
          -0.17769581293081887,
          0.4144713330253,
          0.5039826180824553,
          1.355269961002532,
          0.5570640502210515,
          -1.0149170010088688,
          1.3525784052956968,
          0.3595481947846112,
          -1.0203001124225395
         ],
         "y": [
          0.04352798115247077,
          -0.8005638015698715,
          0.13738098761543657,
          0.5578724391878837,
          -0.3379332625159552,
          -0.4379549503841231,
          -0.4548549707631786,
          -0.4884256740921628,
          -0.6604165851929176,
          0.48354898012582037,
          -0.08918843570964564,
          -0.6779878086289225,
          0.9394535525688561,
          0.5646760637935975,
          -0.605227690402733,
          0.9851625775253565,
          -0.6649477580679661,
          -0.4520544141810253,
          0.8524023218525045,
          -0.25748003169876177,
          0.8793510820594372,
          -0.5482001024357335,
          -0.06513083193336283,
          -0.7327911492150323,
          -0.4898680416643692,
          -0.5137162067144916,
          0.29023166714720544,
          -0.7561555773804571,
          -0.3050124221615494,
          -0.7994270175504692,
          -0.03251806666322672,
          0.11853623398959351,
          -0.10720298289212624,
          -0.731459643923081,
          -0.2918851140728006,
          -0.20682762630071924,
          -0.7208337899692286,
          0.2544902654665916,
          -0.4307530289319407,
          0.05983966722285005,
          0.24396057051094747,
          -0.0156734706023215,
          0.05683652414442038,
          -0.264771079614864,
          -0.7179486637803643,
          0.07138475580881125,
          -0.5045815112273961,
          0.35123746079782436,
          -0.7002472721154868,
          -0.47334512237162213,
          0.5158753129910312,
          -0.5287434139080118,
          0.18088367044399176,
          0.12476067444985096,
          0.755116253669886,
          -0.5737501302001121,
          -0.05676059832664742,
          0.3637080596116223,
          -0.5549390508506278,
          0.04577405069780729,
          -0.5321418667010451,
          0.13261655639262118,
          -0.6561961476599153,
          -0.2981001292336392,
          -0.43959078356642195,
          -0.3083862025694177,
          -0.20985911376995106,
          -0.5714589089898817,
          0.014017860519720118,
          0.07209866766024198,
          -0.06718154934847724,
          -0.24581160805408753,
          0.4388894267101332,
          -0.4920524633434915,
          0.22921856248548889,
          -0.5664420965689296,
          -0.7241454102572773,
          0.8077984529770437,
          0.7683827960233176,
          0.31014214752455344,
          -0.06180919213542409,
          0.5149439154949746,
          -0.3837621704562575,
          0.1656379018598858,
          0.28606317278699195,
          -0.043172220698074595,
          0.22671224089274364,
          -0.15518041721398404,
          -0.3875131312359522,
          -0.8346576301077359,
          0.6132788852676864,
          -0.575640184952958,
          0.2585274849715822,
          -0.1086816128186649,
          -0.6054899734853054,
          -0.19073390924027672,
          0.1709728716570861,
          1.0514212879634275,
          0.41249964335318773,
          0.5179277581219287,
          0.9765395508533059,
          0.8277396514035819,
          -0.1523235487723237,
          -0.39323668662423444,
          0.04567802411996939,
          -0.37917812144032925,
          -0.29400615267072155,
          -0.4017012406936213,
          -0.07017657782439683,
          0.10174795812485178,
          -0.6320960168691431,
          0.2342737682439106,
          0.18982154102710314,
          0.5819626443251753,
          0.6115213403869949,
          0.2124359245494242,
          0.36195150379364643,
          0.2738713410148539,
          -0.7386271718175554,
          -0.7786046383826779,
          0.874015595485808,
          -0.19042371846883505,
          -0.1313700875927289,
          0.05781684337748173,
          -0.5401360189173349,
          -0.21796017328755402,
          -0.38390270630658724,
          -0.6800811387413359,
          -0.5740912627230075,
          0.22523333938666898,
          -0.45646683655573855,
          -0.5215704766210849,
          -0.679700850051139,
          0.3675200474694738,
          -0.7662458548459098,
          0.14498563771770587,
          0.24326828298400804,
          -0.10118722446624534,
          0.4964931341212593,
          1.2060022577340286,
          0.15256160829648616,
          0.05382477116553991,
          0.09160858522607664,
          0.3175168216104473,
          0.3108161293082214,
          -0.6594245300919218,
          0.9486061876432347,
          -0.6548637015210733,
          -0.8594395272532634,
          -0.5346354343442825,
          -0.010094943449556042,
          0.21720344296439023,
          -0.46301090519643506,
          0.35353845175736565,
          -0.16316996145764162,
          0.5610313839433709,
          0.1582920013419888,
          -0.10152334503715069,
          -0.34091468569980266,
          -0.5005758975967272,
          0.1588744251589914,
          -0.01327243446530337,
          0.49610401717512403,
          0.17298600708020212,
          -0.6037212701093149,
          -0.39767306690339943,
          -0.33178371160996684,
          -0.47982514360487544,
          -0.35981171193411293,
          1.019655219432683,
          -0.6081796801477484,
          -0.36423673689239944,
          0.25001575491976125,
          0.04528139522415932,
          -0.006644318054903006,
          -0.4478060808886697,
          0.3304600400309176,
          -0.320145536530379,
          0.107813032580612,
          -0.3123252921248235,
          -0.19567873253210066,
          -0.22881614289013255,
          -0.23982993406089856,
          0.8751898905871074,
          -0.6518111206760254,
          -0.6252697650679698,
          -0.31266595281306964,
          -0.6847544428527178,
          -0.13561102232543704,
          0.9984196050459312,
          0.3434933292725036,
          -0.36417059487226183,
          0.2519905874918481,
          0.3326645488373136,
          0.04079222161269011,
          -0.060138509393030545,
          -0.43520679317162275,
          0.9284274682427497,
          -0.09699932816337015,
          -0.07096197182151093,
          1.4287580726386562,
          -0.5239846678817774,
          -0.029868275322734714,
          0.6934231280822979,
          0.23397009566094287,
          -0.6425177262100631,
          -0.32347098525622414,
          -0.27962338662587877,
          0.6556630425603727,
          0.5576490025431962,
          -0.14972489179099452,
          0.37679860967370943,
          -0.21291630961867242,
          0.09447655028793897,
          0.45012833262794777,
          1.3116740955424155,
          -0.16812025080576265,
          0.3092638507481155,
          -0.5296389567267376,
          0.19713265392212032,
          0.06413667633488448,
          0.6080702948941298,
          -0.5162785911132507,
          -0.5464812764497691,
          -0.04866766938883747,
          -0.3299721281721132,
          -0.20834959083632512,
          -0.6495514570988166,
          -0.5590455697970534,
          -0.4259074398227366,
          -0.7089268173372375,
          0.10344311295787319,
          -0.6177340634482623,
          -0.2800936168546762,
          -0.4478493847589056,
          -0.26800136457938223,
          -0.10143816445558293,
          -0.41921748944402176,
          0.903079044144505,
          -0.23773270628241314,
          -0.2130634579662383,
          0.6756972028848981,
          0.40540202131977665,
          0.6421856155101204,
          -0.3571804206355716,
          0.1931805919882124,
          -0.8119001026211136,
          -0.4254103395853827,
          -0.5601381660634311,
          0.4178998778111341,
          -0.5993826370346674,
          0.05941165081477475,
          -0.4080734342196686,
          -0.17722824545752947,
          0.6119214305568174,
          1.3109213151887882,
          0.2096353197649201,
          0.003856794040782937,
          -0.6215833678333276,
          0.2584003115386772,
          0.9587594869988678,
          -0.3158164050775628,
          -0.2605892967599112,
          0.17959200119319293,
          0.8391489551386205,
          -0.3098005216062157,
          0.5849570475608329,
          -0.6877185903687006,
          -0.22474435453155855,
          0.27442451984333044,
          0.09748369979114761,
          -0.49120952442528676,
          0.25792712812886215,
          -0.2661735819049757,
          -0.35054965124986154,
          -0.15473169034874754,
          -0.05170356126863392,
          -0.1606569140548145,
          -0.07804551362752028,
          0.07579894265854685,
          -0.09921071582324968,
          -0.3009811505439315,
          -0.20647824204342982,
          -0.27578766935797017,
          -0.5708917809775779,
          0.365560208136144,
          0.054993767003836916,
          -0.3666813964815524,
          -0.3741688139439963,
          -0.7071986430761493,
          0.16964600861635892,
          0.3297987821236984,
          0.1643358437102142,
          1.2567127838186467,
          1.4591351605004463,
          0.22020791771634782,
          -0.7422210074177799,
          0.06246997261161778,
          0.12975372832425877,
          -0.5290943679823606,
          -0.21747951363346477,
          -0.3295696946586488,
          0.5993493859654091,
          -0.6053725845555319,
          1.183357311032927,
          -0.029656923509619276,
          -0.2859421046277206,
          -0.3444456969004464,
          -0.38001907980157706,
          0.5528148456811509,
          -0.32869863049412296,
          -0.32230462230314505,
          1.104797202624481,
          0.3150087638636469,
          0.13526635205342863,
          0.3728906741419809,
          -0.014063184722478635,
          -0.32039738000343887,
          -0.35937925959873374,
          1.0670508601881876,
          -0.4227869454985792,
          0.5754203559382775,
          -0.5458295360557637,
          -0.1903413928421331,
          -0.21211811151992183,
          -0.2704477499180646,
          0.544621625793266,
          -0.3950212198014452,
          -0.6765013233671142,
          0.17986216277085992,
          1.2140198143093435,
          -0.4795453145007205,
          -0.5165397163776683,
          -0.45758007040591325,
          -0.19800333767661032,
          0.24539515788892416,
          -0.7383766433154221,
          0.3116128359890956,
          -0.06190455110680552,
          -0.025033049803337384,
          0.644991944137625,
          0.3843870982885521,
          -0.1687141835771296,
          -0.27019831580416936,
          0.04853385389578635,
          0.14409118077816488,
          -0.08995183165632312,
          0.1949883659810081,
          0.20957058781288446,
          -0.27906326509344603,
          0.677167617977823,
          0.08912938952219064,
          -0.13119619468673693,
          -0.1318289820534002,
          -0.1539200711173907,
          0.03557561860825413,
          -0.07240911678332544,
          -0.2623220651164964,
          -0.4626358977191148,
          0.8660199303671462,
          -0.06750551582500908,
          -0.2635491881343508,
          0.03325532924551892,
          0.048763044086094845,
          0.0968880606934463,
          -0.31744456563072837,
          0.7965296153345298,
          1.0813314603030968,
          -0.019765154290850042,
          0.9534247735890046,
          -0.04587643281202566,
          -0.43614278969688947,
          0.047672642489004824,
          -0.054663813266448175,
          0.4389865314366959,
          -0.47664962806572314,
          -0.14775317272209243,
          -0.02385963637391867,
          -0.645837785291405,
          -0.056005019896280275,
          -0.16678509550340356,
          0.2204991869236806,
          -0.07799221577914472,
          -0.4751237891303785,
          0.7424158122295244,
          -0.37591922785588744,
          0.44201308578529364,
          0.1690473828887782,
          0.4414391754942619,
          0.3815837169144971,
          -0.5921166810389599,
          0.03043020273041159,
          -0.28009130369514185,
          -0.053196831757963726,
          0.7563358191418815,
          0.19451498572710268,
          -0.40606021088754424,
          0.4054223659548551,
          -0.334390478688255,
          0.6217330371741069,
          0.9314177114037065,
          -0.0627976067408026,
          0.05444043914829709,
          -0.2918789274108428,
          -0.15941513144673372,
          0.6969143263424417,
          0.5340547859337699,
          -0.40687956729069674,
          0.734099554937936,
          0.30817985836280504,
          -0.2686238484068213,
          0.09619277573247537,
          -0.004692551489523355,
          -0.4083669100607451,
          -0.36664485533877567,
          0.3579320948488695,
          0.7827580824525147,
          -0.2657592184953047,
          -0.1975042139190971,
          0.6436202204450437,
          -0.0798319502269136,
          -0.2024259090071279,
          -0.20002513059876184,
          -0.19388851324991505,
          1.1797023517664225,
          1.10515768218835,
          -0.37223459092959177,
          -0.45287679036051776,
          -0.37223459092959177,
          -0.47972762518331763,
          0.33638197454890223,
          -0.35669938393365636,
          -0.1675725189203155,
          -0.21829699370560215,
          0.44257771973542437,
          -0.18940407510015558,
          0.029701431376976516,
          -0.3374441158439343,
          0.1538433814837637,
          -0.2003158280927725,
          -0.4191350642300242,
          0.4534213148943028,
          -0.0001496780454754973,
          0.02900820793016925,
          0.18377004531545948,
          -0.24379275918602894,
          -0.31217054677747125,
          -0.2939774714174551,
          -0.4183342135641913,
          0.6187639751900339,
          -0.06309581633821303,
          0.9826284967123642,
          -0.02318092533347431,
          -0.5249993258314953,
          0.13785549487066787,
          0.1978179345377991,
          -0.4750476653925795,
          -0.1273355887573886,
          -0.19343072903595723,
          0.12072102648250899,
          -0.27412483792901465,
          1.0122069547404238,
          -0.06150228970355728,
          -0.11598129539494251,
          -0.5397485143817133,
          0.4033768015042712,
          -0.05283164890086053,
          0.17061912966184836,
          0.4886870321473073,
          -0.16072681942167788,
          0.374397427983198,
          -0.5421212593795084,
          -0.13858486808716283,
          0.7071827391934485,
          0.4026971573995919,
          -0.09255178763726524,
          -0.07910685162351945,
          0.1691593519011121,
          0.3213739832952675,
          -0.32994767436991645,
          -0.302111510543799,
          -0.32549299978215745,
          -0.4460633524430078,
          -0.1794829939367519,
          0.49064657982483956,
          0.10564183708398488,
          0.28565496424753456,
          0.2413026587908625,
          0.43832484011933776,
          1.1266520657879353,
          -0.337769649757214,
          0.09304147038990028,
          -0.007061738361363711,
          -0.07389475002667939,
          1.2406615425192389,
          0.7710517496404375,
          -0.3016954669933815,
          0.7715108841749747,
          0.26682828238548983,
          0.758541234544611,
          -0.008132103485224527,
          0.5176243105148781,
          -0.311915306325428,
          -0.6003542650609076,
          0.9850328999243292,
          0.33915065200621003,
          0.9168657501393493,
          -0.07532426518992029,
          0.37102197007727655,
          0.6443375649530738,
          0.724520122683263,
          0.5895689750097702,
          0.3958761839869953,
          -0.2144683161126557,
          -0.27066782986816734,
          -0.3194813819513519,
          -0.1623377136243085,
          -0.3239570165941503,
          -0.6924263337220251,
          0.6525010639910588,
          0.05351824093468631,
          -0.23696620578935068,
          0.4610281386923583,
          0.473951379049869,
          1.0123904871911398,
          0.4299849128193762,
          0.19142252426819958,
          -0.2529886430136917,
          0.18065240456285817,
          -0.4543658685176419,
          0.8062303778188404,
          0.485378922821872,
          0.2597798746722538,
          -0.029991649002186725,
          -0.28842133796353103,
          -0.22210566857826378,
          0.4577928105924855,
          -0.04770882687776619,
          -0.3593589693324556,
          -0.2173204050405828,
          0.8802122169936424,
          -0.28657038330487156,
          0.45669255568350514,
          -0.2810580544970608,
          -0.34043880170282237,
          -0.22221542087942245,
          1.1780466780859922,
          0.27999461554298827,
          -0.15976315715209463,
          -0.359902274248779,
          0.25479964819031226,
          0.9146061082533512,
          0.6490068230706638,
          -0.5511319100033508,
          0.1377946797393278,
          -0.3419504929209558,
          1.2258550163869733,
          -0.2257058221625145,
          -0.3999017121362335,
          -0.2808126519020315,
          -0.031188235019705694,
          -0.10940264714646727,
          0.4254522714373987,
          0.1262624212793596,
          0.3662883387172163,
          1.0624564422584442,
          -0.33074100633772063,
          -0.16089719815344483,
          0.26112768003889164,
          0.9449448917307204,
          0.3958618568583093,
          0.16192751129210411,
          -0.24384319277486471,
          -0.2551414157049251,
          -0.2318335375438081,
          0.6120651851709682,
          0.5206017499029276,
          -0.244394885458359,
          1.2204517913152586,
          -0.34172675714245987,
          -0.46241603900660644,
          -0.5235577793867555,
          -0.1454620341173842,
          -0.0488384677369081,
          0.9754079768007716,
          0.04837959870588579,
          -0.24545756364057145,
          -0.3630944897703056,
          0.9317945348735043,
          0.788553403106689,
          0.7599110624643592,
          0.5505730680755098,
          -0.27305129894424773,
          1.5803354873271398,
          0.8520005395195113,
          -0.33620275491493473,
          -0.2949693814635369,
          0.4489461826000164,
          0.014885972311992,
          0.855836725419263,
          0.45160126505308873,
          -0.38865056129272163,
          0.8611468903254077
         ]
        },
        {
         "marker": {
          "color": "#A2D5F2",
          "size": 7
         },
         "mode": "markers+text",
         "name": "Crack",
         "opacity": 0.9,
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette"
         ],
         "textfont": {
          "color": "black",
          "family": "sans serif",
          "size": 15
         },
         "type": "scatter",
         "x": [
          -1.6670229398812533,
          -1.2964186060104186,
          -1.6952067528870434,
          -1.5395450090369056,
          -0.792226222853898,
          1.0104585209758588,
          -0.5852441815472817,
          -1.1430187322612817,
          -1.1737740737193374,
          1.8905898278712439,
          -0.7182281906285999,
          0.38789864795807,
          1.5484117446070276,
          -1.3236501505143543,
          0.5785274598921378,
          -0.7669226910270405,
          -0.9207314267832165,
          0.7129826542412637,
          -0.9096325521869237,
          -1.2341919127643928,
          -0.3194290234792543,
          -1.2004708606399275,
          -0.9988699911519783,
          1.0700642775547187,
          -0.9735482356057502,
          -0.48369723598731457,
          1.425169589171444,
          -0.2719828319534019,
          -1.230359962527642,
          -1.0183047804037573,
          -1.0144721119787703,
          1.1404284841130043,
          -0.9899624223137733,
          0.6552071553621647,
          -1.1281639603293627,
          0.28826257191697013,
          0.8873340316995496,
          -0.950494192775588,
          0.8384881498928788,
          -1.4494352807195598,
          0.9530009345724867,
          1.065945715164562,
          -0.08517594496844898,
          -0.5306040554495299,
          -1.6177538105346845,
          -1.1478565057728551,
          1.0840981894516053,
          1.5113140467715758,
          -0.0408258266010053,
          0.7837765259494756,
          0.03224088795939092,
          -0.7148401588672199,
          -0.5612804464580872,
          -0.24294397612205001,
          -0.23045497820980176,
          -0.9493325171790621,
          1.0451261233595455,
          -1.027123424546907,
          -0.20452327941898923,
          -0.5105905936424872,
          -0.6685649067296693,
          -1.0081017021414862
         ],
         "y": [
          -0.484776133756384,
          0.291365561634937,
          -0.2948444612963159,
          -0.2493949574292428,
          -0.7056406856322139,
          -0.1491636960645718,
          -1.0899694958192394,
          -0.25846800724091623,
          0.07327430482591182,
          0.3519335812054387,
          0.26348183373389455,
          -0.88834819065414,
          0.23945215074969736,
          0.26576062974318876,
          -0.3752212842440279,
          0.09234838599018738,
          0.41252904213650143,
          -0.5588048876666992,
          -0.3761292274034129,
          -0.2579531625993765,
          -0.35788218260458243,
          -0.35545601308209485,
          -0.5461208562561647,
          -0.051963896904545975,
          -0.5489742393961088,
          0.3646996316022032,
          0.11103675471864903,
          -0.7141752800943071,
          -0.27406744928213295,
          0.448885166076982,
          0.03129294394309736,
          -0.23292395490498433,
          -0.5713631466000435,
          -0.3501024070665164,
          0.001847272764791992,
          -0.6739782118946651,
          -0.3038082480858521,
          0.3580133812361711,
          -0.26884152357117075,
          -0.3098845638588667,
          -0.25570737139529354,
          -0.2550587088735288,
          -0.8456962323893231,
          -0.886733112816244,
          -0.33900353312329295,
          0.1459684996012387,
          -0.34647649343785086,
          0.20965402396055074,
          -1.1673054603089352,
          -0.24296310329823528,
          -0.8649036601323075,
          -0.5202516855913657,
          -0.2178910955357958,
          -0.6700064577756808,
          -0.8871608711248395,
          -0.3461162643918566,
          -0.08046868815124153,
          -0.5476970681727841,
          -0.6274841729885812,
          0.027741154355794936,
          0.7892143332830095,
          0.2005294156471246
         ]
        },
        {
         "marker": {
          "color": "green",
          "size": 40
         },
         "mode": "markers+text",
         "name": "Searched player",
         "opacity": 1,
         "text": [
          "L. Messi"
         ],
         "textfont": {
          "color": "black",
          "family": "sans serif",
          "size": 20
         },
         "type": "scatter",
         "x": [
          -1.6670229398812533
         ],
         "y": [
          -0.484776133756384
         ]
        }
       ],
       "layout": {
        "autosize": false,
        "height": 1000,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 20
         },
         "text": "ACP - Fifa Players"
        },
        "width": 1000,
        "xaxis": {
         "title": {
          "text": "Componente 1"
         }
        },
        "yaxis": {
         "title": {
          "text": "componente 2"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"b34bac28-f972-4c0c-8270-f2005cea5eb9\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"b34bac28-f972-4c0c-8270-f2005cea5eb9\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'b34bac28-f972-4c0c-8270-f2005cea5eb9',\n",
       "                        [{\"marker\": {\"color\": \"red\", \"size\": 3}, \"mode\": \"markers\", \"name\": \"Average player\", \"opacity\": 0.6, \"text\": [\"M. de Ligt\", \"F. de Jong\", \"R. Varane\", \"N. S\\u00fcle\", \"S. Milinkovi\\u0107-Savi\\u0107\", \"Rodri\", \"Sa\\u00fal\", \"Fabinho\", \"A. Robertson\", \"J. Gim\\u00e9nez\", \"C. Lenglet\", \"Bruno Fernandes\", \"R. Lukaku\", \"K. Manolas\", \"D. Alaba\", \"M. Icardi\", \"Carvajal\", \"H. Ziyech\", \"Z. Ibrahimovi\\u0107\", \"A. G\\u00f3mez\", \"G. Higua\\u00edn\", \"B. Matuidi\", \"G. Bale\", \"Marcelo\", \"A. Witsel\", \"Alex Sandro\", \"Iago Aspas\", \"Koke\", \"J. Rodr\\u00edguez\", \"Allan\", \"J. Sancho\", \"K. Havertz\", \"O. Demb\\u00e9l\\u00e9\", \"Jo\\u00e3o Cancelo\", \"D. Alli\", \"L. Hern\\u00e1ndez\", \"Arthur\", \"M. Depay\", \"L. Goretzka\", \"J. Brandt\", \"K. Coman\", \"S. Gnabry\", \"N. Fekir\", \"Luis Alberto\", \"Alex Telles\", \"S. de Vrij\", \"Felipe Anderson\", \"Pepe\", \"Jo\\u00e3o Moutinho\", \"M. Ham\\u0161\\u00edk\", \"Sokratis\", \"Lucas Leiva\", \"M. \\u00d6zil\", \"Javi Mart\\u00ednez\", \"E. D\\u017eeko\", \"G. Wijnaldum\", \"I. Peri\\u0161i\\u0107\", \"M. Mand\\u017euki\\u0107\", \"A. Vidal\", \"J. Boateng\", \"Azpilicueta\", \"Jos\\u00e9 Callej\\u00f3n\", \"I. G\\u00fcndo\\u011fan\", \"Paulinho\", \"K. Walker\", \"Canales\", \"Douglas Costa\", \"Pizzi\", \"D. Tadi\\u0107\", \"J. Ili\\u010di\\u0107\", \"R. Mahrez\", \"E. Vi\\u0161\\u0107a\", \"Felipe\", \"Fabi\\u00e1n\", \"A. Romagnoli\", \"G. Lo Celso\", \"T. Alexander-Arnold\", \"L. Jovi\\u0107\", \"A. Milik\", \"A. Martial\", \"Anderson Talisca\", \"J. Tah\", \"C. Tolisso\", \"Gon\\u00e7alo Guedes\", \"N. P\\u00e9p\\u00e9\", \"M. Akanji\", \"M. Rashford\", \"J. Stones\", \"A. Rabiot\", \"Grimaldo\", \"T. Werner\", \"T. Lemar\", \"D. S\\u00e1nchez\", \"Marco Asensio\", \"L. Digne\", \"J. Draxler\", \"Y. Carrasco\", \"Borja Iglesias\", \"W. Zaha\", \"Paco Alc\\u00e1cer\", \"Morata\", \"S. Haller\", \"William Carvalho\", \"F. Bernardeschi\", \"D. Djen\\u00e9\", \"Oscar\", \"Bartra\", \"Pablo Sarabia\", \"Lucas Moura\", \"F. Thauvin\", \"Jorginho\", \"V. Kompany\", \"Ra\\u00fal Albiol\", \"F. Quagliarella\", \"Falcao\", \"Miranda\", \"C. Vela\", \"E. Garay\", \"R. Nainggolan\", \"E. Banega\", \"Diego Costa\", \"S. Khedira\", \"David Luiz\", \"M. Kruse\", \"J. Henderson\", \"G. Sigur\\u00f0sson\", \"A. Ramsey\", \"Illarramendi\", \"D. Blind\", \"N. Otamendi\", \"J. Cuadrado\", \"I. Gueye\", \"K. Kampl\", \"Rodrigo\", \"C. Ar\\u00e1nguiz\", \"W. Ben Yedder\", \"F. Acerbi\", \"Danilo Pereira\", \"A. Kramari\\u0107\", \"Louri Beretta\", \"Josu\\u00e9 Chiamulera\", \"Ronaldo Cabrais\", \"Oyarzabal\", \"L. Bailey\", \"Gabriel Jesus\", \"M. Kova\\u010di\\u0107\", \"A. Belotti\", \"N. Ke\\u00efta\", \"L. Torreira\", \"R\\u00faben Neves\", \"P. Kimpembe\", \"S. Bergwijn\", \"N\\u00e9lson Semedo\", \"D. Rugani\", \"A. Correa\", \"I\\u00f1aki Williams\", \"H. Lozano\", \"Gelson Martins\", \"T. Partey\", \"K. Demirbay\", \"J. Matip\", \"Suso\", \"S. Savi\\u0107\", \"A. R\\u00fcdiger\", \"Ricardo Pereira\", \"N. Tagliafico\", \"Muniain\", \"M. G\\u00f6tze\", \"T. Delaney\", \"Willian Jos\\u00e9\", \"Sergi Roberto\", \"N. Schulz\", \"K. Volland\", \"Nacho Fern\\u00e1ndez\", \"Gabriel Paulista\", \"J. Roussillon\", \"H. Maguire\", \"T. Hazard\", \"E. Forsberg\", \"F. Kosti\\u0107\", \"M. Politano\", \"Rafa\", \"D. De Rossi\", \"Aduriz\", \"Jes\\u00fas Navas\", \"Santi Cazorla\", \"H. Herrera\", \"L. Biglia\", \"Juan Mata\", \"O. Giroud\", \"S. Kj\\u00e6r\", \"Willian\", \"V. \\u0106orluka\", \"M. Arnautovi\\u0107\", \"A. S\\u00e1nchez\", \"Giuliano\", \"A. Kolarov\", \"M. Balotelli\", \"Marlos\", \"Taison\", \"B. Dost\", \"G. Bonaventura\", \"Pedro\", \"L. de Jong\", \"S. El Shaarawy\", \"Ander Herrera\", \"X. Shaqiri\", \"M\\u00e1rio Fernandes\", \"S. Coates\", \"C. Bakambu\", \"T. Meunier\", \"K. Bellarabi\", \"J. Lingard\", \"Q. Promes\", \"J. Vardy\", \"D. Zapata\", \"Morales\", \"Juiano Mestres\", \"Rosberto Dourado\", \"E. Schetino\", \"J. Sildero\", \"L. Mart\\u00ednez\", \"H. Aouar\", \"T. Ndombele\", \"\\u00c9der Milit\\u00e3o\", \"D. van de Beek\", \"V. Lindel\\u00f6f\", \"Dani Ceballos\", \"Pablo Fornals\", \"E. Can\", \"Gay\\u00e0\", \"David Neres\", \"P. Zieli\\u0144ski\", \"G. Xhaka\", \"Rafinha\", \"G. Kondogbia\", \"M. Sabitzer\", \"L. Shaw\", \"J. Mart\\u00ednez\", \"A. Doucour\\u00e9\", \"W. Ndidi\", \"W. Orban\", \"A. Plea\", \"Y. Poulsen\", \"R. Fraser\", \"M. Ginter\", \"R. Guerreiro\", \"Jo\\u00e3o M\\u00e1rio\", \"Thiago Mendes\", \"A. Izzo\", \"M. Brozovi\\u0107\", \"A. Ljaji\\u0107\", \"J. Corona\", \"L. Milivojevi\\u0107\", \"Gerard Moreno\", \"W. Weghorst\", \"Quaresma\", \"J. Mathieu\", \"J. Milner\", \"L. L\\u00f3pez\", \"B. Gomis\", \"M. Demb\\u00e9l\\u00e9\", \"Cesc F\\u00e0bregas\", \"L. Koscielny\", \"Jardel\", \"Renato Augusto\", \"Jos\\u00e9 Fonte\", \"A. Guardado\", \"L. Piszczek\", \"K. Gameiro\", \"D. Payet\", \"Be\\u00f1at\", \"B. H\\u00f6wedes\", \"M. Sissoko\", \"M. Parolo\", \"Fernando\", \"N. Gait\\u00e1n\", \"S. Giovinco\", \"Luiz Gustavo\", \"N. Nkoulou\", \"N. Mati\\u0107\", \"Marcos Alonso\", \"H. Mkhitaryan\", \"Andr\\u00e9 Almeida\", \"A. Florenzi\", \"E. Zahavi\", \"F. V\\u00e1zquez\", \"Lucas V\\u00e1zquez\", \"Dani Garc\\u00eda\", \"M. Acu\\u00f1a\", \"Laure Santeiro\", \"J. Frendado\", \"S. Ardero\", \"L. D\\u00e1lves\", \"S. Mand\\u00edquez\", \"Jo\\u00e3o F\\u00e9lix\", \"N. Barella\", \"J. Gomez\", \"A. Christensen\", \"Y. Tielemans\", \"Mario Hermoso\", \"Carlos Soler\", \"M. Caldara\", \"H. Winks\", \"K. Pi\\u0105tek\", \"Diogo Jota\", \"Marcos Llorente\", \"F. Mendy\", \"Melendo\", \"R\\u00faben Dias\", \"H\\u00e9ctor Beller\\u00edn\", \"B. Mendy\", \"M. Demb\\u00e9l\\u00e9\", \"Santi Mina\", \"Rony Lopes\", \"J. Correa\", \"T. Bakayoko\", \"M. Eggestein\", \"Odriozola\", \"M. G\\u00f3mez\", \"Sergi Darder\", \"K. Zouma\", \"L. Paredes\", \"N. Ak\\u00e9\", \"E. Hysaj\", \"Andr\\u00e9 Gomes\", \"K. Bald\\u00e9\", \"J. Weigl\", \"V. Rongier\", \"Yeray\", \"Loren\", \"R. Rodr\\u00edguez\", \"A. Oxlade-Chamberlain\", \"Campa\\u00f1a\", \"A. Mandi\", \"Deulofeu\", \"Bernat\", \"M. Keane\", \"J. Quintero\", \"Samu Castillejo\", \"A. Rebi\\u0107\", \"E. Bailly\", \"M. Almir\\u00f3n\", \"M. Lazzari\", \"M. Lanzini\", \"Sergi G\\u00f3mez\", \"H. Vanaken\", \"M. Hinteregger\", \"M. Nastasi\\u0107\", \"Gabriel\", \"C. Wilson\", \"J. Guilavogui\", \"D. Klaassen\", \"P. Kade\\u0159\\u00e1bek\", \"C. Kramer\", \"I\\u00f1igo Mart\\u00ednez\", \"Portu\", \"Manu Trigueros\", \"H. \\u00c7alhano\\u011flu\", \"M. Dabbur\", \"M. Halstenberg\", \"M. Vecino\", \"Joaqu\\u00edn\", \"W. Rooney\", \"Nani\", \"J. Mascherano\", \"A. Gignac\", \"Jorge Molina\", \"L. Perrin\", \"Charles\", \"S. Radu\", \"D. Rose\", \"E. Lamela\", \"Ra\\u00fal Garc\\u00eda\", \"Naldo\", \"D. Wass\", \"Pedro Le\\u00f3n\", \"I. Piatti\", \"M. D\\u00edaz\", \"M. Valbuena\", \"L. Bender\", \"S. Bender\", \"E. Capoue\", \"Antunes\", \"F. Fazio\", \"M. Hasebe\", \"Sidnei\", \"D. Perotti\", \"L. Pratto\", \"S. Feghouli\", \"K. Trippier\", \"M. Musacchio\", \"Y. M'Vila\", \"L. Stindl\", \"F. Smolov\", \"S. Nzonzi\", \"F. Coquelin\", \"Hulk\", \"K. Strootman\", \"C. Smalling\", \"K. Glik\", \"E. Salvio\", \"K. Vogt\", \"R. Pereyra\", \"Y. Belhanda\", \"Sergi Enrich\", \"D. Lovren\", \"S. Verdi\", \"L. Muriel\", \"D. Vida\", \"Ibai G\\u00f3mez\", \"S. Berghuis\", \"Cristian Tello\", \"Ismaily\", \"F. Ghoulam\", \"S. San\\u00e9\", \"S. Zaza\", \"S. Vrsaljko\", \"Pozuelo\", \"R. Jim\\u00e9nez\", \"Bernard\", \"T. Stepanenko\", \"I. Marcone\", \"Jony\", \"Mata\", \"M. Marega\", \"Everton Andr\\u00e3o\", \"Welington Dano\", \"M. Baldona\", \"M. N\\u00e9rez\", \"Vin\\u00edcius Jr.\", \"R. Bentancur\", \"Lucas Paquet\\u00e1\", \"A. Wan-Bissaka\", \"I. Konat\\u00e9\", \"Merino\", \"S. Berge\", \"L. Pellegrini\", \"F. Chiesa\", \"Dani Olmo\", \"R. Zobnin\", \"A. Saint-Maximin\", \"C. Pav\\u00f3n\", \"T. Kehrer\", \"C. Pulisic\", \"F. Kessi\\u00e9\", \"A. Hakimi\", \"D. Samass\\u00e9kou\", \"Marc Roca\", \"D. Zagadou\", \"V. Tsygankov\", \"De Tom\\u00e1s\", \"R. Loftus-Cheek\", \"S. Lobotka\", \"J. Denayer\", \"L. Klostermann\", \"A. Golovin\", \"A. Diallo\", \"B. Pavard\", \"M. Rashica\", \"B. Chilwell\", \"Wesley\", \"T. Sou\\u010dek\", \"Junior Firpo\", \"J. Ward-Prowse\", \"A. Januzaj\", \"Ot\\u00e1vio\", \"N. Stark\", \"A. Iwobi\", \"J. Gbamin\", \"Munir\", \"Angeli\\u00f1o\", \"J. Maddison\", \"Andr\\u00e9 Silva\", \"Richarlison\", \"S. Nakajima\", \"Raphinha\", \"E. Dier\", \"L. Trossard\", \"Jonny\", \"M. Sanson\", \"J. Lerma\", \"L. Dubois\", \"F. Grillitsch\", \"L. Cabrera\", \"R. Barkley\", \"J. Murillo\", \"J. Tarkowski\", \"J. Brooks\", \"M. Batshuayi\", \"M. Arnold\", \"S. Kola\\u0161inac\", \"F. Sch\\u00e4r\", \"Ricardo Horta\", \"L. Alario\", \"Mariano\", \"R. Aguilar\", \"F. Balbuena\", \"S. Mustafi\", \"G. Pezzella\", \"D. da Costa\", \"W. Boly\", \"B. Davies\", \"Fred\", \"M. Samatta\", \"Diego Carlos\", \"K. Toko-Ekambi\", \"R. Malinovskyi\", \"M. Sakho\", \"J. King\", \"H. Seferovi\\u0107\", \"Laguardia\", \"P. Jones\", \"S. Aurier\", \"L. Spinazzola\", \"K. Lala\", \"S. Arias\", \"D. Baselli\", \"T. Savanier\", \"Leo Baptistao\", \"J. Veltman\", \"D. Zappacosta\", \"Wu Lei\", \"David Villa\", \"B. Y\\u0131lmaz\", \"S. Kalou\", \"Dante\", \"M. Debuchy\", \"E. Lavezzi\", \"Borja Valero\", \"M. \\u0160krtel\", \"J. Evans\", \"D. Valeri\", \"N. Moisander\", \"D. Criscito\", \"A. Candreva\", \"Marcano\", \"K. Boateng\", \"A. Fern\\u00e1ndez\", \"Nacho Monreal\", \"\\u00c1ngel\", \"Granero\", \"\\u00c9der\", \"R. Vormer\", \"S. Coleman\", \"A. Lallana\", \"A. Modeste\", \"M. Gradel\", \"Yuri Berchiche\", \"Mariano\", \"O. Toprak\", \"N. Kalini\\u0107\", \"C. Stuani\", \"K. Asamoah\", \"Alex Teixeira\", \"S. Luli\\u0107\", \"S. Rond\\u00f3n\", \"S. Kagawa\", \"J. Wilshere\", \"Cote\", \"Iago Falqu\\u00e9\", \"J. Pastore\", \"Maicon\", \"F. Orellana\", \"Elkeson\", \"Kike Garc\\u00eda\", \"Escudero\", \"Mario Gaspar\", \"V\\u00edctor Ruiz\", \"I. Belfodil\", \"A. Yarmolenko\", \"W. Khazri\", \"E. P\\u00e9rez\", \"D. Caligiuri\", \"Danilo\", \"N. Pallois\", \"Vitolo\", \"M. Badelj\", \"Z\\u00e9 Lu\\u00eds\", \"D. Su\\u00e1rez\", \"Roque Mesa\", \"M\\u00e1rio Rui\", \"T. Inui\", \"D. Cheryshev\", \"C. Bacca\", \"A. Samaris\", \"J. Hector\", \"Rub\\u00e9n Pe\\u00f1a\", \"A. Hamdallah\", \"D. Benedetto\", \"L. Sigali\", \"Ra\\u00fal\", \"Petros\", \"Dyego Sousa\", \"Soares\", \"Rub\\u00e9n Alcaraz\", \"Maikel Catarino\", \"Ant\\u00f4nio Chiamuloira\", \"Melvin Parrela\", \"Luimo Boas Santos\", \"D. Lenzado\", \"E. Riquero\", \"E. Aguerro\"], \"type\": \"scatter\", \"x\": [1.093529249461258, -0.015142992894534173, 1.2726469097387774, 1.8625805082496447, 0.14430381343330845, 0.48134525304271863, 0.09383916387606614, 0.5027562488397577, 0.27934266209035696, 1.7229593078506604, 1.1575819794767146, -0.6543651644714024, -0.4901674537030536, 1.9617331646236986, -0.005926362460696614, -0.7352456743161876, 0.545507241185545, -0.8511170119353709, -0.6774218511830395, -1.2609133621248039, -0.8728357732852086, 0.4089174674722236, -0.6583522690278406, -0.13172687838812108, 0.24684081431574117, 0.2913970929087435, -1.1821736163099015, -0.12316892306126583, -0.9056197834869149, 0.2859799142378293, -1.1345525996877233, -0.8224583451644719, -1.2631044638731816, -0.01780090017490749, -0.12964558465518938, 0.8305379677487733, -0.14702203167859662, -1.1149143280454987, -0.013288492747890197, -0.9183252386171624, -1.3323345779667468, -0.9738362919577653, -1.1639965938928243, -0.8351026272816162, -0.037739199297682366, 1.401517142392075, -0.8195459049188397, 1.4420926767497237, -0.24773976595693373, -0.24921146102732897, 1.4677151245184734, 0.44721015143942977, -1.2640068529513437, 1.3290022304290816, -0.36958225401690775, -0.10354751601695807, -0.39709194572084644, 0.13147154074400225, 0.24522157212699966, 1.210534075215784, 0.6499744512659811, -0.918301985477884, -0.2196070880964404, 0.13718459141582762, 0.32548264795818244, -0.7877787210119258, -1.1626009756341185, -0.5488221371120807, -0.9892013279647349, -0.9577320217508231, -1.2417135797188417, -0.9897623984030656, 1.6299542589598748, -0.049347860501572784, 1.5795476141242863, -0.4396128767230349, 0.1396878088653918, -0.9150112469892419, -0.6080610668733534, -0.9087013505079276, -0.5797999446424876, 1.8668416496383622, 0.12875787458245314, -0.9897606253094461, -1.214317517118539, 1.110454672811558, -0.8527969561956225, 1.2243902837613034, 0.15281761495854448, -0.0802615846382569, -0.9699209872953733, -0.6878492876660327, 1.4155685001514349, -0.9765137817233976, 0.15006707845546172, -0.660689095823061, -1.0895067743817552, -0.44804315877771456, -1.0314201754040204, -1.0809244439816252, -0.77740714036711, -0.13095837455800924, 0.8581795912311934, -0.6479896558299076, 1.3230615250068618, -0.7514999703996268, 0.664738440666871, -0.7149327213501069, -0.9770339177803259, -0.9829015912341995, 0.005519232281078351, 1.2655898185524945, 1.5836531243844947, -1.1577371373284018, -0.6472330056327308, 1.2573154866300065, -1.1862497115458877, 1.2300022728340079, 0.11220123297920455, -0.04468266467958917, -0.22615246054248886, 0.48858714211492216, 0.6945669948346964, -0.8847149689740524, 0.2188616325624397, -0.48060002458544454, -0.1632541707417269, 0.2803907883361974, 0.41889367185612886, 1.2555879050077667, -0.3998173535071752, 0.6560181766797779, -0.4431342641354577, -0.81552672538089, -0.11256466033565132, -1.1660959318255977, 1.4274459825155112, 0.7572048163554432, -1.165602292999863, -0.5586977411401371, 1.2208747602300565, -1.0722326631177117, -0.976163144539493, -1.15165360718189, -1.0045137135174431, -0.2825392059247318, -0.47377410187280056, -0.3870533293884648, 0.10146000593275478, -0.06033313200964133, 1.210767786210475, -0.9078372608537373, 0.3566037891923346, 1.5675493264446796, -0.7965988846890584, -0.6769391469162986, -0.9349209517655289, -0.926876957665701, 0.4399836643345381, -0.36179376605290925, 1.265511823652482, -1.367005042309995, 1.8105347352780587, 1.3374068124114016, 0.14567760244303207, 0.5083610649718011, -0.8008526334659892, -0.7108903261671804, 0.4157573375052958, -0.34952120973063894, 0.17072923813319119, 0.338121607197659, -0.7479213953446732, 1.2296893135238172, 1.065128250360813, 0.20693339769934319, 1.2898568527624361, -0.9627251541553578, -0.9983048679162175, -0.239320232635391, -1.1075847570779214, -0.8818469270116963, 0.692934388905102, -0.19157400261717575, -0.39192138227013523, -0.45793469355011973, 0.2546141892621039, 0.18035069507585735, -1.1607931264180642, -0.2331498556487378, 1.274141157047157, -0.8920702407156282, 1.2208559322915264, -0.5191344800129479, -0.8740221180823334, -0.7718996538810242, 0.25283619334084523, -0.8894455255833763, -0.8553012522560153, -0.8867525124062569, 0.07157695314617585, -0.2402386818949843, -0.931275087828212, -0.1316098886699307, -1.011815565393393, 0.19284221902335125, -0.8992820419949509, 0.5240902198294859, 1.7314208643028521, -0.8792597354914803, 0.3041747972003403, -0.8786711127248028, -0.6079921697788693, -0.9629325206617596, -0.35123389867847477, -0.3375176633780099, -0.7352084596364049, 0.9660070666914622, 0.41071676985896405, 1.1588302570801599, -0.9238580043144451, -0.5715177890578796, -0.3155918657899994, -0.03891553563909665, 0.8896292844065015, -0.045898048440508016, 0.8483138259160578, -0.10992127545693899, -0.12808992465849792, 0.40341536821089163, 0.05878878934296154, -1.0132021118676624, -0.29781650839718277, 0.3394733377322612, -0.31966324228084597, 0.4272265625455252, -0.42602188514021855, 0.43917226380986424, -1.0320655234468243, 0.4449101435560226, 0.6951131281361403, 1.802687519898914, -0.7763018789461639, -0.08501594747416193, -0.9692434764911273, 1.0221100115382546, -0.5612280280028489, -0.23998231226124792, 0.12491134970381743, 1.6212893305526754, 0.09044858787812933, -1.0028155116145463, -0.6264175204609866, 0.5627712476334236, -0.5110209007931021, -0.09468777752272997, -1.3199035873157006, 0.8013758956879241, 0.10051181951621495, -0.6370593089200988, -0.5476632930592039, 0.20171301349681825, -0.35906254068803384, 1.3586870861707177, 1.8134588470319088, -0.04097012168241941, 1.7393527160131073, -0.1433990986751227, 0.45802203476088715, -0.7939332456404855, -0.8883679982836535, -0.0594838606195758, 1.2551142959505843, 0.3702792414804345, 0.3421395152774433, 0.7848217752184967, -0.8837295076842785, -1.4919707944338625, 0.878551552956964, 1.0461718744689679, 0.6737044044436561, 0.2633118750150637, -0.5872278547695321, 0.6381588697337002, -0.16888207282698617, -0.793648858962981, -0.17528971576376554, -0.47616586175739384, 0.551783073693705, -0.1528201375479127, -1.267535496641098, 0.9508910599073885, -1.2621523852274275, -0.48084544567597115, -0.45241231315728664, -0.8580331444905398, -0.009469815191282871, 1.2534647282275693, 1.463921999112927, -0.26619090881642915, 0.754852947708467, -0.32967952589153066, 1.6930016018362055, 0.0717704915937177, -0.46060003189380766, -0.5569197872181216, 0.7448221474693401, 0.2549343493070891, -0.5051240847348489, 1.6466992493400046, 0.34951830294699254, 0.5513662835940923, -0.6661507131580198, -0.35568727464523986, -1.143482350178569, -0.8166640331447172, 1.0447222499456095, 0.16957463837811157, 0.34632928678334224, -0.47251165331022527, 0.015387597806095756, 1.3047339247355252, 0.03542652046907927, 0.748239186404297, 0.7438915673521367, 0.19527503646383984, -0.9501493731374474, 0.6286797163208482, -0.11803022410279865, 1.1654440689261432, -0.6723265202589421, 0.16591701673909015, -0.2801214376960569, 0.019570177153234235, 0.8725275960372325, -1.2555039389855238, -0.06179537710372034, 1.2829770695521108, -1.1913481922927094, -0.8676264320992775, -0.6511323101546269, 1.258416491204627, -0.7610121819054259, -0.4834285058441462, -1.1489089142754045, 1.2858701193147855, -0.07533702544846098, 0.9763153792986404, 1.4190125726126963, 0.2854374275994673, -0.6340024886813783, 1.067646070436934, 0.04171288563110579, 0.6602233374632811, 0.8301108411642998, 1.0391736258692623, -0.3312640693284341, 0.009410082631397842, -0.6213452076972116, -0.742127510153029, 0.5464444804629068, 0.30264672504680734, -0.8158116955565247, -0.4019971544172351, -1.0378905172296442, 0.7216724597633307, -0.3557962802116049, -0.1810847853374007, 0.9384484558029854, -0.6205083048993675, 0.8264206153681324, 0.3608817055254504, -0.5614012084811468, 0.21076356939446356, 1.0512799887724251, -0.0038750620879938005, -0.8085712290803256, -0.6535524905737584, 0.07972828093509023, -1.1701408468182728, 0.732278896758715, 1.2583556923955774, 0.608675628331114, 0.14799856355603497, 1.9227499072660128, 0.7029874434443941, 1.1769388061334851, -0.8767433857959528, -0.007488322706468554, -0.8670469319113737, 0.1933901903604244, 1.056742132224221, 0.4340015556281379, -0.3894663069595212, -0.8331459820807247, 1.0973696369063797, 0.39251833518897633, -0.5716281299973063, 0.35279921333887587, 1.4159462016012647, 2.080022481085424, -0.5121658990623803, 0.9182338424368122, -0.31554742384247875, -0.43366822064558197, -0.3335421803460602, 1.639480233571107, -0.9618973549410277, -1.0697120754914964, 1.3495539917416717, -0.534284529585301, -0.9705677410994165, -0.7762551505392317, 0.11755783533902693, 0.3054598224875862, 1.337449634331132, -0.2070462265641193, 0.5530914899456415, -0.6689312307621649, -0.36297667399763067, -1.150240326542727, 0.6760427446312381, 0.6374657897667346, -0.5843478518703666, -0.45780753981599603, -0.21328006253245024, 0.45263022893783367, 0.27972666642497857, 0.45263022893783367, 0.30722716101818776, -1.1223675128147896, 0.19516200429566716, -0.3029410847080335, 0.6217021180742193, 1.5777543154524245, 0.1262272287685287, 0.7958275244994931, 0.07450624439344573, -0.7797080080163346, -0.7581777054008579, 0.2982533781533029, -1.1761121194192747, -0.7214680686457238, 1.0507283924755246, -0.8723575039242715, 0.35073432606349797, 0.19771206592432541, 0.7176496464744113, 0.4168606594047357, 1.8458053458424337, -0.7962334591614332, -0.6463925454133728, 0.12573205850783697, 0.10245185218970025, 1.1907784205771217, 0.9920890650895047, -0.2654053178855047, 0.943931353601556, 0.8599801231904542, -0.8718165874808218, 0.5536202557772418, -0.243553881630382, 0.5657190225982887, 0.4410782164669458, -0.3216270886787293, -0.9979097214316859, -0.7604108793092614, 0.9811475926125433, -0.755634268849079, 0.6214850629016011, -1.0169694901036326, -0.025207307264164886, -0.9412939035392702, -0.39189599589266977, -0.5850570431435002, -1.1297033410264175, -0.7220696233867049, 1.0200616197428334, -1.2127288744841316, 0.5219205343604387, -0.024420169785090786, 0.47808655074146805, 0.3330897972942009, 0.21293513858268995, 1.6288950498201702, -0.16913658128678985, 1.2409763491266912, 1.2512486709000041, 1.430545814593453, -0.6409652170911148, -0.10303922533030857, 0.701510992442207, 0.6676468565955911, -0.9309377010538616, -0.5131085528451768, -0.3915368727630513, 0.4749652004662409, 1.807511296188057, 1.0258517947114036, 1.6052709102933989, 0.7195679835073407, 1.5472882374662633, 0.5286895789207942, -0.08916200033224717, -0.6812314309206358, 1.1120319808204517, -0.8678598041168412, -0.15388715795301805, 1.6510630580288828, -0.7053788317076696, -0.16990338620388273, 1.6638371238764973, 1.3068388773970108, 0.5125289970226451, 0.2896330996612303, 0.33719639168789567, 0.588417186823272, -0.23339564887681372, -0.24432921746162203, -0.8427281239672055, 1.0609301892138558, 0.2946368259960211, -0.7985578320703659, -0.8626074813482504, -0.5176591545751096, -0.8223269381387986, 1.2514882176566124, 0.372364144682632, -0.9273474934519735, -0.16168172135327963, 1.8351412323196075, 1.6780434987706092, -0.756884358546864, 1.0047896287002824, 0.46422760504943017, -0.4349548140776577, 1.3927214462366053, -0.04050420687886913, 0.09302379189665337, 0.5406163448331016, -0.7229639715574538, 0.06466860900358765, -1.1709330691438904, 0.20008339441506767, 0.3468640236701085, -0.22623567658001756, -0.43448722902504927, -0.7885797115538222, 0.48782591882383997, 0.13448931511612194, 1.278777909092132, -0.32286007118337856, -0.24647201100610822, 0.10524253315789876, -0.7910463282188948, 0.13438522879661396, -0.2636026353688034, -0.6149417766102595, -0.1936095166720878, 0.5871402316170584, -1.0332104779645321, -0.38245465605172746, 1.3475128479654213, -0.9588419259058202, -0.5162331127775573, -0.32887960731873844, 0.4333407718408982, 0.4569877301133533, 1.3779041168653652, -0.45699594446435576, -0.6382785326874156, -0.7508478744609893, 0.2718071294938753, -0.03256689161223365, 0.31772426577603347, 1.5252552892122606, -0.6445401349618216, 0.4883500902178734, -0.46198580257616656, 0.3506356166091338, 0.3573857716898045, 0.21246976771155715, -0.90858284629784, -0.3987469972867594, -0.6901677135956169, 0.761601927813514, 0.46588722821898265, -0.008875753840154333, -0.7585777353967925, -0.6134610410201569, 1.5583053773537383, 1.3811318351740165, 0.405517082903486, -0.11405651992250206, -0.17769581293081887, 0.4144713330253, 0.5039826180824553, 1.355269961002532, 0.5570640502210515, -1.0149170010088688, 1.3525784052956968, 0.3595481947846112, -1.0203001124225395], \"y\": [0.04352798115247077, -0.8005638015698715, 0.13738098761543657, 0.5578724391878837, -0.3379332625159552, -0.4379549503841231, -0.4548549707631786, -0.4884256740921628, -0.6604165851929176, 0.48354898012582037, -0.08918843570964564, -0.6779878086289225, 0.9394535525688561, 0.5646760637935975, -0.605227690402733, 0.9851625775253565, -0.6649477580679661, -0.4520544141810253, 0.8524023218525045, -0.25748003169876177, 0.8793510820594372, -0.5482001024357335, -0.06513083193336283, -0.7327911492150323, -0.4898680416643692, -0.5137162067144916, 0.29023166714720544, -0.7561555773804571, -0.3050124221615494, -0.7994270175504692, -0.03251806666322672, 0.11853623398959351, -0.10720298289212624, -0.731459643923081, -0.2918851140728006, -0.20682762630071924, -0.7208337899692286, 0.2544902654665916, -0.4307530289319407, 0.05983966722285005, 0.24396057051094747, -0.0156734706023215, 0.05683652414442038, -0.264771079614864, -0.7179486637803643, 0.07138475580881125, -0.5045815112273961, 0.35123746079782436, -0.7002472721154868, -0.47334512237162213, 0.5158753129910312, -0.5287434139080118, 0.18088367044399176, 0.12476067444985096, 0.755116253669886, -0.5737501302001121, -0.05676059832664742, 0.3637080596116223, -0.5549390508506278, 0.04577405069780729, -0.5321418667010451, 0.13261655639262118, -0.6561961476599153, -0.2981001292336392, -0.43959078356642195, -0.3083862025694177, -0.20985911376995106, -0.5714589089898817, 0.014017860519720118, 0.07209866766024198, -0.06718154934847724, -0.24581160805408753, 0.4388894267101332, -0.4920524633434915, 0.22921856248548889, -0.5664420965689296, -0.7241454102572773, 0.8077984529770437, 0.7683827960233176, 0.31014214752455344, -0.06180919213542409, 0.5149439154949746, -0.3837621704562575, 0.1656379018598858, 0.28606317278699195, -0.043172220698074595, 0.22671224089274364, -0.15518041721398404, -0.3875131312359522, -0.8346576301077359, 0.6132788852676864, -0.575640184952958, 0.2585274849715822, -0.1086816128186649, -0.6054899734853054, -0.19073390924027672, 0.1709728716570861, 1.0514212879634275, 0.41249964335318773, 0.5179277581219287, 0.9765395508533059, 0.8277396514035819, -0.1523235487723237, -0.39323668662423444, 0.04567802411996939, -0.37917812144032925, -0.29400615267072155, -0.4017012406936213, -0.07017657782439683, 0.10174795812485178, -0.6320960168691431, 0.2342737682439106, 0.18982154102710314, 0.5819626443251753, 0.6115213403869949, 0.2124359245494242, 0.36195150379364643, 0.2738713410148539, -0.7386271718175554, -0.7786046383826779, 0.874015595485808, -0.19042371846883505, -0.1313700875927289, 0.05781684337748173, -0.5401360189173349, -0.21796017328755402, -0.38390270630658724, -0.6800811387413359, -0.5740912627230075, 0.22523333938666898, -0.45646683655573855, -0.5215704766210849, -0.679700850051139, 0.3675200474694738, -0.7662458548459098, 0.14498563771770587, 0.24326828298400804, -0.10118722446624534, 0.4964931341212593, 1.2060022577340286, 0.15256160829648616, 0.05382477116553991, 0.09160858522607664, 0.3175168216104473, 0.3108161293082214, -0.6594245300919218, 0.9486061876432347, -0.6548637015210733, -0.8594395272532634, -0.5346354343442825, -0.010094943449556042, 0.21720344296439023, -0.46301090519643506, 0.35353845175736565, -0.16316996145764162, 0.5610313839433709, 0.1582920013419888, -0.10152334503715069, -0.34091468569980266, -0.5005758975967272, 0.1588744251589914, -0.01327243446530337, 0.49610401717512403, 0.17298600708020212, -0.6037212701093149, -0.39767306690339943, -0.33178371160996684, -0.47982514360487544, -0.35981171193411293, 1.019655219432683, -0.6081796801477484, -0.36423673689239944, 0.25001575491976125, 0.04528139522415932, -0.006644318054903006, -0.4478060808886697, 0.3304600400309176, -0.320145536530379, 0.107813032580612, -0.3123252921248235, -0.19567873253210066, -0.22881614289013255, -0.23982993406089856, 0.8751898905871074, -0.6518111206760254, -0.6252697650679698, -0.31266595281306964, -0.6847544428527178, -0.13561102232543704, 0.9984196050459312, 0.3434933292725036, -0.36417059487226183, 0.2519905874918481, 0.3326645488373136, 0.04079222161269011, -0.060138509393030545, -0.43520679317162275, 0.9284274682427497, -0.09699932816337015, -0.07096197182151093, 1.4287580726386562, -0.5239846678817774, -0.029868275322734714, 0.6934231280822979, 0.23397009566094287, -0.6425177262100631, -0.32347098525622414, -0.27962338662587877, 0.6556630425603727, 0.5576490025431962, -0.14972489179099452, 0.37679860967370943, -0.21291630961867242, 0.09447655028793897, 0.45012833262794777, 1.3116740955424155, -0.16812025080576265, 0.3092638507481155, -0.5296389567267376, 0.19713265392212032, 0.06413667633488448, 0.6080702948941298, -0.5162785911132507, -0.5464812764497691, -0.04866766938883747, -0.3299721281721132, -0.20834959083632512, -0.6495514570988166, -0.5590455697970534, -0.4259074398227366, -0.7089268173372375, 0.10344311295787319, -0.6177340634482623, -0.2800936168546762, -0.4478493847589056, -0.26800136457938223, -0.10143816445558293, -0.41921748944402176, 0.903079044144505, -0.23773270628241314, -0.2130634579662383, 0.6756972028848981, 0.40540202131977665, 0.6421856155101204, -0.3571804206355716, 0.1931805919882124, -0.8119001026211136, -0.4254103395853827, -0.5601381660634311, 0.4178998778111341, -0.5993826370346674, 0.05941165081477475, -0.4080734342196686, -0.17722824545752947, 0.6119214305568174, 1.3109213151887882, 0.2096353197649201, 0.003856794040782937, -0.6215833678333276, 0.2584003115386772, 0.9587594869988678, -0.3158164050775628, -0.2605892967599112, 0.17959200119319293, 0.8391489551386205, -0.3098005216062157, 0.5849570475608329, -0.6877185903687006, -0.22474435453155855, 0.27442451984333044, 0.09748369979114761, -0.49120952442528676, 0.25792712812886215, -0.2661735819049757, -0.35054965124986154, -0.15473169034874754, -0.05170356126863392, -0.1606569140548145, -0.07804551362752028, 0.07579894265854685, -0.09921071582324968, -0.3009811505439315, -0.20647824204342982, -0.27578766935797017, -0.5708917809775779, 0.365560208136144, 0.054993767003836916, -0.3666813964815524, -0.3741688139439963, -0.7071986430761493, 0.16964600861635892, 0.3297987821236984, 0.1643358437102142, 1.2567127838186467, 1.4591351605004463, 0.22020791771634782, -0.7422210074177799, 0.06246997261161778, 0.12975372832425877, -0.5290943679823606, -0.21747951363346477, -0.3295696946586488, 0.5993493859654091, -0.6053725845555319, 1.183357311032927, -0.029656923509619276, -0.2859421046277206, -0.3444456969004464, -0.38001907980157706, 0.5528148456811509, -0.32869863049412296, -0.32230462230314505, 1.104797202624481, 0.3150087638636469, 0.13526635205342863, 0.3728906741419809, -0.014063184722478635, -0.32039738000343887, -0.35937925959873374, 1.0670508601881876, -0.4227869454985792, 0.5754203559382775, -0.5458295360557637, -0.1903413928421331, -0.21211811151992183, -0.2704477499180646, 0.544621625793266, -0.3950212198014452, -0.6765013233671142, 0.17986216277085992, 1.2140198143093435, -0.4795453145007205, -0.5165397163776683, -0.45758007040591325, -0.19800333767661032, 0.24539515788892416, -0.7383766433154221, 0.3116128359890956, -0.06190455110680552, -0.025033049803337384, 0.644991944137625, 0.3843870982885521, -0.1687141835771296, -0.27019831580416936, 0.04853385389578635, 0.14409118077816488, -0.08995183165632312, 0.1949883659810081, 0.20957058781288446, -0.27906326509344603, 0.677167617977823, 0.08912938952219064, -0.13119619468673693, -0.1318289820534002, -0.1539200711173907, 0.03557561860825413, -0.07240911678332544, -0.2623220651164964, -0.4626358977191148, 0.8660199303671462, -0.06750551582500908, -0.2635491881343508, 0.03325532924551892, 0.048763044086094845, 0.0968880606934463, -0.31744456563072837, 0.7965296153345298, 1.0813314603030968, -0.019765154290850042, 0.9534247735890046, -0.04587643281202566, -0.43614278969688947, 0.047672642489004824, -0.054663813266448175, 0.4389865314366959, -0.47664962806572314, -0.14775317272209243, -0.02385963637391867, -0.645837785291405, -0.056005019896280275, -0.16678509550340356, 0.2204991869236806, -0.07799221577914472, -0.4751237891303785, 0.7424158122295244, -0.37591922785588744, 0.44201308578529364, 0.1690473828887782, 0.4414391754942619, 0.3815837169144971, -0.5921166810389599, 0.03043020273041159, -0.28009130369514185, -0.053196831757963726, 0.7563358191418815, 0.19451498572710268, -0.40606021088754424, 0.4054223659548551, -0.334390478688255, 0.6217330371741069, 0.9314177114037065, -0.0627976067408026, 0.05444043914829709, -0.2918789274108428, -0.15941513144673372, 0.6969143263424417, 0.5340547859337699, -0.40687956729069674, 0.734099554937936, 0.30817985836280504, -0.2686238484068213, 0.09619277573247537, -0.004692551489523355, -0.4083669100607451, -0.36664485533877567, 0.3579320948488695, 0.7827580824525147, -0.2657592184953047, -0.1975042139190971, 0.6436202204450437, -0.0798319502269136, -0.2024259090071279, -0.20002513059876184, -0.19388851324991505, 1.1797023517664225, 1.10515768218835, -0.37223459092959177, -0.45287679036051776, -0.37223459092959177, -0.47972762518331763, 0.33638197454890223, -0.35669938393365636, -0.1675725189203155, -0.21829699370560215, 0.44257771973542437, -0.18940407510015558, 0.029701431376976516, -0.3374441158439343, 0.1538433814837637, -0.2003158280927725, -0.4191350642300242, 0.4534213148943028, -0.0001496780454754973, 0.02900820793016925, 0.18377004531545948, -0.24379275918602894, -0.31217054677747125, -0.2939774714174551, -0.4183342135641913, 0.6187639751900339, -0.06309581633821303, 0.9826284967123642, -0.02318092533347431, -0.5249993258314953, 0.13785549487066787, 0.1978179345377991, -0.4750476653925795, -0.1273355887573886, -0.19343072903595723, 0.12072102648250899, -0.27412483792901465, 1.0122069547404238, -0.06150228970355728, -0.11598129539494251, -0.5397485143817133, 0.4033768015042712, -0.05283164890086053, 0.17061912966184836, 0.4886870321473073, -0.16072681942167788, 0.374397427983198, -0.5421212593795084, -0.13858486808716283, 0.7071827391934485, 0.4026971573995919, -0.09255178763726524, -0.07910685162351945, 0.1691593519011121, 0.3213739832952675, -0.32994767436991645, -0.302111510543799, -0.32549299978215745, -0.4460633524430078, -0.1794829939367519, 0.49064657982483956, 0.10564183708398488, 0.28565496424753456, 0.2413026587908625, 0.43832484011933776, 1.1266520657879353, -0.337769649757214, 0.09304147038990028, -0.007061738361363711, -0.07389475002667939, 1.2406615425192389, 0.7710517496404375, -0.3016954669933815, 0.7715108841749747, 0.26682828238548983, 0.758541234544611, -0.008132103485224527, 0.5176243105148781, -0.311915306325428, -0.6003542650609076, 0.9850328999243292, 0.33915065200621003, 0.9168657501393493, -0.07532426518992029, 0.37102197007727655, 0.6443375649530738, 0.724520122683263, 0.5895689750097702, 0.3958761839869953, -0.2144683161126557, -0.27066782986816734, -0.3194813819513519, -0.1623377136243085, -0.3239570165941503, -0.6924263337220251, 0.6525010639910588, 0.05351824093468631, -0.23696620578935068, 0.4610281386923583, 0.473951379049869, 1.0123904871911398, 0.4299849128193762, 0.19142252426819958, -0.2529886430136917, 0.18065240456285817, -0.4543658685176419, 0.8062303778188404, 0.485378922821872, 0.2597798746722538, -0.029991649002186725, -0.28842133796353103, -0.22210566857826378, 0.4577928105924855, -0.04770882687776619, -0.3593589693324556, -0.2173204050405828, 0.8802122169936424, -0.28657038330487156, 0.45669255568350514, -0.2810580544970608, -0.34043880170282237, -0.22221542087942245, 1.1780466780859922, 0.27999461554298827, -0.15976315715209463, -0.359902274248779, 0.25479964819031226, 0.9146061082533512, 0.6490068230706638, -0.5511319100033508, 0.1377946797393278, -0.3419504929209558, 1.2258550163869733, -0.2257058221625145, -0.3999017121362335, -0.2808126519020315, -0.031188235019705694, -0.10940264714646727, 0.4254522714373987, 0.1262624212793596, 0.3662883387172163, 1.0624564422584442, -0.33074100633772063, -0.16089719815344483, 0.26112768003889164, 0.9449448917307204, 0.3958618568583093, 0.16192751129210411, -0.24384319277486471, -0.2551414157049251, -0.2318335375438081, 0.6120651851709682, 0.5206017499029276, -0.244394885458359, 1.2204517913152586, -0.34172675714245987, -0.46241603900660644, -0.5235577793867555, -0.1454620341173842, -0.0488384677369081, 0.9754079768007716, 0.04837959870588579, -0.24545756364057145, -0.3630944897703056, 0.9317945348735043, 0.788553403106689, 0.7599110624643592, 0.5505730680755098, -0.27305129894424773, 1.5803354873271398, 0.8520005395195113, -0.33620275491493473, -0.2949693814635369, 0.4489461826000164, 0.014885972311992, 0.855836725419263, 0.45160126505308873, -0.38865056129272163, 0.8611468903254077]}, {\"marker\": {\"color\": \"#A2D5F2\", \"size\": 7}, \"mode\": \"markers+text\", \"name\": \"Crack\", \"opacity\": 0.9, \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\"], \"textfont\": {\"color\": \"black\", \"family\": \"sans serif\", \"size\": 15}, \"type\": \"scatter\", \"x\": [-1.6670229398812533, -1.2964186060104186, -1.6952067528870434, -1.5395450090369056, -0.792226222853898, 1.0104585209758588, -0.5852441815472817, -1.1430187322612817, -1.1737740737193374, 1.8905898278712439, -0.7182281906285999, 0.38789864795807, 1.5484117446070276, -1.3236501505143543, 0.5785274598921378, -0.7669226910270405, -0.9207314267832165, 0.7129826542412637, -0.9096325521869237, -1.2341919127643928, -0.3194290234792543, -1.2004708606399275, -0.9988699911519783, 1.0700642775547187, -0.9735482356057502, -0.48369723598731457, 1.425169589171444, -0.2719828319534019, -1.230359962527642, -1.0183047804037573, -1.0144721119787703, 1.1404284841130043, -0.9899624223137733, 0.6552071553621647, -1.1281639603293627, 0.28826257191697013, 0.8873340316995496, -0.950494192775588, 0.8384881498928788, -1.4494352807195598, 0.9530009345724867, 1.065945715164562, -0.08517594496844898, -0.5306040554495299, -1.6177538105346845, -1.1478565057728551, 1.0840981894516053, 1.5113140467715758, -0.0408258266010053, 0.7837765259494756, 0.03224088795939092, -0.7148401588672199, -0.5612804464580872, -0.24294397612205001, -0.23045497820980176, -0.9493325171790621, 1.0451261233595455, -1.027123424546907, -0.20452327941898923, -0.5105905936424872, -0.6685649067296693, -1.0081017021414862], \"y\": [-0.484776133756384, 0.291365561634937, -0.2948444612963159, -0.2493949574292428, -0.7056406856322139, -0.1491636960645718, -1.0899694958192394, -0.25846800724091623, 0.07327430482591182, 0.3519335812054387, 0.26348183373389455, -0.88834819065414, 0.23945215074969736, 0.26576062974318876, -0.3752212842440279, 0.09234838599018738, 0.41252904213650143, -0.5588048876666992, -0.3761292274034129, -0.2579531625993765, -0.35788218260458243, -0.35545601308209485, -0.5461208562561647, -0.051963896904545975, -0.5489742393961088, 0.3646996316022032, 0.11103675471864903, -0.7141752800943071, -0.27406744928213295, 0.448885166076982, 0.03129294394309736, -0.23292395490498433, -0.5713631466000435, -0.3501024070665164, 0.001847272764791992, -0.6739782118946651, -0.3038082480858521, 0.3580133812361711, -0.26884152357117075, -0.3098845638588667, -0.25570737139529354, -0.2550587088735288, -0.8456962323893231, -0.886733112816244, -0.33900353312329295, 0.1459684996012387, -0.34647649343785086, 0.20965402396055074, -1.1673054603089352, -0.24296310329823528, -0.8649036601323075, -0.5202516855913657, -0.2178910955357958, -0.6700064577756808, -0.8871608711248395, -0.3461162643918566, -0.08046868815124153, -0.5476970681727841, -0.6274841729885812, 0.027741154355794936, 0.7892143332830095, 0.2005294156471246]}, {\"marker\": {\"color\": \"green\", \"size\": 40}, \"mode\": \"markers+text\", \"name\": \"Searched player\", \"opacity\": 1, \"text\": [\"L. Messi\"], \"textfont\": {\"color\": \"black\", \"family\": \"sans serif\", \"size\": 20}, \"type\": \"scatter\", \"x\": [-1.6670229398812533], \"y\": [-0.484776133756384]}],\n",
       "                        {\"autosize\": false, \"height\": 1000, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"size\": 20}, \"text\": \"ACP - Fifa Players\"}, \"width\": 1000, \"xaxis\": {\"title\": {\"text\": \"Componente 1\"}}, \"yaxis\": {\"title\": {\"text\": \"componente 2\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('b34bac28-f972-4c0c-8270-f2005cea5eb9');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Graph 2\n",
    "#Choose your player\n",
    "recherche_joueur=df_filter[\"short_name\"]=='L. Messi'\n",
    "\n",
    "bool_crack=df_filter[\"overall\"] > 85\n",
    "bool_no_crack=df_filter[\"overall\"]<86\n",
    "\n",
    "palette=['navy','red','#A2D5F2','orange','green','pink']  \n",
    "data=[]\n",
    "\n",
    "acp_crack =go.Scatter(x=df_over_projected[bool_crack,0], y=df_over_projected[bool_crack,1],name='Crack',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=15,color='black'),\n",
    "                      opacity=0.9,marker=dict(color=palette[2],size=7),mode='markers+text')\n",
    "\n",
    "acp_no_crack =go.Scatter(x=df_over_projected[bool_no_crack,0], y=df_over_projected[bool_no_crack,1],name='Average player',\n",
    "                         text=df_filter.loc[bool_no_crack,'short_name'],\n",
    "                         opacity=0.6,marker=dict(color=palette[1],size=3),mode='markers')\n",
    "\n",
    "\n",
    "joueur_recherche =go.Scatter(x=df_over_projected[recherche_joueur,0], y=df_over_projected[recherche_joueur,1],name='Searched player',\n",
    "                           text=df_filter.loc[recherche_joueur,'short_name'],\n",
    "                            textfont=dict(family='sans serif',size=20,color='black'),\n",
    "                           opacity=1,marker=dict(color=palette[4],size=40),mode='markers+text')\n",
    "\n",
    "#data=[acp_no_crack,acp_crack,acp_machinegun,joueur_recherche]\n",
    "data=[acp_no_crack,acp_crack,joueur_recherche]\n",
    "\n",
    "layout = go.Layout(title=\"ACP - Fifa Players\",titlefont=dict(size=20),\n",
    "                xaxis=dict(title='Componente 1'),\n",
    "                yaxis=dict(title='componente 2'),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "#plot(fig)\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Aplicamos Kmeans sobre los datos proyectados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:41:12.898245Z",
     "start_time": "2020-10-13T02:41:12.810835Z"
    }
   },
   "outputs": [],
   "source": [
    "n_clust = 3\n",
    "\n",
    "km_pry = KMeans(n_clusters=n_clust)\n",
    "km_pry.fit(df_over_projected)\n",
    "\n",
    "# Recuperacion de etiquetas\n",
    "clusters = km_pry.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T02:41:13.214436Z",
     "start_time": "2020-10-13T02:41:13.129797Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": false
       },
       "data": [
        {
         "marker": {
          "color": [
           1,
           1,
           1,
           1,
           2,
           0,
           2,
           1,
           1,
           0,
           1,
           2,
           0,
           1,
           2,
           1,
           1,
           2,
           1,
           1,
           2,
           1,
           1,
           0,
           1,
           1,
           0,
           2,
           1,
           1,
           1,
           0,
           1,
           2,
           1,
           2,
           0,
           1,
           2,
           1,
           0,
           0,
           2,
           2,
           1,
           1,
           0,
           0,
           2,
           2,
           2,
           1,
           1,
           2,
           2,
           1,
           0,
           1,
           2,
           1,
           1,
           1,
           0,
           2,
           0,
           0,
           2,
           2,
           2,
           2,
           2,
           0,
           0,
           2,
           1,
           0,
           2,
           1,
           2,
           1,
           1,
           1,
           1,
           2,
           1,
           2,
           2,
           2,
           1,
           2,
           1,
           2,
           1,
           1,
           1,
           2,
           2,
           0,
           2,
           1,
           2,
           1,
           1,
           1,
           1,
           1,
           2,
           0,
           1,
           0,
           2,
           2,
           0,
           2,
           1,
           0,
           1,
           2,
           1,
           2,
           2,
           0,
           2,
           1,
           2,
           2,
           2,
           1,
           1,
           2,
           1,
           1,
           1,
           1,
           0,
           2,
           0,
           2,
           2,
           1,
           1,
           1,
           1,
           0,
           2,
           1,
           1,
           0,
           1,
           0,
           2,
           2,
           1,
           1,
           0,
           1,
           2,
           1,
           1,
           1,
           1,
           1,
           1,
           1,
           2,
           1,
           0,
           1,
           2,
           1,
           1,
           1,
           2,
           0,
           0,
           1,
           1,
           0,
           1,
           0,
           2,
           2,
           1,
           2,
           2,
           1,
           2,
           2,
           2,
           2,
           2,
           0,
           2,
           2,
           2,
           1,
           2,
           1,
           0,
           2,
           1,
           1,
           0,
           1,
           1,
           1,
           1,
           2,
           1,
           2,
           2,
           2,
           0,
           1,
           2,
           0,
           1,
           1,
           1,
           1,
           2,
           2,
           0,
           1,
           0,
           0,
           2,
           2,
           1,
           1,
           2,
           1,
           2,
           2,
           1,
           0,
           0,
           2,
           0,
           1,
           1,
           2,
           1,
           1,
           2,
           1,
           2,
           2,
           2,
           2,
           1,
           1,
           0,
           1,
           0,
           1,
           1,
           1,
           2,
           1,
           1,
           1,
           1,
           2,
           1,
           1,
           1,
           2,
           1,
           2,
           0,
           1,
           2,
           1,
           1,
           1,
           1,
           1,
           1,
           0,
           2,
           0,
           1,
           1,
           2,
           2,
           0,
           2,
           0,
           2,
           2,
           2,
           2,
           1,
           2,
           2,
           2,
           2,
           1,
           2,
           1,
           2,
           2,
           0,
           1,
           1,
           1,
           0,
           2,
           2,
           2,
           0,
           2,
           1,
           1,
           2,
           1,
           1,
           1,
           2,
           2,
           1,
           1,
           2,
           2,
           0,
           0,
           2,
           0,
           2,
           2,
           1,
           1,
           2,
           0,
           2,
           2,
           2,
           1,
           1,
           0,
           0,
           2,
           2,
           1,
           2,
           2,
           1,
           2,
           2,
           2,
           2,
           1,
           0,
           1,
           1,
           1,
           1,
           2,
           0,
           0,
           2,
           0,
           2,
           0,
           2,
           1,
           1,
           2,
           2,
           1,
           0,
           2,
           2,
           1,
           1,
           1,
           1,
           0,
           2,
           2,
           1,
           2,
           0,
           2,
           0,
           0,
           2,
           1,
           2,
           2,
           0,
           1,
           2,
           2,
           2,
           0,
           1,
           2,
           0,
           1,
           1,
           1,
           0,
           1,
           1,
           1,
           0,
           2,
           0,
           0,
           2,
           1,
           0,
           2,
           2,
           0,
           0,
           2,
           2,
           1,
           1,
           2,
           2,
           1,
           1,
           1,
           2,
           1,
           1,
           0,
           1,
           0,
           2,
           1,
           2,
           0,
           2,
           1,
           1,
           2,
           1,
           2,
           0,
           2,
           2,
           0,
           2,
           0,
           1,
           2,
           1,
           2,
           0,
           2,
           1,
           1,
           0,
           2,
           1,
           2,
           0,
           0,
           1,
           0,
           2,
           1,
           1,
           0,
           1,
           1,
           0,
           1,
           1,
           1,
           2,
           2,
           0,
           1,
           2,
           1,
           1,
           1,
           2,
           2,
           1,
           1,
           1,
           2,
           2,
           2,
           2,
           1,
           2,
           2,
           2,
           0,
           2,
           0,
           2,
           1,
           1,
           2,
           1,
           1,
           0,
           1,
           2,
           2,
           2,
           2,
           0,
           1,
           1,
           2,
           2,
           0,
           0,
           2,
           0,
           0,
           1,
           2,
           1,
           2,
           2,
           2,
           1,
           1,
           0,
           1,
           2,
           1,
           2,
           1,
           1,
           1,
           1,
           1,
           0,
           1,
           2,
           2,
           2,
           2,
           2,
           0,
           2,
           0,
           0,
           0,
           1,
           2,
           2,
           2,
           1,
           1,
           1,
           2,
           0,
           0,
           0,
           0,
           0,
           2,
           2,
           1,
           0,
           1,
           2,
           0,
           1,
           1,
           0,
           0,
           2,
           2,
           2,
           2,
           2,
           2,
           1,
           0,
           2,
           1,
           1,
           1,
           1,
           0,
           2,
           1,
           2,
           0,
           0,
           1,
           0,
           2,
           2,
           0,
           2,
           2,
           2,
           1,
           2,
           1,
           2,
           2,
           2,
           1,
           1,
           2,
           2,
           0,
           1,
           1,
           2,
           1,
           2,
           1,
           1,
           2,
           2,
           1,
           1,
           0,
           1,
           1,
           1,
           2,
           2,
           0,
           1,
           1,
           1,
           2,
           2,
           2,
           0,
           1,
           2,
           1,
           2,
           2,
           2,
           1,
           1,
           1,
           2,
           2,
           2,
           1,
           1,
           0,
           0,
           2,
           1,
           1,
           2,
           2,
           0,
           2,
           1,
           0,
           2,
           1
          ],
          "colorscale": [
           [
            0,
            "rgb(12,51,131)"
           ],
           [
            0.25,
            "rgb(10,136,186)"
           ],
           [
            0.5,
            "rgb(242,211,56)"
           ],
           [
            0.75,
            "rgb(242,143,56)"
           ],
           [
            1,
            "rgb(217,30,30)"
           ]
          ],
          "showscale": false,
          "size": 5
         },
         "mode": "markers",
         "type": "scatter",
         "x": [
          -1.6670229398812533,
          -1.2964186060104186,
          -1.6952067528870434,
          -1.5395450090369056,
          -0.792226222853898,
          1.0104585209758588,
          -0.5852441815472817,
          -1.1430187322612817,
          -1.1737740737193374,
          1.8905898278712439,
          -0.7182281906285999,
          0.38789864795807,
          1.5484117446070276,
          -1.3236501505143543,
          0.5785274598921378,
          -0.7669226910270405,
          -0.9207314267832165,
          0.7129826542412637,
          -0.9096325521869237,
          -1.2341919127643928,
          -0.3194290234792543,
          -1.2004708606399275,
          -0.9988699911519783,
          1.0700642775547187,
          -0.9735482356057502,
          -0.48369723598731457,
          1.425169589171444,
          -0.2719828319534019,
          -1.230359962527642,
          -1.0183047804037573,
          -1.0144721119787703,
          1.1404284841130043,
          -0.9899624223137733,
          0.6552071553621647,
          -1.1281639603293627,
          0.28826257191697013,
          0.8873340316995496,
          -0.950494192775588,
          0.8384881498928788,
          -1.4494352807195598,
          0.9530009345724867,
          1.065945715164562,
          -0.08517594496844898,
          -0.5306040554495299,
          -1.6177538105346845,
          -1.1478565057728551,
          1.0840981894516053,
          1.5113140467715758,
          -0.0408258266010053,
          0.7837765259494756,
          0.03224088795939092,
          -0.7148401588672199,
          -0.5612804464580872,
          -0.24294397612205001,
          -0.23045497820980176,
          -0.9493325171790621,
          1.0451261233595455,
          -1.027123424546907,
          -0.20452327941898923,
          -0.5105905936424872,
          -0.6685649067296693,
          -1.0081017021414862,
          1.093529249461258,
          -0.015142992894534173,
          1.2726469097387774,
          1.8625805082496447,
          0.14430381343330845,
          0.48134525304271863,
          0.09383916387606614,
          0.5027562488397577,
          0.27934266209035696,
          1.7229593078506604,
          1.1575819794767146,
          -0.6543651644714024,
          -0.4901674537030536,
          1.9617331646236986,
          -0.005926362460696614,
          -0.7352456743161876,
          0.545507241185545,
          -0.8511170119353709,
          -0.6774218511830395,
          -1.2609133621248039,
          -0.8728357732852086,
          0.4089174674722236,
          -0.6583522690278406,
          -0.13172687838812108,
          0.24684081431574117,
          0.2913970929087435,
          -1.1821736163099015,
          -0.12316892306126583,
          -0.9056197834869149,
          0.2859799142378293,
          -1.1345525996877233,
          -0.8224583451644719,
          -1.2631044638731816,
          -0.01780090017490749,
          -0.12964558465518938,
          0.8305379677487733,
          -0.14702203167859662,
          -1.1149143280454987,
          -0.013288492747890197,
          -0.9183252386171624,
          -1.3323345779667468,
          -0.9738362919577653,
          -1.1639965938928243,
          -0.8351026272816162,
          -0.037739199297682366,
          1.401517142392075,
          -0.8195459049188397,
          1.4420926767497237,
          -0.24773976595693373,
          -0.24921146102732897,
          1.4677151245184734,
          0.44721015143942977,
          -1.2640068529513437,
          1.3290022304290816,
          -0.36958225401690775,
          -0.10354751601695807,
          -0.39709194572084644,
          0.13147154074400225,
          0.24522157212699966,
          1.210534075215784,
          0.6499744512659811,
          -0.918301985477884,
          -0.2196070880964404,
          0.13718459141582762,
          0.32548264795818244,
          -0.7877787210119258,
          -1.1626009756341185,
          -0.5488221371120807,
          -0.9892013279647349,
          -0.9577320217508231,
          -1.2417135797188417,
          -0.9897623984030656,
          1.6299542589598748,
          -0.049347860501572784,
          1.5795476141242863,
          -0.4396128767230349,
          0.1396878088653918,
          -0.9150112469892419,
          -0.6080610668733534,
          -0.9087013505079276,
          -0.5797999446424876,
          1.8668416496383622,
          0.12875787458245314,
          -0.9897606253094461,
          -1.214317517118539,
          1.110454672811558,
          -0.8527969561956225,
          1.2243902837613034,
          0.15281761495854448,
          -0.0802615846382569,
          -0.9699209872953733,
          -0.6878492876660327,
          1.4155685001514349,
          -0.9765137817233976,
          0.15006707845546172,
          -0.660689095823061,
          -1.0895067743817552,
          -0.44804315877771456,
          -1.0314201754040204,
          -1.0809244439816252,
          -0.77740714036711,
          -0.13095837455800924,
          0.8581795912311934,
          -0.6479896558299076,
          1.3230615250068618,
          -0.7514999703996268,
          0.664738440666871,
          -0.7149327213501069,
          -0.9770339177803259,
          -0.9829015912341995,
          0.005519232281078351,
          1.2655898185524945,
          1.5836531243844947,
          -1.1577371373284018,
          -0.6472330056327308,
          1.2573154866300065,
          -1.1862497115458877,
          1.2300022728340079,
          0.11220123297920455,
          -0.04468266467958917,
          -0.22615246054248886,
          0.48858714211492216,
          0.6945669948346964,
          -0.8847149689740524,
          0.2188616325624397,
          -0.48060002458544454,
          -0.1632541707417269,
          0.2803907883361974,
          0.41889367185612886,
          1.2555879050077667,
          -0.3998173535071752,
          0.6560181766797779,
          -0.4431342641354577,
          -0.81552672538089,
          -0.11256466033565132,
          -1.1660959318255977,
          1.4274459825155112,
          0.7572048163554432,
          -1.165602292999863,
          -0.5586977411401371,
          1.2208747602300565,
          -1.0722326631177117,
          -0.976163144539493,
          -1.15165360718189,
          -1.0045137135174431,
          -0.2825392059247318,
          -0.47377410187280056,
          -0.3870533293884648,
          0.10146000593275478,
          -0.06033313200964133,
          1.210767786210475,
          -0.9078372608537373,
          0.3566037891923346,
          1.5675493264446796,
          -0.7965988846890584,
          -0.6769391469162986,
          -0.9349209517655289,
          -0.926876957665701,
          0.4399836643345381,
          -0.36179376605290925,
          1.265511823652482,
          -1.367005042309995,
          1.8105347352780587,
          1.3374068124114016,
          0.14567760244303207,
          0.5083610649718011,
          -0.8008526334659892,
          -0.7108903261671804,
          0.4157573375052958,
          -0.34952120973063894,
          0.17072923813319119,
          0.338121607197659,
          -0.7479213953446732,
          1.2296893135238172,
          1.065128250360813,
          0.20693339769934319,
          1.2898568527624361,
          -0.9627251541553578,
          -0.9983048679162175,
          -0.239320232635391,
          -1.1075847570779214,
          -0.8818469270116963,
          0.692934388905102,
          -0.19157400261717575,
          -0.39192138227013523,
          -0.45793469355011973,
          0.2546141892621039,
          0.18035069507585735,
          -1.1607931264180642,
          -0.2331498556487378,
          1.274141157047157,
          -0.8920702407156282,
          1.2208559322915264,
          -0.5191344800129479,
          -0.8740221180823334,
          -0.7718996538810242,
          0.25283619334084523,
          -0.8894455255833763,
          -0.8553012522560153,
          -0.8867525124062569,
          0.07157695314617585,
          -0.2402386818949843,
          -0.931275087828212,
          -0.1316098886699307,
          -1.011815565393393,
          0.19284221902335125,
          -0.8992820419949509,
          0.5240902198294859,
          1.7314208643028521,
          -0.8792597354914803,
          0.3041747972003403,
          -0.8786711127248028,
          -0.6079921697788693,
          -0.9629325206617596,
          -0.35123389867847477,
          -0.3375176633780099,
          -0.7352084596364049,
          0.9660070666914622,
          0.41071676985896405,
          1.1588302570801599,
          -0.9238580043144451,
          -0.5715177890578796,
          -0.3155918657899994,
          -0.03891553563909665,
          0.8896292844065015,
          -0.045898048440508016,
          0.8483138259160578,
          -0.10992127545693899,
          -0.12808992465849792,
          0.40341536821089163,
          0.05878878934296154,
          -1.0132021118676624,
          -0.29781650839718277,
          0.3394733377322612,
          -0.31966324228084597,
          0.4272265625455252,
          -0.42602188514021855,
          0.43917226380986424,
          -1.0320655234468243,
          0.4449101435560226,
          0.6951131281361403,
          1.802687519898914,
          -0.7763018789461639,
          -0.08501594747416193,
          -0.9692434764911273,
          1.0221100115382546,
          -0.5612280280028489,
          -0.23998231226124792,
          0.12491134970381743,
          1.6212893305526754,
          0.09044858787812933,
          -1.0028155116145463,
          -0.6264175204609866,
          0.5627712476334236,
          -0.5110209007931021,
          -0.09468777752272997,
          -1.3199035873157006,
          0.8013758956879241,
          0.10051181951621495,
          -0.6370593089200988,
          -0.5476632930592039,
          0.20171301349681825,
          -0.35906254068803384,
          1.3586870861707177,
          1.8134588470319088,
          -0.04097012168241941,
          1.7393527160131073,
          -0.1433990986751227,
          0.45802203476088715,
          -0.7939332456404855,
          -0.8883679982836535,
          -0.0594838606195758,
          1.2551142959505843,
          0.3702792414804345,
          0.3421395152774433,
          0.7848217752184967,
          -0.8837295076842785,
          -1.4919707944338625,
          0.878551552956964,
          1.0461718744689679,
          0.6737044044436561,
          0.2633118750150637,
          -0.5872278547695321,
          0.6381588697337002,
          -0.16888207282698617,
          -0.793648858962981,
          -0.17528971576376554,
          -0.47616586175739384,
          0.551783073693705,
          -0.1528201375479127,
          -1.267535496641098,
          0.9508910599073885,
          -1.2621523852274275,
          -0.48084544567597115,
          -0.45241231315728664,
          -0.8580331444905398,
          -0.009469815191282871,
          1.2534647282275693,
          1.463921999112927,
          -0.26619090881642915,
          0.754852947708467,
          -0.32967952589153066,
          1.6930016018362055,
          0.0717704915937177,
          -0.46060003189380766,
          -0.5569197872181216,
          0.7448221474693401,
          0.2549343493070891,
          -0.5051240847348489,
          1.6466992493400046,
          0.34951830294699254,
          0.5513662835940923,
          -0.6661507131580198,
          -0.35568727464523986,
          -1.143482350178569,
          -0.8166640331447172,
          1.0447222499456095,
          0.16957463837811157,
          0.34632928678334224,
          -0.47251165331022527,
          0.015387597806095756,
          1.3047339247355252,
          0.03542652046907927,
          0.748239186404297,
          0.7438915673521367,
          0.19527503646383984,
          -0.9501493731374474,
          0.6286797163208482,
          -0.11803022410279865,
          1.1654440689261432,
          -0.6723265202589421,
          0.16591701673909015,
          -0.2801214376960569,
          0.019570177153234235,
          0.8725275960372325,
          -1.2555039389855238,
          -0.06179537710372034,
          1.2829770695521108,
          -1.1913481922927094,
          -0.8676264320992775,
          -0.6511323101546269,
          1.258416491204627,
          -0.7610121819054259,
          -0.4834285058441462,
          -1.1489089142754045,
          1.2858701193147855,
          -0.07533702544846098,
          0.9763153792986404,
          1.4190125726126963,
          0.2854374275994673,
          -0.6340024886813783,
          1.067646070436934,
          0.04171288563110579,
          0.6602233374632811,
          0.8301108411642998,
          1.0391736258692623,
          -0.3312640693284341,
          0.009410082631397842,
          -0.6213452076972116,
          -0.742127510153029,
          0.5464444804629068,
          0.30264672504680734,
          -0.8158116955565247,
          -0.4019971544172351,
          -1.0378905172296442,
          0.7216724597633307,
          -0.3557962802116049,
          -0.1810847853374007,
          0.9384484558029854,
          -0.6205083048993675,
          0.8264206153681324,
          0.3608817055254504,
          -0.5614012084811468,
          0.21076356939446356,
          1.0512799887724251,
          -0.0038750620879938005,
          -0.8085712290803256,
          -0.6535524905737584,
          0.07972828093509023,
          -1.1701408468182728,
          0.732278896758715,
          1.2583556923955774,
          0.608675628331114,
          0.14799856355603497,
          1.9227499072660128,
          0.7029874434443941,
          1.1769388061334851,
          -0.8767433857959528,
          -0.007488322706468554,
          -0.8670469319113737,
          0.1933901903604244,
          1.056742132224221,
          0.4340015556281379,
          -0.3894663069595212,
          -0.8331459820807247,
          1.0973696369063797,
          0.39251833518897633,
          -0.5716281299973063,
          0.35279921333887587,
          1.4159462016012647,
          2.080022481085424,
          -0.5121658990623803,
          0.9182338424368122,
          -0.31554742384247875,
          -0.43366822064558197,
          -0.3335421803460602,
          1.639480233571107,
          -0.9618973549410277,
          -1.0697120754914964,
          1.3495539917416717,
          -0.534284529585301,
          -0.9705677410994165,
          -0.7762551505392317,
          0.11755783533902693,
          0.3054598224875862,
          1.337449634331132,
          -0.2070462265641193,
          0.5530914899456415,
          -0.6689312307621649,
          -0.36297667399763067,
          -1.150240326542727,
          0.6760427446312381,
          0.6374657897667346,
          -0.5843478518703666,
          -0.45780753981599603,
          -0.21328006253245024,
          0.45263022893783367,
          0.27972666642497857,
          0.45263022893783367,
          0.30722716101818776,
          -1.1223675128147896,
          0.19516200429566716,
          -0.3029410847080335,
          0.6217021180742193,
          1.5777543154524245,
          0.1262272287685287,
          0.7958275244994931,
          0.07450624439344573,
          -0.7797080080163346,
          -0.7581777054008579,
          0.2982533781533029,
          -1.1761121194192747,
          -0.7214680686457238,
          1.0507283924755246,
          -0.8723575039242715,
          0.35073432606349797,
          0.19771206592432541,
          0.7176496464744113,
          0.4168606594047357,
          1.8458053458424337,
          -0.7962334591614332,
          -0.6463925454133728,
          0.12573205850783697,
          0.10245185218970025,
          1.1907784205771217,
          0.9920890650895047,
          -0.2654053178855047,
          0.943931353601556,
          0.8599801231904542,
          -0.8718165874808218,
          0.5536202557772418,
          -0.243553881630382,
          0.5657190225982887,
          0.4410782164669458,
          -0.3216270886787293,
          -0.9979097214316859,
          -0.7604108793092614,
          0.9811475926125433,
          -0.755634268849079,
          0.6214850629016011,
          -1.0169694901036326,
          -0.025207307264164886,
          -0.9412939035392702,
          -0.39189599589266977,
          -0.5850570431435002,
          -1.1297033410264175,
          -0.7220696233867049,
          1.0200616197428334,
          -1.2127288744841316,
          0.5219205343604387,
          -0.024420169785090786,
          0.47808655074146805,
          0.3330897972942009,
          0.21293513858268995,
          1.6288950498201702,
          -0.16913658128678985,
          1.2409763491266912,
          1.2512486709000041,
          1.430545814593453,
          -0.6409652170911148,
          -0.10303922533030857,
          0.701510992442207,
          0.6676468565955911,
          -0.9309377010538616,
          -0.5131085528451768,
          -0.3915368727630513,
          0.4749652004662409,
          1.807511296188057,
          1.0258517947114036,
          1.6052709102933989,
          0.7195679835073407,
          1.5472882374662633,
          0.5286895789207942,
          -0.08916200033224717,
          -0.6812314309206358,
          1.1120319808204517,
          -0.8678598041168412,
          -0.15388715795301805,
          1.6510630580288828,
          -0.7053788317076696,
          -0.16990338620388273,
          1.6638371238764973,
          1.3068388773970108,
          0.5125289970226451,
          0.2896330996612303,
          0.33719639168789567,
          0.588417186823272,
          -0.23339564887681372,
          -0.24432921746162203,
          -0.8427281239672055,
          1.0609301892138558,
          0.2946368259960211,
          -0.7985578320703659,
          -0.8626074813482504,
          -0.5176591545751096,
          -0.8223269381387986,
          1.2514882176566124,
          0.372364144682632,
          -0.9273474934519735,
          -0.16168172135327963,
          1.8351412323196075,
          1.6780434987706092,
          -0.756884358546864,
          1.0047896287002824,
          0.46422760504943017,
          -0.4349548140776577,
          1.3927214462366053,
          -0.04050420687886913,
          0.09302379189665337,
          0.5406163448331016,
          -0.7229639715574538,
          0.06466860900358765,
          -1.1709330691438904,
          0.20008339441506767,
          0.3468640236701085,
          -0.22623567658001756,
          -0.43448722902504927,
          -0.7885797115538222,
          0.48782591882383997,
          0.13448931511612194,
          1.278777909092132,
          -0.32286007118337856,
          -0.24647201100610822,
          0.10524253315789876,
          -0.7910463282188948,
          0.13438522879661396,
          -0.2636026353688034,
          -0.6149417766102595,
          -0.1936095166720878,
          0.5871402316170584,
          -1.0332104779645321,
          -0.38245465605172746,
          1.3475128479654213,
          -0.9588419259058202,
          -0.5162331127775573,
          -0.32887960731873844,
          0.4333407718408982,
          0.4569877301133533,
          1.3779041168653652,
          -0.45699594446435576,
          -0.6382785326874156,
          -0.7508478744609893,
          0.2718071294938753,
          -0.03256689161223365,
          0.31772426577603347,
          1.5252552892122606,
          -0.6445401349618216,
          0.4883500902178734,
          -0.46198580257616656,
          0.3506356166091338,
          0.3573857716898045,
          0.21246976771155715,
          -0.90858284629784,
          -0.3987469972867594,
          -0.6901677135956169,
          0.761601927813514,
          0.46588722821898265,
          -0.008875753840154333,
          -0.7585777353967925,
          -0.6134610410201569,
          1.5583053773537383,
          1.3811318351740165,
          0.405517082903486,
          -0.11405651992250206,
          -0.17769581293081887,
          0.4144713330253,
          0.5039826180824553,
          1.355269961002532,
          0.5570640502210515,
          -1.0149170010088688,
          1.3525784052956968,
          0.3595481947846112,
          -1.0203001124225395
         ],
         "y": [
          -0.484776133756384,
          0.291365561634937,
          -0.2948444612963159,
          -0.2493949574292428,
          -0.7056406856322139,
          -0.1491636960645718,
          -1.0899694958192394,
          -0.25846800724091623,
          0.07327430482591182,
          0.3519335812054387,
          0.26348183373389455,
          -0.88834819065414,
          0.23945215074969736,
          0.26576062974318876,
          -0.3752212842440279,
          0.09234838599018738,
          0.41252904213650143,
          -0.5588048876666992,
          -0.3761292274034129,
          -0.2579531625993765,
          -0.35788218260458243,
          -0.35545601308209485,
          -0.5461208562561647,
          -0.051963896904545975,
          -0.5489742393961088,
          0.3646996316022032,
          0.11103675471864903,
          -0.7141752800943071,
          -0.27406744928213295,
          0.448885166076982,
          0.03129294394309736,
          -0.23292395490498433,
          -0.5713631466000435,
          -0.3501024070665164,
          0.001847272764791992,
          -0.6739782118946651,
          -0.3038082480858521,
          0.3580133812361711,
          -0.26884152357117075,
          -0.3098845638588667,
          -0.25570737139529354,
          -0.2550587088735288,
          -0.8456962323893231,
          -0.886733112816244,
          -0.33900353312329295,
          0.1459684996012387,
          -0.34647649343785086,
          0.20965402396055074,
          -1.1673054603089352,
          -0.24296310329823528,
          -0.8649036601323075,
          -0.5202516855913657,
          -0.2178910955357958,
          -0.6700064577756808,
          -0.8871608711248395,
          -0.3461162643918566,
          -0.08046868815124153,
          -0.5476970681727841,
          -0.6274841729885812,
          0.027741154355794936,
          0.7892143332830095,
          0.2005294156471246,
          0.04352798115247077,
          -0.8005638015698715,
          0.13738098761543657,
          0.5578724391878837,
          -0.3379332625159552,
          -0.4379549503841231,
          -0.4548549707631786,
          -0.4884256740921628,
          -0.6604165851929176,
          0.48354898012582037,
          -0.08918843570964564,
          -0.6779878086289225,
          0.9394535525688561,
          0.5646760637935975,
          -0.605227690402733,
          0.9851625775253565,
          -0.6649477580679661,
          -0.4520544141810253,
          0.8524023218525045,
          -0.25748003169876177,
          0.8793510820594372,
          -0.5482001024357335,
          -0.06513083193336283,
          -0.7327911492150323,
          -0.4898680416643692,
          -0.5137162067144916,
          0.29023166714720544,
          -0.7561555773804571,
          -0.3050124221615494,
          -0.7994270175504692,
          -0.03251806666322672,
          0.11853623398959351,
          -0.10720298289212624,
          -0.731459643923081,
          -0.2918851140728006,
          -0.20682762630071924,
          -0.7208337899692286,
          0.2544902654665916,
          -0.4307530289319407,
          0.05983966722285005,
          0.24396057051094747,
          -0.0156734706023215,
          0.05683652414442038,
          -0.264771079614864,
          -0.7179486637803643,
          0.07138475580881125,
          -0.5045815112273961,
          0.35123746079782436,
          -0.7002472721154868,
          -0.47334512237162213,
          0.5158753129910312,
          -0.5287434139080118,
          0.18088367044399176,
          0.12476067444985096,
          0.755116253669886,
          -0.5737501302001121,
          -0.05676059832664742,
          0.3637080596116223,
          -0.5549390508506278,
          0.04577405069780729,
          -0.5321418667010451,
          0.13261655639262118,
          -0.6561961476599153,
          -0.2981001292336392,
          -0.43959078356642195,
          -0.3083862025694177,
          -0.20985911376995106,
          -0.5714589089898817,
          0.014017860519720118,
          0.07209866766024198,
          -0.06718154934847724,
          -0.24581160805408753,
          0.4388894267101332,
          -0.4920524633434915,
          0.22921856248548889,
          -0.5664420965689296,
          -0.7241454102572773,
          0.8077984529770437,
          0.7683827960233176,
          0.31014214752455344,
          -0.06180919213542409,
          0.5149439154949746,
          -0.3837621704562575,
          0.1656379018598858,
          0.28606317278699195,
          -0.043172220698074595,
          0.22671224089274364,
          -0.15518041721398404,
          -0.3875131312359522,
          -0.8346576301077359,
          0.6132788852676864,
          -0.575640184952958,
          0.2585274849715822,
          -0.1086816128186649,
          -0.6054899734853054,
          -0.19073390924027672,
          0.1709728716570861,
          1.0514212879634275,
          0.41249964335318773,
          0.5179277581219287,
          0.9765395508533059,
          0.8277396514035819,
          -0.1523235487723237,
          -0.39323668662423444,
          0.04567802411996939,
          -0.37917812144032925,
          -0.29400615267072155,
          -0.4017012406936213,
          -0.07017657782439683,
          0.10174795812485178,
          -0.6320960168691431,
          0.2342737682439106,
          0.18982154102710314,
          0.5819626443251753,
          0.6115213403869949,
          0.2124359245494242,
          0.36195150379364643,
          0.2738713410148539,
          -0.7386271718175554,
          -0.7786046383826779,
          0.874015595485808,
          -0.19042371846883505,
          -0.1313700875927289,
          0.05781684337748173,
          -0.5401360189173349,
          -0.21796017328755402,
          -0.38390270630658724,
          -0.6800811387413359,
          -0.5740912627230075,
          0.22523333938666898,
          -0.45646683655573855,
          -0.5215704766210849,
          -0.679700850051139,
          0.3675200474694738,
          -0.7662458548459098,
          0.14498563771770587,
          0.24326828298400804,
          -0.10118722446624534,
          0.4964931341212593,
          1.2060022577340286,
          0.15256160829648616,
          0.05382477116553991,
          0.09160858522607664,
          0.3175168216104473,
          0.3108161293082214,
          -0.6594245300919218,
          0.9486061876432347,
          -0.6548637015210733,
          -0.8594395272532634,
          -0.5346354343442825,
          -0.010094943449556042,
          0.21720344296439023,
          -0.46301090519643506,
          0.35353845175736565,
          -0.16316996145764162,
          0.5610313839433709,
          0.1582920013419888,
          -0.10152334503715069,
          -0.34091468569980266,
          -0.5005758975967272,
          0.1588744251589914,
          -0.01327243446530337,
          0.49610401717512403,
          0.17298600708020212,
          -0.6037212701093149,
          -0.39767306690339943,
          -0.33178371160996684,
          -0.47982514360487544,
          -0.35981171193411293,
          1.019655219432683,
          -0.6081796801477484,
          -0.36423673689239944,
          0.25001575491976125,
          0.04528139522415932,
          -0.006644318054903006,
          -0.4478060808886697,
          0.3304600400309176,
          -0.320145536530379,
          0.107813032580612,
          -0.3123252921248235,
          -0.19567873253210066,
          -0.22881614289013255,
          -0.23982993406089856,
          0.8751898905871074,
          -0.6518111206760254,
          -0.6252697650679698,
          -0.31266595281306964,
          -0.6847544428527178,
          -0.13561102232543704,
          0.9984196050459312,
          0.3434933292725036,
          -0.36417059487226183,
          0.2519905874918481,
          0.3326645488373136,
          0.04079222161269011,
          -0.060138509393030545,
          -0.43520679317162275,
          0.9284274682427497,
          -0.09699932816337015,
          -0.07096197182151093,
          1.4287580726386562,
          -0.5239846678817774,
          -0.029868275322734714,
          0.6934231280822979,
          0.23397009566094287,
          -0.6425177262100631,
          -0.32347098525622414,
          -0.27962338662587877,
          0.6556630425603727,
          0.5576490025431962,
          -0.14972489179099452,
          0.37679860967370943,
          -0.21291630961867242,
          0.09447655028793897,
          0.45012833262794777,
          1.3116740955424155,
          -0.16812025080576265,
          0.3092638507481155,
          -0.5296389567267376,
          0.19713265392212032,
          0.06413667633488448,
          0.6080702948941298,
          -0.5162785911132507,
          -0.5464812764497691,
          -0.04866766938883747,
          -0.3299721281721132,
          -0.20834959083632512,
          -0.6495514570988166,
          -0.5590455697970534,
          -0.4259074398227366,
          -0.7089268173372375,
          0.10344311295787319,
          -0.6177340634482623,
          -0.2800936168546762,
          -0.4478493847589056,
          -0.26800136457938223,
          -0.10143816445558293,
          -0.41921748944402176,
          0.903079044144505,
          -0.23773270628241314,
          -0.2130634579662383,
          0.6756972028848981,
          0.40540202131977665,
          0.6421856155101204,
          -0.3571804206355716,
          0.1931805919882124,
          -0.8119001026211136,
          -0.4254103395853827,
          -0.5601381660634311,
          0.4178998778111341,
          -0.5993826370346674,
          0.05941165081477475,
          -0.4080734342196686,
          -0.17722824545752947,
          0.6119214305568174,
          1.3109213151887882,
          0.2096353197649201,
          0.003856794040782937,
          -0.6215833678333276,
          0.2584003115386772,
          0.9587594869988678,
          -0.3158164050775628,
          -0.2605892967599112,
          0.17959200119319293,
          0.8391489551386205,
          -0.3098005216062157,
          0.5849570475608329,
          -0.6877185903687006,
          -0.22474435453155855,
          0.27442451984333044,
          0.09748369979114761,
          -0.49120952442528676,
          0.25792712812886215,
          -0.2661735819049757,
          -0.35054965124986154,
          -0.15473169034874754,
          -0.05170356126863392,
          -0.1606569140548145,
          -0.07804551362752028,
          0.07579894265854685,
          -0.09921071582324968,
          -0.3009811505439315,
          -0.20647824204342982,
          -0.27578766935797017,
          -0.5708917809775779,
          0.365560208136144,
          0.054993767003836916,
          -0.3666813964815524,
          -0.3741688139439963,
          -0.7071986430761493,
          0.16964600861635892,
          0.3297987821236984,
          0.1643358437102142,
          1.2567127838186467,
          1.4591351605004463,
          0.22020791771634782,
          -0.7422210074177799,
          0.06246997261161778,
          0.12975372832425877,
          -0.5290943679823606,
          -0.21747951363346477,
          -0.3295696946586488,
          0.5993493859654091,
          -0.6053725845555319,
          1.183357311032927,
          -0.029656923509619276,
          -0.2859421046277206,
          -0.3444456969004464,
          -0.38001907980157706,
          0.5528148456811509,
          -0.32869863049412296,
          -0.32230462230314505,
          1.104797202624481,
          0.3150087638636469,
          0.13526635205342863,
          0.3728906741419809,
          -0.014063184722478635,
          -0.32039738000343887,
          -0.35937925959873374,
          1.0670508601881876,
          -0.4227869454985792,
          0.5754203559382775,
          -0.5458295360557637,
          -0.1903413928421331,
          -0.21211811151992183,
          -0.2704477499180646,
          0.544621625793266,
          -0.3950212198014452,
          -0.6765013233671142,
          0.17986216277085992,
          1.2140198143093435,
          -0.4795453145007205,
          -0.5165397163776683,
          -0.45758007040591325,
          -0.19800333767661032,
          0.24539515788892416,
          -0.7383766433154221,
          0.3116128359890956,
          -0.06190455110680552,
          -0.025033049803337384,
          0.644991944137625,
          0.3843870982885521,
          -0.1687141835771296,
          -0.27019831580416936,
          0.04853385389578635,
          0.14409118077816488,
          -0.08995183165632312,
          0.1949883659810081,
          0.20957058781288446,
          -0.27906326509344603,
          0.677167617977823,
          0.08912938952219064,
          -0.13119619468673693,
          -0.1318289820534002,
          -0.1539200711173907,
          0.03557561860825413,
          -0.07240911678332544,
          -0.2623220651164964,
          -0.4626358977191148,
          0.8660199303671462,
          -0.06750551582500908,
          -0.2635491881343508,
          0.03325532924551892,
          0.048763044086094845,
          0.0968880606934463,
          -0.31744456563072837,
          0.7965296153345298,
          1.0813314603030968,
          -0.019765154290850042,
          0.9534247735890046,
          -0.04587643281202566,
          -0.43614278969688947,
          0.047672642489004824,
          -0.054663813266448175,
          0.4389865314366959,
          -0.47664962806572314,
          -0.14775317272209243,
          -0.02385963637391867,
          -0.645837785291405,
          -0.056005019896280275,
          -0.16678509550340356,
          0.2204991869236806,
          -0.07799221577914472,
          -0.4751237891303785,
          0.7424158122295244,
          -0.37591922785588744,
          0.44201308578529364,
          0.1690473828887782,
          0.4414391754942619,
          0.3815837169144971,
          -0.5921166810389599,
          0.03043020273041159,
          -0.28009130369514185,
          -0.053196831757963726,
          0.7563358191418815,
          0.19451498572710268,
          -0.40606021088754424,
          0.4054223659548551,
          -0.334390478688255,
          0.6217330371741069,
          0.9314177114037065,
          -0.0627976067408026,
          0.05444043914829709,
          -0.2918789274108428,
          -0.15941513144673372,
          0.6969143263424417,
          0.5340547859337699,
          -0.40687956729069674,
          0.734099554937936,
          0.30817985836280504,
          -0.2686238484068213,
          0.09619277573247537,
          -0.004692551489523355,
          -0.4083669100607451,
          -0.36664485533877567,
          0.3579320948488695,
          0.7827580824525147,
          -0.2657592184953047,
          -0.1975042139190971,
          0.6436202204450437,
          -0.0798319502269136,
          -0.2024259090071279,
          -0.20002513059876184,
          -0.19388851324991505,
          1.1797023517664225,
          1.10515768218835,
          -0.37223459092959177,
          -0.45287679036051776,
          -0.37223459092959177,
          -0.47972762518331763,
          0.33638197454890223,
          -0.35669938393365636,
          -0.1675725189203155,
          -0.21829699370560215,
          0.44257771973542437,
          -0.18940407510015558,
          0.029701431376976516,
          -0.3374441158439343,
          0.1538433814837637,
          -0.2003158280927725,
          -0.4191350642300242,
          0.4534213148943028,
          -0.0001496780454754973,
          0.02900820793016925,
          0.18377004531545948,
          -0.24379275918602894,
          -0.31217054677747125,
          -0.2939774714174551,
          -0.4183342135641913,
          0.6187639751900339,
          -0.06309581633821303,
          0.9826284967123642,
          -0.02318092533347431,
          -0.5249993258314953,
          0.13785549487066787,
          0.1978179345377991,
          -0.4750476653925795,
          -0.1273355887573886,
          -0.19343072903595723,
          0.12072102648250899,
          -0.27412483792901465,
          1.0122069547404238,
          -0.06150228970355728,
          -0.11598129539494251,
          -0.5397485143817133,
          0.4033768015042712,
          -0.05283164890086053,
          0.17061912966184836,
          0.4886870321473073,
          -0.16072681942167788,
          0.374397427983198,
          -0.5421212593795084,
          -0.13858486808716283,
          0.7071827391934485,
          0.4026971573995919,
          -0.09255178763726524,
          -0.07910685162351945,
          0.1691593519011121,
          0.3213739832952675,
          -0.32994767436991645,
          -0.302111510543799,
          -0.32549299978215745,
          -0.4460633524430078,
          -0.1794829939367519,
          0.49064657982483956,
          0.10564183708398488,
          0.28565496424753456,
          0.2413026587908625,
          0.43832484011933776,
          1.1266520657879353,
          -0.337769649757214,
          0.09304147038990028,
          -0.007061738361363711,
          -0.07389475002667939,
          1.2406615425192389,
          0.7710517496404375,
          -0.3016954669933815,
          0.7715108841749747,
          0.26682828238548983,
          0.758541234544611,
          -0.008132103485224527,
          0.5176243105148781,
          -0.311915306325428,
          -0.6003542650609076,
          0.9850328999243292,
          0.33915065200621003,
          0.9168657501393493,
          -0.07532426518992029,
          0.37102197007727655,
          0.6443375649530738,
          0.724520122683263,
          0.5895689750097702,
          0.3958761839869953,
          -0.2144683161126557,
          -0.27066782986816734,
          -0.3194813819513519,
          -0.1623377136243085,
          -0.3239570165941503,
          -0.6924263337220251,
          0.6525010639910588,
          0.05351824093468631,
          -0.23696620578935068,
          0.4610281386923583,
          0.473951379049869,
          1.0123904871911398,
          0.4299849128193762,
          0.19142252426819958,
          -0.2529886430136917,
          0.18065240456285817,
          -0.4543658685176419,
          0.8062303778188404,
          0.485378922821872,
          0.2597798746722538,
          -0.029991649002186725,
          -0.28842133796353103,
          -0.22210566857826378,
          0.4577928105924855,
          -0.04770882687776619,
          -0.3593589693324556,
          -0.2173204050405828,
          0.8802122169936424,
          -0.28657038330487156,
          0.45669255568350514,
          -0.2810580544970608,
          -0.34043880170282237,
          -0.22221542087942245,
          1.1780466780859922,
          0.27999461554298827,
          -0.15976315715209463,
          -0.359902274248779,
          0.25479964819031226,
          0.9146061082533512,
          0.6490068230706638,
          -0.5511319100033508,
          0.1377946797393278,
          -0.3419504929209558,
          1.2258550163869733,
          -0.2257058221625145,
          -0.3999017121362335,
          -0.2808126519020315,
          -0.031188235019705694,
          -0.10940264714646727,
          0.4254522714373987,
          0.1262624212793596,
          0.3662883387172163,
          1.0624564422584442,
          -0.33074100633772063,
          -0.16089719815344483,
          0.26112768003889164,
          0.9449448917307204,
          0.3958618568583093,
          0.16192751129210411,
          -0.24384319277486471,
          -0.2551414157049251,
          -0.2318335375438081,
          0.6120651851709682,
          0.5206017499029276,
          -0.244394885458359,
          1.2204517913152586,
          -0.34172675714245987,
          -0.46241603900660644,
          -0.5235577793867555,
          -0.1454620341173842,
          -0.0488384677369081,
          0.9754079768007716,
          0.04837959870588579,
          -0.24545756364057145,
          -0.3630944897703056,
          0.9317945348735043,
          0.788553403106689,
          0.7599110624643592,
          0.5505730680755098,
          -0.27305129894424773,
          1.5803354873271398,
          0.8520005395195113,
          -0.33620275491493473,
          -0.2949693814635369,
          0.4489461826000164,
          0.014885972311992,
          0.855836725419263,
          0.45160126505308873,
          -0.38865056129272163,
          0.8611468903254077
         ]
        },
        {
         "marker": {
          "color": "#A2D5F2",
          "size": 7
         },
         "mode": "markers+text",
         "name": "Crack",
         "opacity": 0.9,
         "text": [
          "L. Messi",
          "Cristiano Ronaldo",
          "Neymar Jr",
          "E. Hazard",
          "K. De Bruyne",
          "V. van Dijk",
          "L. Modrić",
          "M. Salah",
          "K. Mbappé",
          "K. Koulibaly",
          "H. Kane",
          "N. Kanté",
          "G. Chiellini",
          "S. Agüero",
          "Sergio Ramos",
          "L. Suárez",
          "R. Lewandowski",
          "Sergio Busquets",
          "A. Griezmann",
          "P. Dybala",
          "P. Pogba",
          "R. Sterling",
          "C. Eriksen",
          "Piqué",
          "David Silva",
          "E. Cavani",
          "D. Godín",
          "T. Kroos",
          "M. Reus",
          "P. Aubameyang",
          "S. Mané",
          "A. Laporte",
          "Bernardo Silva",
          "Casemiro",
          "H. Son",
          "Fernandinho",
          "Thiago Silva",
          "K. Benzema",
          "J. Vertonghen",
          "D. Mertens",
          "M. Hummels",
          "T. Alderweireld",
          "Jordi Alba",
          "Thiago",
          "L. Insigne",
          "L. Sané",
          "Marquinhos",
          "M. Škriniar",
          "M. Verratti",
          "S. Umtiti",
          "J. Kimmich",
          "Isco",
          "Roberto Firmino",
          "I. Rakitić",
          "M. Pjanić",
          "A. Di María",
          "L. Bonucci",
          "Coutinho",
          "Parejo",
          "T. Müller",
          "C. Immobile",
          "A. Lacazette"
         ],
         "textfont": {
          "color": "black",
          "family": "sans serif",
          "size": 15
         },
         "type": "scatter",
         "x": [
          -1.6670229398812533,
          -1.2964186060104186,
          -1.6952067528870434,
          -1.5395450090369056,
          -0.792226222853898,
          1.0104585209758588,
          -0.5852441815472817,
          -1.1430187322612817,
          -1.1737740737193374,
          1.8905898278712439,
          -0.7182281906285999,
          0.38789864795807,
          1.5484117446070276,
          -1.3236501505143543,
          0.5785274598921378,
          -0.7669226910270405,
          -0.9207314267832165,
          0.7129826542412637,
          -0.9096325521869237,
          -1.2341919127643928,
          -0.3194290234792543,
          -1.2004708606399275,
          -0.9988699911519783,
          1.0700642775547187,
          -0.9735482356057502,
          -0.48369723598731457,
          1.425169589171444,
          -0.2719828319534019,
          -1.230359962527642,
          -1.0183047804037573,
          -1.0144721119787703,
          1.1404284841130043,
          -0.9899624223137733,
          0.6552071553621647,
          -1.1281639603293627,
          0.28826257191697013,
          0.8873340316995496,
          -0.950494192775588,
          0.8384881498928788,
          -1.4494352807195598,
          0.9530009345724867,
          1.065945715164562,
          -0.08517594496844898,
          -0.5306040554495299,
          -1.6177538105346845,
          -1.1478565057728551,
          1.0840981894516053,
          1.5113140467715758,
          -0.0408258266010053,
          0.7837765259494756,
          0.03224088795939092,
          -0.7148401588672199,
          -0.5612804464580872,
          -0.24294397612205001,
          -0.23045497820980176,
          -0.9493325171790621,
          1.0451261233595455,
          -1.027123424546907,
          -0.20452327941898923,
          -0.5105905936424872,
          -0.6685649067296693,
          -1.0081017021414862
         ],
         "y": [
          -0.484776133756384,
          0.291365561634937,
          -0.2948444612963159,
          -0.2493949574292428,
          -0.7056406856322139,
          -0.1491636960645718,
          -1.0899694958192394,
          -0.25846800724091623,
          0.07327430482591182,
          0.3519335812054387,
          0.26348183373389455,
          -0.88834819065414,
          0.23945215074969736,
          0.26576062974318876,
          -0.3752212842440279,
          0.09234838599018738,
          0.41252904213650143,
          -0.5588048876666992,
          -0.3761292274034129,
          -0.2579531625993765,
          -0.35788218260458243,
          -0.35545601308209485,
          -0.5461208562561647,
          -0.051963896904545975,
          -0.5489742393961088,
          0.3646996316022032,
          0.11103675471864903,
          -0.7141752800943071,
          -0.27406744928213295,
          0.448885166076982,
          0.03129294394309736,
          -0.23292395490498433,
          -0.5713631466000435,
          -0.3501024070665164,
          0.001847272764791992,
          -0.6739782118946651,
          -0.3038082480858521,
          0.3580133812361711,
          -0.26884152357117075,
          -0.3098845638588667,
          -0.25570737139529354,
          -0.2550587088735288,
          -0.8456962323893231,
          -0.886733112816244,
          -0.33900353312329295,
          0.1459684996012387,
          -0.34647649343785086,
          0.20965402396055074,
          -1.1673054603089352,
          -0.24296310329823528,
          -0.8649036601323075,
          -0.5202516855913657,
          -0.2178910955357958,
          -0.6700064577756808,
          -0.8871608711248395,
          -0.3461162643918566,
          -0.08046868815124153,
          -0.5476970681727841,
          -0.6274841729885812,
          0.027741154355794936,
          0.7892143332830095,
          0.2005294156471246
         ]
        }
       ],
       "layout": {
        "autosize": false,
        "height": 1000,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "size": 20
         },
         "text": "Clustering K means "
        },
        "width": 1000,
        "xaxis": {
         "title": {
          "text": "Componente 1"
         }
        },
        "yaxis": {
         "title": {
          "text": "componente 2"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"548bd3a2-33a7-4a82-a2cb-e318b9ee57ab\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"548bd3a2-33a7-4a82-a2cb-e318b9ee57ab\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        '548bd3a2-33a7-4a82-a2cb-e318b9ee57ab',\n",
       "                        [{\"marker\": {\"color\": [1.0, 1.0, 1.0, 1.0, 2.0, 0.0, 2.0, 1.0, 1.0, 0.0, 1.0, 2.0, 0.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 0.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.0, 2.0, 0.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 0.0, 2.0, 1.0, 0.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 0.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 2.0, 0.0, 2.0, 1.0, 0.0, 1.0, 2.0, 1.0, 2.0, 2.0, 0.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 0.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 2.0, 1.0, 1.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 0.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 0.0, 1.0, 2.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 0.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 0.0, 0.0, 2.0, 0.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 0.0, 1.0, 1.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 0.0, 1.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 0.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 0.0, 0.0, 2.0, 0.0, 2.0, 2.0, 1.0, 1.0, 2.0, 0.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 0.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 2.0, 1.0, 2.0, 0.0, 2.0, 0.0, 0.0, 2.0, 1.0, 2.0, 2.0, 0.0, 1.0, 2.0, 2.0, 2.0, 0.0, 1.0, 2.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 2.0, 0.0, 0.0, 2.0, 1.0, 0.0, 2.0, 2.0, 0.0, 0.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 1.0, 2.0, 0.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 2.0, 2.0, 0.0, 2.0, 0.0, 1.0, 2.0, 1.0, 2.0, 0.0, 2.0, 1.0, 1.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 2.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 0.0, 2.0, 0.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 2.0, 2.0, 2.0, 2.0, 0.0, 1.0, 1.0, 2.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 1.0, 2.0, 0.0, 1.0, 1.0, 0.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2.0, 2.0, 0.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 0.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 2.0, 0.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 0.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 2.0, 1.0, 1.0, 2.0, 2.0, 0.0, 2.0, 1.0, 0.0, 2.0, 1.0], \"colorscale\": [[0.0, \"rgb(12,51,131)\"], [0.25, \"rgb(10,136,186)\"], [0.5, \"rgb(242,211,56)\"], [0.75, \"rgb(242,143,56)\"], [1.0, \"rgb(217,30,30)\"]], \"showscale\": false, \"size\": 5}, \"mode\": \"markers\", \"type\": \"scatter\", \"x\": [-1.6670229398812533, -1.2964186060104186, -1.6952067528870434, -1.5395450090369056, -0.792226222853898, 1.0104585209758588, -0.5852441815472817, -1.1430187322612817, -1.1737740737193374, 1.8905898278712439, -0.7182281906285999, 0.38789864795807, 1.5484117446070276, -1.3236501505143543, 0.5785274598921378, -0.7669226910270405, -0.9207314267832165, 0.7129826542412637, -0.9096325521869237, -1.2341919127643928, -0.3194290234792543, -1.2004708606399275, -0.9988699911519783, 1.0700642775547187, -0.9735482356057502, -0.48369723598731457, 1.425169589171444, -0.2719828319534019, -1.230359962527642, -1.0183047804037573, -1.0144721119787703, 1.1404284841130043, -0.9899624223137733, 0.6552071553621647, -1.1281639603293627, 0.28826257191697013, 0.8873340316995496, -0.950494192775588, 0.8384881498928788, -1.4494352807195598, 0.9530009345724867, 1.065945715164562, -0.08517594496844898, -0.5306040554495299, -1.6177538105346845, -1.1478565057728551, 1.0840981894516053, 1.5113140467715758, -0.0408258266010053, 0.7837765259494756, 0.03224088795939092, -0.7148401588672199, -0.5612804464580872, -0.24294397612205001, -0.23045497820980176, -0.9493325171790621, 1.0451261233595455, -1.027123424546907, -0.20452327941898923, -0.5105905936424872, -0.6685649067296693, -1.0081017021414862, 1.093529249461258, -0.015142992894534173, 1.2726469097387774, 1.8625805082496447, 0.14430381343330845, 0.48134525304271863, 0.09383916387606614, 0.5027562488397577, 0.27934266209035696, 1.7229593078506604, 1.1575819794767146, -0.6543651644714024, -0.4901674537030536, 1.9617331646236986, -0.005926362460696614, -0.7352456743161876, 0.545507241185545, -0.8511170119353709, -0.6774218511830395, -1.2609133621248039, -0.8728357732852086, 0.4089174674722236, -0.6583522690278406, -0.13172687838812108, 0.24684081431574117, 0.2913970929087435, -1.1821736163099015, -0.12316892306126583, -0.9056197834869149, 0.2859799142378293, -1.1345525996877233, -0.8224583451644719, -1.2631044638731816, -0.01780090017490749, -0.12964558465518938, 0.8305379677487733, -0.14702203167859662, -1.1149143280454987, -0.013288492747890197, -0.9183252386171624, -1.3323345779667468, -0.9738362919577653, -1.1639965938928243, -0.8351026272816162, -0.037739199297682366, 1.401517142392075, -0.8195459049188397, 1.4420926767497237, -0.24773976595693373, -0.24921146102732897, 1.4677151245184734, 0.44721015143942977, -1.2640068529513437, 1.3290022304290816, -0.36958225401690775, -0.10354751601695807, -0.39709194572084644, 0.13147154074400225, 0.24522157212699966, 1.210534075215784, 0.6499744512659811, -0.918301985477884, -0.2196070880964404, 0.13718459141582762, 0.32548264795818244, -0.7877787210119258, -1.1626009756341185, -0.5488221371120807, -0.9892013279647349, -0.9577320217508231, -1.2417135797188417, -0.9897623984030656, 1.6299542589598748, -0.049347860501572784, 1.5795476141242863, -0.4396128767230349, 0.1396878088653918, -0.9150112469892419, -0.6080610668733534, -0.9087013505079276, -0.5797999446424876, 1.8668416496383622, 0.12875787458245314, -0.9897606253094461, -1.214317517118539, 1.110454672811558, -0.8527969561956225, 1.2243902837613034, 0.15281761495854448, -0.0802615846382569, -0.9699209872953733, -0.6878492876660327, 1.4155685001514349, -0.9765137817233976, 0.15006707845546172, -0.660689095823061, -1.0895067743817552, -0.44804315877771456, -1.0314201754040204, -1.0809244439816252, -0.77740714036711, -0.13095837455800924, 0.8581795912311934, -0.6479896558299076, 1.3230615250068618, -0.7514999703996268, 0.664738440666871, -0.7149327213501069, -0.9770339177803259, -0.9829015912341995, 0.005519232281078351, 1.2655898185524945, 1.5836531243844947, -1.1577371373284018, -0.6472330056327308, 1.2573154866300065, -1.1862497115458877, 1.2300022728340079, 0.11220123297920455, -0.04468266467958917, -0.22615246054248886, 0.48858714211492216, 0.6945669948346964, -0.8847149689740524, 0.2188616325624397, -0.48060002458544454, -0.1632541707417269, 0.2803907883361974, 0.41889367185612886, 1.2555879050077667, -0.3998173535071752, 0.6560181766797779, -0.4431342641354577, -0.81552672538089, -0.11256466033565132, -1.1660959318255977, 1.4274459825155112, 0.7572048163554432, -1.165602292999863, -0.5586977411401371, 1.2208747602300565, -1.0722326631177117, -0.976163144539493, -1.15165360718189, -1.0045137135174431, -0.2825392059247318, -0.47377410187280056, -0.3870533293884648, 0.10146000593275478, -0.06033313200964133, 1.210767786210475, -0.9078372608537373, 0.3566037891923346, 1.5675493264446796, -0.7965988846890584, -0.6769391469162986, -0.9349209517655289, -0.926876957665701, 0.4399836643345381, -0.36179376605290925, 1.265511823652482, -1.367005042309995, 1.8105347352780587, 1.3374068124114016, 0.14567760244303207, 0.5083610649718011, -0.8008526334659892, -0.7108903261671804, 0.4157573375052958, -0.34952120973063894, 0.17072923813319119, 0.338121607197659, -0.7479213953446732, 1.2296893135238172, 1.065128250360813, 0.20693339769934319, 1.2898568527624361, -0.9627251541553578, -0.9983048679162175, -0.239320232635391, -1.1075847570779214, -0.8818469270116963, 0.692934388905102, -0.19157400261717575, -0.39192138227013523, -0.45793469355011973, 0.2546141892621039, 0.18035069507585735, -1.1607931264180642, -0.2331498556487378, 1.274141157047157, -0.8920702407156282, 1.2208559322915264, -0.5191344800129479, -0.8740221180823334, -0.7718996538810242, 0.25283619334084523, -0.8894455255833763, -0.8553012522560153, -0.8867525124062569, 0.07157695314617585, -0.2402386818949843, -0.931275087828212, -0.1316098886699307, -1.011815565393393, 0.19284221902335125, -0.8992820419949509, 0.5240902198294859, 1.7314208643028521, -0.8792597354914803, 0.3041747972003403, -0.8786711127248028, -0.6079921697788693, -0.9629325206617596, -0.35123389867847477, -0.3375176633780099, -0.7352084596364049, 0.9660070666914622, 0.41071676985896405, 1.1588302570801599, -0.9238580043144451, -0.5715177890578796, -0.3155918657899994, -0.03891553563909665, 0.8896292844065015, -0.045898048440508016, 0.8483138259160578, -0.10992127545693899, -0.12808992465849792, 0.40341536821089163, 0.05878878934296154, -1.0132021118676624, -0.29781650839718277, 0.3394733377322612, -0.31966324228084597, 0.4272265625455252, -0.42602188514021855, 0.43917226380986424, -1.0320655234468243, 0.4449101435560226, 0.6951131281361403, 1.802687519898914, -0.7763018789461639, -0.08501594747416193, -0.9692434764911273, 1.0221100115382546, -0.5612280280028489, -0.23998231226124792, 0.12491134970381743, 1.6212893305526754, 0.09044858787812933, -1.0028155116145463, -0.6264175204609866, 0.5627712476334236, -0.5110209007931021, -0.09468777752272997, -1.3199035873157006, 0.8013758956879241, 0.10051181951621495, -0.6370593089200988, -0.5476632930592039, 0.20171301349681825, -0.35906254068803384, 1.3586870861707177, 1.8134588470319088, -0.04097012168241941, 1.7393527160131073, -0.1433990986751227, 0.45802203476088715, -0.7939332456404855, -0.8883679982836535, -0.0594838606195758, 1.2551142959505843, 0.3702792414804345, 0.3421395152774433, 0.7848217752184967, -0.8837295076842785, -1.4919707944338625, 0.878551552956964, 1.0461718744689679, 0.6737044044436561, 0.2633118750150637, -0.5872278547695321, 0.6381588697337002, -0.16888207282698617, -0.793648858962981, -0.17528971576376554, -0.47616586175739384, 0.551783073693705, -0.1528201375479127, -1.267535496641098, 0.9508910599073885, -1.2621523852274275, -0.48084544567597115, -0.45241231315728664, -0.8580331444905398, -0.009469815191282871, 1.2534647282275693, 1.463921999112927, -0.26619090881642915, 0.754852947708467, -0.32967952589153066, 1.6930016018362055, 0.0717704915937177, -0.46060003189380766, -0.5569197872181216, 0.7448221474693401, 0.2549343493070891, -0.5051240847348489, 1.6466992493400046, 0.34951830294699254, 0.5513662835940923, -0.6661507131580198, -0.35568727464523986, -1.143482350178569, -0.8166640331447172, 1.0447222499456095, 0.16957463837811157, 0.34632928678334224, -0.47251165331022527, 0.015387597806095756, 1.3047339247355252, 0.03542652046907927, 0.748239186404297, 0.7438915673521367, 0.19527503646383984, -0.9501493731374474, 0.6286797163208482, -0.11803022410279865, 1.1654440689261432, -0.6723265202589421, 0.16591701673909015, -0.2801214376960569, 0.019570177153234235, 0.8725275960372325, -1.2555039389855238, -0.06179537710372034, 1.2829770695521108, -1.1913481922927094, -0.8676264320992775, -0.6511323101546269, 1.258416491204627, -0.7610121819054259, -0.4834285058441462, -1.1489089142754045, 1.2858701193147855, -0.07533702544846098, 0.9763153792986404, 1.4190125726126963, 0.2854374275994673, -0.6340024886813783, 1.067646070436934, 0.04171288563110579, 0.6602233374632811, 0.8301108411642998, 1.0391736258692623, -0.3312640693284341, 0.009410082631397842, -0.6213452076972116, -0.742127510153029, 0.5464444804629068, 0.30264672504680734, -0.8158116955565247, -0.4019971544172351, -1.0378905172296442, 0.7216724597633307, -0.3557962802116049, -0.1810847853374007, 0.9384484558029854, -0.6205083048993675, 0.8264206153681324, 0.3608817055254504, -0.5614012084811468, 0.21076356939446356, 1.0512799887724251, -0.0038750620879938005, -0.8085712290803256, -0.6535524905737584, 0.07972828093509023, -1.1701408468182728, 0.732278896758715, 1.2583556923955774, 0.608675628331114, 0.14799856355603497, 1.9227499072660128, 0.7029874434443941, 1.1769388061334851, -0.8767433857959528, -0.007488322706468554, -0.8670469319113737, 0.1933901903604244, 1.056742132224221, 0.4340015556281379, -0.3894663069595212, -0.8331459820807247, 1.0973696369063797, 0.39251833518897633, -0.5716281299973063, 0.35279921333887587, 1.4159462016012647, 2.080022481085424, -0.5121658990623803, 0.9182338424368122, -0.31554742384247875, -0.43366822064558197, -0.3335421803460602, 1.639480233571107, -0.9618973549410277, -1.0697120754914964, 1.3495539917416717, -0.534284529585301, -0.9705677410994165, -0.7762551505392317, 0.11755783533902693, 0.3054598224875862, 1.337449634331132, -0.2070462265641193, 0.5530914899456415, -0.6689312307621649, -0.36297667399763067, -1.150240326542727, 0.6760427446312381, 0.6374657897667346, -0.5843478518703666, -0.45780753981599603, -0.21328006253245024, 0.45263022893783367, 0.27972666642497857, 0.45263022893783367, 0.30722716101818776, -1.1223675128147896, 0.19516200429566716, -0.3029410847080335, 0.6217021180742193, 1.5777543154524245, 0.1262272287685287, 0.7958275244994931, 0.07450624439344573, -0.7797080080163346, -0.7581777054008579, 0.2982533781533029, -1.1761121194192747, -0.7214680686457238, 1.0507283924755246, -0.8723575039242715, 0.35073432606349797, 0.19771206592432541, 0.7176496464744113, 0.4168606594047357, 1.8458053458424337, -0.7962334591614332, -0.6463925454133728, 0.12573205850783697, 0.10245185218970025, 1.1907784205771217, 0.9920890650895047, -0.2654053178855047, 0.943931353601556, 0.8599801231904542, -0.8718165874808218, 0.5536202557772418, -0.243553881630382, 0.5657190225982887, 0.4410782164669458, -0.3216270886787293, -0.9979097214316859, -0.7604108793092614, 0.9811475926125433, -0.755634268849079, 0.6214850629016011, -1.0169694901036326, -0.025207307264164886, -0.9412939035392702, -0.39189599589266977, -0.5850570431435002, -1.1297033410264175, -0.7220696233867049, 1.0200616197428334, -1.2127288744841316, 0.5219205343604387, -0.024420169785090786, 0.47808655074146805, 0.3330897972942009, 0.21293513858268995, 1.6288950498201702, -0.16913658128678985, 1.2409763491266912, 1.2512486709000041, 1.430545814593453, -0.6409652170911148, -0.10303922533030857, 0.701510992442207, 0.6676468565955911, -0.9309377010538616, -0.5131085528451768, -0.3915368727630513, 0.4749652004662409, 1.807511296188057, 1.0258517947114036, 1.6052709102933989, 0.7195679835073407, 1.5472882374662633, 0.5286895789207942, -0.08916200033224717, -0.6812314309206358, 1.1120319808204517, -0.8678598041168412, -0.15388715795301805, 1.6510630580288828, -0.7053788317076696, -0.16990338620388273, 1.6638371238764973, 1.3068388773970108, 0.5125289970226451, 0.2896330996612303, 0.33719639168789567, 0.588417186823272, -0.23339564887681372, -0.24432921746162203, -0.8427281239672055, 1.0609301892138558, 0.2946368259960211, -0.7985578320703659, -0.8626074813482504, -0.5176591545751096, -0.8223269381387986, 1.2514882176566124, 0.372364144682632, -0.9273474934519735, -0.16168172135327963, 1.8351412323196075, 1.6780434987706092, -0.756884358546864, 1.0047896287002824, 0.46422760504943017, -0.4349548140776577, 1.3927214462366053, -0.04050420687886913, 0.09302379189665337, 0.5406163448331016, -0.7229639715574538, 0.06466860900358765, -1.1709330691438904, 0.20008339441506767, 0.3468640236701085, -0.22623567658001756, -0.43448722902504927, -0.7885797115538222, 0.48782591882383997, 0.13448931511612194, 1.278777909092132, -0.32286007118337856, -0.24647201100610822, 0.10524253315789876, -0.7910463282188948, 0.13438522879661396, -0.2636026353688034, -0.6149417766102595, -0.1936095166720878, 0.5871402316170584, -1.0332104779645321, -0.38245465605172746, 1.3475128479654213, -0.9588419259058202, -0.5162331127775573, -0.32887960731873844, 0.4333407718408982, 0.4569877301133533, 1.3779041168653652, -0.45699594446435576, -0.6382785326874156, -0.7508478744609893, 0.2718071294938753, -0.03256689161223365, 0.31772426577603347, 1.5252552892122606, -0.6445401349618216, 0.4883500902178734, -0.46198580257616656, 0.3506356166091338, 0.3573857716898045, 0.21246976771155715, -0.90858284629784, -0.3987469972867594, -0.6901677135956169, 0.761601927813514, 0.46588722821898265, -0.008875753840154333, -0.7585777353967925, -0.6134610410201569, 1.5583053773537383, 1.3811318351740165, 0.405517082903486, -0.11405651992250206, -0.17769581293081887, 0.4144713330253, 0.5039826180824553, 1.355269961002532, 0.5570640502210515, -1.0149170010088688, 1.3525784052956968, 0.3595481947846112, -1.0203001124225395], \"y\": [-0.484776133756384, 0.291365561634937, -0.2948444612963159, -0.2493949574292428, -0.7056406856322139, -0.1491636960645718, -1.0899694958192394, -0.25846800724091623, 0.07327430482591182, 0.3519335812054387, 0.26348183373389455, -0.88834819065414, 0.23945215074969736, 0.26576062974318876, -0.3752212842440279, 0.09234838599018738, 0.41252904213650143, -0.5588048876666992, -0.3761292274034129, -0.2579531625993765, -0.35788218260458243, -0.35545601308209485, -0.5461208562561647, -0.051963896904545975, -0.5489742393961088, 0.3646996316022032, 0.11103675471864903, -0.7141752800943071, -0.27406744928213295, 0.448885166076982, 0.03129294394309736, -0.23292395490498433, -0.5713631466000435, -0.3501024070665164, 0.001847272764791992, -0.6739782118946651, -0.3038082480858521, 0.3580133812361711, -0.26884152357117075, -0.3098845638588667, -0.25570737139529354, -0.2550587088735288, -0.8456962323893231, -0.886733112816244, -0.33900353312329295, 0.1459684996012387, -0.34647649343785086, 0.20965402396055074, -1.1673054603089352, -0.24296310329823528, -0.8649036601323075, -0.5202516855913657, -0.2178910955357958, -0.6700064577756808, -0.8871608711248395, -0.3461162643918566, -0.08046868815124153, -0.5476970681727841, -0.6274841729885812, 0.027741154355794936, 0.7892143332830095, 0.2005294156471246, 0.04352798115247077, -0.8005638015698715, 0.13738098761543657, 0.5578724391878837, -0.3379332625159552, -0.4379549503841231, -0.4548549707631786, -0.4884256740921628, -0.6604165851929176, 0.48354898012582037, -0.08918843570964564, -0.6779878086289225, 0.9394535525688561, 0.5646760637935975, -0.605227690402733, 0.9851625775253565, -0.6649477580679661, -0.4520544141810253, 0.8524023218525045, -0.25748003169876177, 0.8793510820594372, -0.5482001024357335, -0.06513083193336283, -0.7327911492150323, -0.4898680416643692, -0.5137162067144916, 0.29023166714720544, -0.7561555773804571, -0.3050124221615494, -0.7994270175504692, -0.03251806666322672, 0.11853623398959351, -0.10720298289212624, -0.731459643923081, -0.2918851140728006, -0.20682762630071924, -0.7208337899692286, 0.2544902654665916, -0.4307530289319407, 0.05983966722285005, 0.24396057051094747, -0.0156734706023215, 0.05683652414442038, -0.264771079614864, -0.7179486637803643, 0.07138475580881125, -0.5045815112273961, 0.35123746079782436, -0.7002472721154868, -0.47334512237162213, 0.5158753129910312, -0.5287434139080118, 0.18088367044399176, 0.12476067444985096, 0.755116253669886, -0.5737501302001121, -0.05676059832664742, 0.3637080596116223, -0.5549390508506278, 0.04577405069780729, -0.5321418667010451, 0.13261655639262118, -0.6561961476599153, -0.2981001292336392, -0.43959078356642195, -0.3083862025694177, -0.20985911376995106, -0.5714589089898817, 0.014017860519720118, 0.07209866766024198, -0.06718154934847724, -0.24581160805408753, 0.4388894267101332, -0.4920524633434915, 0.22921856248548889, -0.5664420965689296, -0.7241454102572773, 0.8077984529770437, 0.7683827960233176, 0.31014214752455344, -0.06180919213542409, 0.5149439154949746, -0.3837621704562575, 0.1656379018598858, 0.28606317278699195, -0.043172220698074595, 0.22671224089274364, -0.15518041721398404, -0.3875131312359522, -0.8346576301077359, 0.6132788852676864, -0.575640184952958, 0.2585274849715822, -0.1086816128186649, -0.6054899734853054, -0.19073390924027672, 0.1709728716570861, 1.0514212879634275, 0.41249964335318773, 0.5179277581219287, 0.9765395508533059, 0.8277396514035819, -0.1523235487723237, -0.39323668662423444, 0.04567802411996939, -0.37917812144032925, -0.29400615267072155, -0.4017012406936213, -0.07017657782439683, 0.10174795812485178, -0.6320960168691431, 0.2342737682439106, 0.18982154102710314, 0.5819626443251753, 0.6115213403869949, 0.2124359245494242, 0.36195150379364643, 0.2738713410148539, -0.7386271718175554, -0.7786046383826779, 0.874015595485808, -0.19042371846883505, -0.1313700875927289, 0.05781684337748173, -0.5401360189173349, -0.21796017328755402, -0.38390270630658724, -0.6800811387413359, -0.5740912627230075, 0.22523333938666898, -0.45646683655573855, -0.5215704766210849, -0.679700850051139, 0.3675200474694738, -0.7662458548459098, 0.14498563771770587, 0.24326828298400804, -0.10118722446624534, 0.4964931341212593, 1.2060022577340286, 0.15256160829648616, 0.05382477116553991, 0.09160858522607664, 0.3175168216104473, 0.3108161293082214, -0.6594245300919218, 0.9486061876432347, -0.6548637015210733, -0.8594395272532634, -0.5346354343442825, -0.010094943449556042, 0.21720344296439023, -0.46301090519643506, 0.35353845175736565, -0.16316996145764162, 0.5610313839433709, 0.1582920013419888, -0.10152334503715069, -0.34091468569980266, -0.5005758975967272, 0.1588744251589914, -0.01327243446530337, 0.49610401717512403, 0.17298600708020212, -0.6037212701093149, -0.39767306690339943, -0.33178371160996684, -0.47982514360487544, -0.35981171193411293, 1.019655219432683, -0.6081796801477484, -0.36423673689239944, 0.25001575491976125, 0.04528139522415932, -0.006644318054903006, -0.4478060808886697, 0.3304600400309176, -0.320145536530379, 0.107813032580612, -0.3123252921248235, -0.19567873253210066, -0.22881614289013255, -0.23982993406089856, 0.8751898905871074, -0.6518111206760254, -0.6252697650679698, -0.31266595281306964, -0.6847544428527178, -0.13561102232543704, 0.9984196050459312, 0.3434933292725036, -0.36417059487226183, 0.2519905874918481, 0.3326645488373136, 0.04079222161269011, -0.060138509393030545, -0.43520679317162275, 0.9284274682427497, -0.09699932816337015, -0.07096197182151093, 1.4287580726386562, -0.5239846678817774, -0.029868275322734714, 0.6934231280822979, 0.23397009566094287, -0.6425177262100631, -0.32347098525622414, -0.27962338662587877, 0.6556630425603727, 0.5576490025431962, -0.14972489179099452, 0.37679860967370943, -0.21291630961867242, 0.09447655028793897, 0.45012833262794777, 1.3116740955424155, -0.16812025080576265, 0.3092638507481155, -0.5296389567267376, 0.19713265392212032, 0.06413667633488448, 0.6080702948941298, -0.5162785911132507, -0.5464812764497691, -0.04866766938883747, -0.3299721281721132, -0.20834959083632512, -0.6495514570988166, -0.5590455697970534, -0.4259074398227366, -0.7089268173372375, 0.10344311295787319, -0.6177340634482623, -0.2800936168546762, -0.4478493847589056, -0.26800136457938223, -0.10143816445558293, -0.41921748944402176, 0.903079044144505, -0.23773270628241314, -0.2130634579662383, 0.6756972028848981, 0.40540202131977665, 0.6421856155101204, -0.3571804206355716, 0.1931805919882124, -0.8119001026211136, -0.4254103395853827, -0.5601381660634311, 0.4178998778111341, -0.5993826370346674, 0.05941165081477475, -0.4080734342196686, -0.17722824545752947, 0.6119214305568174, 1.3109213151887882, 0.2096353197649201, 0.003856794040782937, -0.6215833678333276, 0.2584003115386772, 0.9587594869988678, -0.3158164050775628, -0.2605892967599112, 0.17959200119319293, 0.8391489551386205, -0.3098005216062157, 0.5849570475608329, -0.6877185903687006, -0.22474435453155855, 0.27442451984333044, 0.09748369979114761, -0.49120952442528676, 0.25792712812886215, -0.2661735819049757, -0.35054965124986154, -0.15473169034874754, -0.05170356126863392, -0.1606569140548145, -0.07804551362752028, 0.07579894265854685, -0.09921071582324968, -0.3009811505439315, -0.20647824204342982, -0.27578766935797017, -0.5708917809775779, 0.365560208136144, 0.054993767003836916, -0.3666813964815524, -0.3741688139439963, -0.7071986430761493, 0.16964600861635892, 0.3297987821236984, 0.1643358437102142, 1.2567127838186467, 1.4591351605004463, 0.22020791771634782, -0.7422210074177799, 0.06246997261161778, 0.12975372832425877, -0.5290943679823606, -0.21747951363346477, -0.3295696946586488, 0.5993493859654091, -0.6053725845555319, 1.183357311032927, -0.029656923509619276, -0.2859421046277206, -0.3444456969004464, -0.38001907980157706, 0.5528148456811509, -0.32869863049412296, -0.32230462230314505, 1.104797202624481, 0.3150087638636469, 0.13526635205342863, 0.3728906741419809, -0.014063184722478635, -0.32039738000343887, -0.35937925959873374, 1.0670508601881876, -0.4227869454985792, 0.5754203559382775, -0.5458295360557637, -0.1903413928421331, -0.21211811151992183, -0.2704477499180646, 0.544621625793266, -0.3950212198014452, -0.6765013233671142, 0.17986216277085992, 1.2140198143093435, -0.4795453145007205, -0.5165397163776683, -0.45758007040591325, -0.19800333767661032, 0.24539515788892416, -0.7383766433154221, 0.3116128359890956, -0.06190455110680552, -0.025033049803337384, 0.644991944137625, 0.3843870982885521, -0.1687141835771296, -0.27019831580416936, 0.04853385389578635, 0.14409118077816488, -0.08995183165632312, 0.1949883659810081, 0.20957058781288446, -0.27906326509344603, 0.677167617977823, 0.08912938952219064, -0.13119619468673693, -0.1318289820534002, -0.1539200711173907, 0.03557561860825413, -0.07240911678332544, -0.2623220651164964, -0.4626358977191148, 0.8660199303671462, -0.06750551582500908, -0.2635491881343508, 0.03325532924551892, 0.048763044086094845, 0.0968880606934463, -0.31744456563072837, 0.7965296153345298, 1.0813314603030968, -0.019765154290850042, 0.9534247735890046, -0.04587643281202566, -0.43614278969688947, 0.047672642489004824, -0.054663813266448175, 0.4389865314366959, -0.47664962806572314, -0.14775317272209243, -0.02385963637391867, -0.645837785291405, -0.056005019896280275, -0.16678509550340356, 0.2204991869236806, -0.07799221577914472, -0.4751237891303785, 0.7424158122295244, -0.37591922785588744, 0.44201308578529364, 0.1690473828887782, 0.4414391754942619, 0.3815837169144971, -0.5921166810389599, 0.03043020273041159, -0.28009130369514185, -0.053196831757963726, 0.7563358191418815, 0.19451498572710268, -0.40606021088754424, 0.4054223659548551, -0.334390478688255, 0.6217330371741069, 0.9314177114037065, -0.0627976067408026, 0.05444043914829709, -0.2918789274108428, -0.15941513144673372, 0.6969143263424417, 0.5340547859337699, -0.40687956729069674, 0.734099554937936, 0.30817985836280504, -0.2686238484068213, 0.09619277573247537, -0.004692551489523355, -0.4083669100607451, -0.36664485533877567, 0.3579320948488695, 0.7827580824525147, -0.2657592184953047, -0.1975042139190971, 0.6436202204450437, -0.0798319502269136, -0.2024259090071279, -0.20002513059876184, -0.19388851324991505, 1.1797023517664225, 1.10515768218835, -0.37223459092959177, -0.45287679036051776, -0.37223459092959177, -0.47972762518331763, 0.33638197454890223, -0.35669938393365636, -0.1675725189203155, -0.21829699370560215, 0.44257771973542437, -0.18940407510015558, 0.029701431376976516, -0.3374441158439343, 0.1538433814837637, -0.2003158280927725, -0.4191350642300242, 0.4534213148943028, -0.0001496780454754973, 0.02900820793016925, 0.18377004531545948, -0.24379275918602894, -0.31217054677747125, -0.2939774714174551, -0.4183342135641913, 0.6187639751900339, -0.06309581633821303, 0.9826284967123642, -0.02318092533347431, -0.5249993258314953, 0.13785549487066787, 0.1978179345377991, -0.4750476653925795, -0.1273355887573886, -0.19343072903595723, 0.12072102648250899, -0.27412483792901465, 1.0122069547404238, -0.06150228970355728, -0.11598129539494251, -0.5397485143817133, 0.4033768015042712, -0.05283164890086053, 0.17061912966184836, 0.4886870321473073, -0.16072681942167788, 0.374397427983198, -0.5421212593795084, -0.13858486808716283, 0.7071827391934485, 0.4026971573995919, -0.09255178763726524, -0.07910685162351945, 0.1691593519011121, 0.3213739832952675, -0.32994767436991645, -0.302111510543799, -0.32549299978215745, -0.4460633524430078, -0.1794829939367519, 0.49064657982483956, 0.10564183708398488, 0.28565496424753456, 0.2413026587908625, 0.43832484011933776, 1.1266520657879353, -0.337769649757214, 0.09304147038990028, -0.007061738361363711, -0.07389475002667939, 1.2406615425192389, 0.7710517496404375, -0.3016954669933815, 0.7715108841749747, 0.26682828238548983, 0.758541234544611, -0.008132103485224527, 0.5176243105148781, -0.311915306325428, -0.6003542650609076, 0.9850328999243292, 0.33915065200621003, 0.9168657501393493, -0.07532426518992029, 0.37102197007727655, 0.6443375649530738, 0.724520122683263, 0.5895689750097702, 0.3958761839869953, -0.2144683161126557, -0.27066782986816734, -0.3194813819513519, -0.1623377136243085, -0.3239570165941503, -0.6924263337220251, 0.6525010639910588, 0.05351824093468631, -0.23696620578935068, 0.4610281386923583, 0.473951379049869, 1.0123904871911398, 0.4299849128193762, 0.19142252426819958, -0.2529886430136917, 0.18065240456285817, -0.4543658685176419, 0.8062303778188404, 0.485378922821872, 0.2597798746722538, -0.029991649002186725, -0.28842133796353103, -0.22210566857826378, 0.4577928105924855, -0.04770882687776619, -0.3593589693324556, -0.2173204050405828, 0.8802122169936424, -0.28657038330487156, 0.45669255568350514, -0.2810580544970608, -0.34043880170282237, -0.22221542087942245, 1.1780466780859922, 0.27999461554298827, -0.15976315715209463, -0.359902274248779, 0.25479964819031226, 0.9146061082533512, 0.6490068230706638, -0.5511319100033508, 0.1377946797393278, -0.3419504929209558, 1.2258550163869733, -0.2257058221625145, -0.3999017121362335, -0.2808126519020315, -0.031188235019705694, -0.10940264714646727, 0.4254522714373987, 0.1262624212793596, 0.3662883387172163, 1.0624564422584442, -0.33074100633772063, -0.16089719815344483, 0.26112768003889164, 0.9449448917307204, 0.3958618568583093, 0.16192751129210411, -0.24384319277486471, -0.2551414157049251, -0.2318335375438081, 0.6120651851709682, 0.5206017499029276, -0.244394885458359, 1.2204517913152586, -0.34172675714245987, -0.46241603900660644, -0.5235577793867555, -0.1454620341173842, -0.0488384677369081, 0.9754079768007716, 0.04837959870588579, -0.24545756364057145, -0.3630944897703056, 0.9317945348735043, 0.788553403106689, 0.7599110624643592, 0.5505730680755098, -0.27305129894424773, 1.5803354873271398, 0.8520005395195113, -0.33620275491493473, -0.2949693814635369, 0.4489461826000164, 0.014885972311992, 0.855836725419263, 0.45160126505308873, -0.38865056129272163, 0.8611468903254077]}, {\"marker\": {\"color\": \"#A2D5F2\", \"size\": 7}, \"mode\": \"markers+text\", \"name\": \"Crack\", \"opacity\": 0.9, \"text\": [\"L. Messi\", \"Cristiano Ronaldo\", \"Neymar Jr\", \"E. Hazard\", \"K. De Bruyne\", \"V. van Dijk\", \"L. Modri\\u0107\", \"M. Salah\", \"K. Mbapp\\u00e9\", \"K. Koulibaly\", \"H. Kane\", \"N. Kant\\u00e9\", \"G. Chiellini\", \"S. Ag\\u00fcero\", \"Sergio Ramos\", \"L. Su\\u00e1rez\", \"R. Lewandowski\", \"Sergio Busquets\", \"A. Griezmann\", \"P. Dybala\", \"P. Pogba\", \"R. Sterling\", \"C. Eriksen\", \"Piqu\\u00e9\", \"David Silva\", \"E. Cavani\", \"D. God\\u00edn\", \"T. Kroos\", \"M. Reus\", \"P. Aubameyang\", \"S. Man\\u00e9\", \"A. Laporte\", \"Bernardo Silva\", \"Casemiro\", \"H. Son\", \"Fernandinho\", \"Thiago Silva\", \"K. Benzema\", \"J. Vertonghen\", \"D. Mertens\", \"M. Hummels\", \"T. Alderweireld\", \"Jordi Alba\", \"Thiago\", \"L. Insigne\", \"L. San\\u00e9\", \"Marquinhos\", \"M. \\u0160kriniar\", \"M. Verratti\", \"S. Umtiti\", \"J. Kimmich\", \"Isco\", \"Roberto Firmino\", \"I. Rakiti\\u0107\", \"M. Pjani\\u0107\", \"A. Di Mar\\u00eda\", \"L. Bonucci\", \"Coutinho\", \"Parejo\", \"T. M\\u00fcller\", \"C. Immobile\", \"A. Lacazette\"], \"textfont\": {\"color\": \"black\", \"family\": \"sans serif\", \"size\": 15}, \"type\": \"scatter\", \"x\": [-1.6670229398812533, -1.2964186060104186, -1.6952067528870434, -1.5395450090369056, -0.792226222853898, 1.0104585209758588, -0.5852441815472817, -1.1430187322612817, -1.1737740737193374, 1.8905898278712439, -0.7182281906285999, 0.38789864795807, 1.5484117446070276, -1.3236501505143543, 0.5785274598921378, -0.7669226910270405, -0.9207314267832165, 0.7129826542412637, -0.9096325521869237, -1.2341919127643928, -0.3194290234792543, -1.2004708606399275, -0.9988699911519783, 1.0700642775547187, -0.9735482356057502, -0.48369723598731457, 1.425169589171444, -0.2719828319534019, -1.230359962527642, -1.0183047804037573, -1.0144721119787703, 1.1404284841130043, -0.9899624223137733, 0.6552071553621647, -1.1281639603293627, 0.28826257191697013, 0.8873340316995496, -0.950494192775588, 0.8384881498928788, -1.4494352807195598, 0.9530009345724867, 1.065945715164562, -0.08517594496844898, -0.5306040554495299, -1.6177538105346845, -1.1478565057728551, 1.0840981894516053, 1.5113140467715758, -0.0408258266010053, 0.7837765259494756, 0.03224088795939092, -0.7148401588672199, -0.5612804464580872, -0.24294397612205001, -0.23045497820980176, -0.9493325171790621, 1.0451261233595455, -1.027123424546907, -0.20452327941898923, -0.5105905936424872, -0.6685649067296693, -1.0081017021414862], \"y\": [-0.484776133756384, 0.291365561634937, -0.2948444612963159, -0.2493949574292428, -0.7056406856322139, -0.1491636960645718, -1.0899694958192394, -0.25846800724091623, 0.07327430482591182, 0.3519335812054387, 0.26348183373389455, -0.88834819065414, 0.23945215074969736, 0.26576062974318876, -0.3752212842440279, 0.09234838599018738, 0.41252904213650143, -0.5588048876666992, -0.3761292274034129, -0.2579531625993765, -0.35788218260458243, -0.35545601308209485, -0.5461208562561647, -0.051963896904545975, -0.5489742393961088, 0.3646996316022032, 0.11103675471864903, -0.7141752800943071, -0.27406744928213295, 0.448885166076982, 0.03129294394309736, -0.23292395490498433, -0.5713631466000435, -0.3501024070665164, 0.001847272764791992, -0.6739782118946651, -0.3038082480858521, 0.3580133812361711, -0.26884152357117075, -0.3098845638588667, -0.25570737139529354, -0.2550587088735288, -0.8456962323893231, -0.886733112816244, -0.33900353312329295, 0.1459684996012387, -0.34647649343785086, 0.20965402396055074, -1.1673054603089352, -0.24296310329823528, -0.8649036601323075, -0.5202516855913657, -0.2178910955357958, -0.6700064577756808, -0.8871608711248395, -0.3461162643918566, -0.08046868815124153, -0.5476970681727841, -0.6274841729885812, 0.027741154355794936, 0.7892143332830095, 0.2005294156471246]}],\n",
       "                        {\"autosize\": false, \"height\": 1000, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"size\": 20}, \"text\": \"Clustering K means \"}, \"width\": 1000, \"xaxis\": {\"title\": {\"text\": \"Componente 1\"}}, \"yaxis\": {\"title\": {\"text\": \"componente 2\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('548bd3a2-33a7-4a82-a2cb-e318b9ee57ab');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data=[]\n",
    "bool_crack=df_filter[\"overall\"] > 85\n",
    "bool_no_crack=df_filter[\"overall\"]<86\n",
    "\n",
    "\n",
    "#Eligo dos números entre 0 y n_components-1\n",
    "comp_1 = 0\n",
    "comp_2 = 1\n",
    "\n",
    "\n",
    "kmean_clusters = go.Scatter(x=df_over_projected[:,comp_1], y=df_over_projected[:,comp_2],\n",
    "                           mode='markers',\n",
    "                        #text=df_filter.loc[:,'short_name'],\n",
    "                           marker=dict(\n",
    "                                size=5,\n",
    "                                color = clusters.astype(np.float), #set color equal to a variable\n",
    "                                colorscale='Portland',\n",
    "                                showscale=False)\n",
    "                           )\n",
    "\n",
    "crack =go.Scatter(x=df_over_projected[bool_crack,0], y=df_over_projected[bool_crack,1],name='Crack',\n",
    "                      text=df_filter.loc[bool_crack,'short_name'],\n",
    "                      textfont=dict(family='sans serif',size=15,color='black'),\n",
    "                      opacity=0.9,marker=dict(color=palette[2],size=7),mode='markers+text')\n",
    "\n",
    "\n",
    "data=[kmean_clusters,crack]\n",
    "\n",
    "layout = go.Layout(title=\"Clustering K means \",titlefont=dict(size=20),\n",
    "                xaxis=dict(title='Componente 1'),\n",
    "                yaxis=dict(title='componente 2'),\n",
    "                autosize=False, width=1000,height=1000)\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "\n",
    "iplot(fig)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Tras procesar los datos con PCA obtenemos una estructura mas clara en la separacion de los datos. Como resultado encontramos una mejor clasificacion de los jugadores en los 3 clusters deseados. A su vez, podemos notar que el modelo de kmeans ahora presenta menor ruido en torno a los defensores. Tambien la separacion entre defensores y mediocampistas es mas precisa."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T03:23:48.196968Z",
     "start_time": "2020-10-13T03:23:48.188933Z"
    }
   },
   "outputs": [],
   "source": [
    "# Seleccionamos jugadores que son criticos para determinar la correcta clasificacion.\n",
    "# Decimos que son criticos porque son jugadores que claramente ocupan una posicion.\n",
    "# Si estos jugadores estuvieran mal clasificados entonces el modelo seria decididamente malo.\n",
    "# Idealmente tenemos una lista mucho mas larga de jugadores clasificados (y con distribuciones parejas).\n",
    "# Sirva este analisis a modo ilustrativoA\n",
    "\n",
    "delanteros = ['L. Messi', 'Cristiano Ronaldo', 'K. De Bruyne', 'A. Griezmann', 'L. Suárez', 'K. Mbappé', 'E. Cavani']\n",
    "mediocampistas = ['Sergio Busquets', 'Fernandinho','L. Biglia', 'Thiago']\n",
    "defensores = ['G. Chiellini', 'D. Godín','Piqué','L. Bonucci', 'Jordi Alba']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:20:48.624774Z",
     "start_time": "2020-10-13T04:20:48.604951Z"
    }
   },
   "outputs": [],
   "source": [
    "# armamos un df para evaluacion\n",
    "df_evaluation = df_filter[['short_name']]\n",
    "\n",
    "# guardamos los labels para cada instancia y lo asignamos a una columan del dd para evaluacion\n",
    "labels = km_pry.labels_\n",
    "df_evaluation['k_mean'] = pd.DataFrame(enumerate(km.labels_))[1]\n",
    "df_evaluation['kmean_pca'] = pd.DataFrame(enumerate(labels))[1]\n",
    "df_evaluation['aglomerative'] = pd.DataFrame(enumerate(ac.labels_))[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:20:48.830886Z",
     "start_time": "2020-10-13T04:20:48.811757Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>short_name</th>\n",
       "      <th>k_mean</th>\n",
       "      <th>kmean_pca</th>\n",
       "      <th>aglomerative</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>G. Chiellini</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Piqué</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>D. Godín</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Jordi Alba</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>L. Bonucci</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      short_name  k_mean  kmean_pca  aglomerative\n",
       "16  G. Chiellini     2.0        1.0           1.0\n",
       "29         Piqué     2.0        1.0           1.0\n",
       "35      D. Godín     0.0        2.0           2.0\n",
       "51    Jordi Alba     2.0        1.0           1.0\n",
       "67    L. Bonucci     0.0        2.0           2.0"
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Analisamos \n",
    "df_defensores = df_filter[df_filter['short_name'].isin(defensores)]\n",
    "df_defensores[['short_name']].merge(df_evaluation[['k_mean','kmean_pca','aglomerative']], how='inner', left_index=True, right_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:21:01.460545Z",
     "start_time": "2020-10-13T04:21:01.431065Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>short_name</th>\n",
       "      <th>k_mean</th>\n",
       "      <th>kmean_pca</th>\n",
       "      <th>aglomerative</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Sergio Busquets</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Fernandinho</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Thiago</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>292</th>\n",
       "      <td>L. Biglia</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          short_name  k_mean  kmean_pca  aglomerative\n",
       "21   Sergio Busquets     2.0        1.0           1.0\n",
       "44       Fernandinho     2.0        1.0           1.0\n",
       "52            Thiago     2.0        1.0           2.0\n",
       "292        L. Biglia     0.0        2.0           0.0"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mediocampistas = df_filter[df_filter['short_name'].isin(mediocampistas)]\n",
    "df_mediocampistas[['short_name']].merge(df_evaluation[['k_mean','kmean_pca','aglomerative']], how='inner', left_index=True, right_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:21:54.460531Z",
     "start_time": "2020-10-13T04:21:54.440499Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>short_name</th>\n",
       "      <th>k_mean</th>\n",
       "      <th>kmean_pca</th>\n",
       "      <th>aglomerative</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>L. Messi</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cristiano Ronaldo</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>K. De Bruyne</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>K. Mbappé</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>L. Suárez</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>A. Griezmann</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>E. Cavani</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           short_name  k_mean  kmean_pca  aglomerative\n",
       "0            L. Messi     2.0        1.0           1.0\n",
       "1   Cristiano Ronaldo     2.0        1.0           1.0\n",
       "5        K. De Bruyne     1.0        0.0           0.0\n",
       "10          K. Mbappé     2.0        1.0           1.0\n",
       "19          L. Suárez     2.0        1.0           1.0\n",
       "22       A. Griezmann     2.0        1.0           1.0\n",
       "34          E. Cavani     2.0        1.0           1.0"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_delanteros = df_filter[df_filter['short_name'].isin(delanteros)]\n",
    "df_delanteros[['short_name']].merge(df_evaluation[['k_mean','kmean_pca','aglomerative']], how='inner', left_index=True, right_index=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Las tablas anteriores son ilustrativas, y como ya se ha dicho seria ideal contar con una muestra mas representativa por posicion. Aun asi, estos jugadores son iconicos de sus posiciones, y que estuvieran mal clasificados seria un error grande por parte del modelo.\n",
    "\n",
    "Si bien se puede observar que los modelos clasifican juntos a los jugadores que deberian estar juntos, si miramos entre las tablas de defensores, mediocampistas y delanteros veremos que hay un cluster (que es el cluster 1) que se repite en las 3 tablas. Si estuvieramos en un caso de aprendizaje supervisado diriamos que los modelos tienen precision pero les falta sensibilidad a los falsos positivos.\n",
    "\n",
    "Atendiendo a esto elaboramos un score personalizado que suma un punto por cada jugador que deberia compartir cluster y efectivamente lo comparte (por ejemplo, si Messi esta en el mismo cluster que ronaldo, sumamos 1, en caso contrario sumamos 0). Y para distinguir a las malas clasificaciones apelamos a una penalizacion de 1 punto por cada vez que un delantero y un defensor comparten cluster (Por ejemplo, Messi y Godin). Tambien se aplica una penalizacion de 0.5 puntos si comparten cluster un defensor y un mediocampista o un mediocampista y un delantero. Esto supone un castigo menor cuando se meczlan delanteros con mediocampistas o defensores con mediocampistas, que cuando se mezclan delanteros con defensores.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:33:02.021251Z",
     "start_time": "2020-10-13T04:33:01.708658Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The score for the  k_mean model is:  -10.5\n",
      "The score for the  kmean_pca model is:  -10.5\n",
      "The score for the  aglomerative model is:  -8.5\n",
      "The score for the  reference model is:  29.0\n"
     ]
    }
   ],
   "source": [
    "def calculate_score(set_of_players, model_name):\n",
    "    score = 0\n",
    "    for i in range(len(set_of_players)):\n",
    "        player_1_cluster = df_evaluation.loc[df_evaluation['short_name']==set_of_players[i], model_name]\n",
    "\n",
    "        for j in range(i+1,len(set_of_players)):\n",
    "\n",
    "            player_2_cluster = df_evaluation.loc[df_evaluation['short_name']==set_of_players[j], model_name]\n",
    "            # print(player_1_cluster.values[0], player_2_cluster.values[0])\n",
    "            # print(set_of_players[i], set_of_players[j])\n",
    "            if(player_1_cluster.values[0] == player_2_cluster.values[0]):\n",
    "                score += 1\n",
    "    return score\n",
    "\n",
    "def delantero_defensor_panalty(delanteros, defensores, model_name):\n",
    "    score = 0\n",
    "    for i in range(len(delanteros)):\n",
    "        delantero_cluster = df_evaluation.loc[df_evaluation['short_name']==delanteros[i], model_name]\n",
    "\n",
    "        for j in range(len(defensores)):\n",
    "\n",
    "            defensor_cluster = df_evaluation.loc[df_evaluation['short_name']==defensores[j], model_name]\n",
    "\n",
    "            if(delantero_cluster.values[0] == defensor_cluster.values[0]):\n",
    "                # print(delantero_cluster.values[0], defensor_cluster.values[0])\n",
    "                # print(delanteros[i], defensores[j])\n",
    "                score -= 1\n",
    "    return score\n",
    "\n",
    "def grupo_contiguo_penalty(group_1, group_2, model_name):\n",
    "    score = 0\n",
    "    for i in range(len(group_1)):\n",
    "        group_1_cluster = df_evaluation.loc[df_evaluation['short_name']==group_1[i], model_name]\n",
    "\n",
    "        for j in range(len(group_2)):\n",
    "\n",
    "            group_2_cluster = df_evaluation.loc[df_evaluation['short_name']==group_2[j], model_name]\n",
    "            \n",
    "            if(group_1_cluster.values[0] == group_2_cluster.values[0]):\n",
    "                score -= .5\n",
    "    \n",
    "    return score\n",
    "\n",
    "models = ['k_mean','kmean_pca','aglomerative', 'reference']\n",
    "positions = [delanteros, mediocampistas, defensores]\n",
    "\n",
    "for model in models:\n",
    "    final_score = 0\n",
    "    for position in positions:\n",
    "        final_score += calculate_score(position,model)\n",
    "    final_score += delantero_defensor_panalty(delanteros, defensores, model)\n",
    "    final_score += grupo_contiguo_penalty(delanteros, mediocampistas, model)\n",
    "    final_score += grupo_contiguo_penalty(mediocampistas, defensores, model)\n",
    "    print(\"The score for the \", str(model), \"model is: \", final_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:24:07.584020Z",
     "start_time": "2020-10-13T04:24:07.567644Z"
    }
   },
   "outputs": [],
   "source": [
    "def combine_positions(row):\n",
    "    # There are 15 different positions\n",
    "    positions = row['player_positions'].split(', ') \n",
    "    N = len(positions)\n",
    "    if N < 3:\n",
    "        # If a player has two positions the first one will be considered as their\n",
    "        # position, of course, players with only one position won't be affected\n",
    "        position = positions[0]\n",
    "        if position in ['ST', 'LW', 'RW','CF']: #4\n",
    "            return 0 #ATTACKER\n",
    "        elif position in ['CAM', 'LM', 'CM', 'RM', 'CDM']: #5\n",
    "            return 1 #MIDFIELDER\n",
    "        elif position in ['LWB', 'RWB', 'LB', 'CB', 'RB']: #5\n",
    "            return 2 #DEFENDER\n",
    "        elif position in ['GK']: #1\n",
    "            return 3 #GOALKEEPER\n",
    "    else: # If player has three possible positions\n",
    "        position_count = [0, 0, 0, 0] \n",
    "        for position in positions:\n",
    "            if position in ['ST', 'LW', 'RW','CF']: #4\n",
    "                index = 0 #ATTACKER\n",
    "            elif position in ['CAM', 'LM', 'CM', 'RM', 'CDM']: #5\n",
    "                index = 1 #MIDFIELDER\n",
    "            elif position in ['LWB', 'RWB', 'LB', 'CB', 'RB']: #5\n",
    "                index = 2 #DEFENDER\n",
    "            elif position in ['GK']: #1\n",
    "                index = 3 #GOALKEEPER\n",
    "            else:\n",
    "                continue \n",
    "            position_count[index] += 1 \n",
    "        # This will count which was the most repeated position and assign it\n",
    "        # to the player\n",
    "        return position_count.index(max(position_count))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:26:53.126698Z",
     "start_time": "2020-10-13T04:26:53.106231Z"
    }
   },
   "outputs": [],
   "source": [
    "df_reference = pd.DataFrame(df_filter.apply(combine_positions, axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:29:50.912717Z",
     "start_time": "2020-10-13T04:29:50.907228Z"
    }
   },
   "outputs": [],
   "source": [
    "df_reference.columns = ['reference']\n",
    "df_evaluation['reference'] = df_reference['reference']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:42:21.826520Z",
     "start_time": "2020-10-13T04:42:21.820015Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "665"
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_evaluation.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:46:54.125026Z",
     "start_time": "2020-10-13T04:46:54.115566Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "65"
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_evaluation[(df_evaluation['k_mean'] == 0) & (df_evaluation['reference'] == 0)].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:46:54.315238Z",
     "start_time": "2020-10-13T04:46:54.307617Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "188"
      ]
     },
     "execution_count": 251,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_evaluation[df_evaluation['reference'] == 0].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-13T04:46:54.868208Z",
     "start_time": "2020-10-13T04:46:54.855532Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.34574468085106386"
      ]
     },
     "execution_count": 252,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_evaluation[(df_evaluation['k_mean'] == 0) & (df_evaluation['reference'] == 0)].shape[0] / df_evaluation[df_evaluation['reference'] == 0].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
